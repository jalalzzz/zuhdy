{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\account\\\\addresses.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect, useState } from 'react'; // third-party\n\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AddressCard from '~/components/shared/AddressCard';\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport PageTitle from '~/components/shared/PageTitle';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\n\nfunction Page() {\n  const intl = useIntl();\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState([]);\n\n  const delAddress = async addressId => {\n    await accountApi.delAddress(addressId);\n    await accountApi.getAddresses().then(setAddresses);\n  };\n\n  useEffect(() => {\n    let canceled = false;\n    accountApi.getAddresses().then(result => {\n      if (canceled) {\n        return;\n      }\n\n      setAddresses(result);\n    });\n    return () => {\n      canceled = true;\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"addresses-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'HEADER_ADDRESSES'\n  })), __jsx(AppLink, {\n    href: url.accountAddressNew(),\n    className: \"addresses-list__item addresses-list__item--new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"addresses-list__plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"btn btn-secondary btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_NEW\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"addresses-list__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), addresses.map((address, index) => __jsx(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(AsyncAction, {\n    action: () => delAddress(address.id),\n    render: ({\n      run,\n      loading\n    }) => __jsx(AddressCard, {\n      className: \"addresses-list__item\",\n      address: address,\n      label: address.default ? __jsx(FormattedMessage, {\n        id: \"TEXT_DEFAULT_ADDRESS\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 58\n        }\n      }) : '',\n      loading: loading,\n      footer: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, __jsx(AppLink, {\n        href: url.accountAddressEdit(address),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"LINK_EDIT_ADDRESS\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }\n      })), \"\\xA0\\xA0\", __jsx(AppLink, {\n        anchor: true,\n        onClick: event => {\n          event.preventDefault();\n          run();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"LINK_REMOVE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"addresses-list__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))));\n}\n\nPage.Layout = AccountLayout;\nexport default Page;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/account/addresses.tsx"],"names":["React","useEffect","useState","FormattedMessage","useIntl","AccountLayout","AddressCard","AppLink","AsyncAction","PageTitle","url","accountApi","Page","intl","addresses","setAddresses","delAddress","addressId","getAddresses","then","canceled","result","formatMessage","id","accountAddressNew","map","address","index","run","loading","default","accountAddressEdit","event","preventDefault","Layout"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C,C,CACA;;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAGA,SAASC,IAAT,GAAgB;AACZ,QAAMC,IAAI,GAAGT,OAAO,EAApB;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAa,EAAb,CAA1C;;AAEA,QAAMc,UAAU,GAAG,MAAOC,SAAP,IAA6B;AAC5C,UAAMN,UAAU,CAACK,UAAX,CAAsBC,SAAtB,CAAN;AACA,UAAMN,UAAU,CAACO,YAAX,GAA0BC,IAA1B,CAA+BJ,YAA/B,CAAN;AACH,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImB,QAAQ,GAAG,KAAf;AAEAT,IAAAA,UAAU,CAACO,YAAX,GAA0BC,IAA1B,CAAgCE,MAAD,IAAY;AACvC,UAAID,QAAJ,EAAc;AACV;AACH;;AAEDL,MAAAA,YAAY,CAACM,MAAD,CAAZ;AACH,KAND;AAQA,WAAO,MAAM;AACTD,MAAAA,QAAQ,GAAG,IAAX;AACH,KAFD;AAGH,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYP,IAAI,CAACS,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAAZ,CADJ,EAGI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEb,GAAG,CAACc,iBAAJ,EAAf;AAAwC,IAAA,SAAS,EAAC,gDAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAHJ,EASI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAWKV,SAAS,CAACW,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KACX,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AACI,IAAA,MAAM,EAAE,MAAMX,UAAU,CAACU,OAAO,CAACH,EAAT,CAD5B;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEK,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,KACJ,MAAC,WAAD;AACI,MAAA,SAAS,EAAC,sBADd;AAEI,MAAA,OAAO,EAAEH,OAFb;AAGI,MAAA,KAAK,EAAEA,OAAO,CAACI,OAAR,GAAkB,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,GAAmE,EAH9E;AAII,MAAA,OAAO,EAAED,OAJb;AAKI,MAAA,MAAM,EACF,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,OAAD;AAAS,QAAA,IAAI,EAAEnB,GAAG,CAACqB,kBAAJ,CAAuBL,OAAvB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,cAMI,MAAC,OAAD;AAAS,QAAA,MAAM,MAAf;AAAgB,QAAA,OAAO,EAAGM,KAAD,IAAW;AAAEA,UAAAA,KAAK,CAACC,cAAN;AAAwBL,UAAAA,GAAG;AAAK,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANJ,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAyBI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADH,CAXL,CADJ;AA2CH;;AAEDhB,IAAI,CAACsB,MAAL,GAAc7B,aAAd;AAEA,eAAeO,IAAf","sourcesContent":["// react\nimport React, { useEffect, useState } from 'react';\n// third-party\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AddressCard from '~/components/shared/AddressCard';\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport PageTitle from '~/components/shared/PageTitle';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\nimport { IAddress } from '~/interfaces/address';\n\nfunction Page() {\n    const intl = useIntl();\n    const [addresses, setAddresses] = useState<IAddress[]>([]);\n\n    const delAddress = async (addressId: number) => {\n        await accountApi.delAddress(addressId);\n        await accountApi.getAddresses().then(setAddresses);\n    };\n\n    useEffect(() => {\n        let canceled = false;\n\n        accountApi.getAddresses().then((result) => {\n            if (canceled) {\n                return;\n            }\n\n            setAddresses(result);\n        });\n\n        return () => {\n            canceled = true;\n        };\n    }, []);\n\n    return (\n        <div className=\"addresses-list\">\n            <PageTitle>{intl.formatMessage({ id: 'HEADER_ADDRESSES' })}</PageTitle>\n\n            <AppLink href={url.accountAddressNew()} className=\"addresses-list__item addresses-list__item--new\">\n                <div className=\"addresses-list__plus\" />\n                <div className=\"btn btn-secondary btn-sm\">\n                    <FormattedMessage id=\"BUTTON_ADD_NEW\" />\n                </div>\n            </AppLink>\n            <div className=\"addresses-list__divider\" />\n\n            {addresses.map((address, index) => (\n                <React.Fragment key={index}>\n                    <AsyncAction\n                        action={() => delAddress(address.id)}\n                        render={({ run, loading }) => (\n                            <AddressCard\n                                className=\"addresses-list__item\"\n                                address={address}\n                                label={address.default ? <FormattedMessage id=\"TEXT_DEFAULT_ADDRESS\" /> : ''}\n                                loading={loading}\n                                footer={(\n                                    <React.Fragment>\n                                        <AppLink href={url.accountAddressEdit(address)}>\n                                            <FormattedMessage id=\"LINK_EDIT_ADDRESS\" />\n                                        </AppLink>\n                                        &nbsp;&nbsp;\n                                        {/* eslint-disable-next-line */}\n                                        <AppLink anchor onClick={(event) => { event.preventDefault(); run(); }}>\n                                            <FormattedMessage id=\"LINK_REMOVE\" />\n                                        </AppLink>\n                                    </React.Fragment>\n                                )}\n                            />\n                        )}\n                    />\n\n                    <div className=\"addresses-list__divider\" />\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\nPage.Layout = AccountLayout;\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}