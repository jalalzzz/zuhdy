{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\header\\\\Dropdown.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport { ArrowDownSm7x5Svg } from '~/svg';\nimport { useGlobalMousedown } from '~/services/hooks';\n\nfunction Dropdown(props) {\n  _s();\n\n  var _this = this;\n\n  var label = props.label,\n      title = props.title,\n      _props$items = props.items,\n      items = _props$items === void 0 ? [] : _props$items,\n      onItemClick = props.onItemClick;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var rootRef = useRef(null);\n  var hasLabel = !!label;\n  var hasTitle = !!title;\n  var classes = classNames('topbar__item-button topbar__menu', {\n    'topbar__menu--open': isOpen\n  });\n\n  var handleButtonClick = function handleButtonClick() {\n    setIsOpen(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleItemClick = function handleItemClick(item) {\n    setIsOpen(false);\n\n    if (onItemClick) {\n      onItemClick(item);\n    }\n  };\n\n  useGlobalMousedown(function (event) {\n    if (rootRef.current && !rootRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  }, [setIsOpen, rootRef]);\n  return __jsx(\"div\", {\n    className: classes,\n    ref: rootRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"topbar__button topbar__button--has-arrow topbar__menu-button\",\n    type: \"button\",\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, hasLabel && __jsx(\"span\", {\n    className: \"topbar__button-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }\n  }, label), hasTitle && __jsx(\"span\", {\n    className: \"topbar__button-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 30\n    }\n  }, title), __jsx(\"span\", {\n    className: \"topbar__button-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(ArrowDownSm7x5Svg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"topbar__menu-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, items.map(function (item, index) {\n    return __jsx(\"button\", {\n      key: index,\n      className: \"topbar__menu-item\",\n      type: \"button\",\n      onClick: function onClick() {\n        return handleItemClick(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, !!item.image && __jsx(AppImage, {\n      src: item.image,\n      alt: item.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, item.title));\n  })));\n}\n\n_s(Dropdown, \"3v6t4F2E63ZWbFvdUDLPGZEt+gI=\", false, function () {\n  return [useGlobalMousedown];\n});\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/header/Dropdown.tsx"],"names":["React","useRef","useState","classNames","AppImage","ArrowDownSm7x5Svg","useGlobalMousedown","Dropdown","props","label","title","items","onItemClick","isOpen","setIsOpen","rootRef","hasLabel","hasTitle","classes","handleButtonClick","prev","handleItemClick","item","event","current","contains","target","map","index","image"],"mappings":"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","sourcesContent":["// react\nimport React, { PropsWithChildren, useRef, useState } from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport AppImage from '~/components/shared/AppImage';\nimport { ArrowDownSm7x5Svg } from '~/svg';\nimport { useGlobalMousedown } from '~/services/hooks';\n\nexport interface IDropdownItem {\n    title: string;\n    image?: string;\n}\n\ninterface Props<T extends IDropdownItem> extends PropsWithChildren<{}> {\n    label?: React.ReactNode;\n    title?: React.ReactNode;\n    items?: T[];\n    onItemClick?: (item: T) => void;\n}\n\nfunction Dropdown<T extends IDropdownItem>(props: Props<T>) {\n    const {\n        label,\n        title,\n        items = [],\n        onItemClick,\n    } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const rootRef = useRef<HTMLDivElement>(null);\n\n    const hasLabel = !!label;\n    const hasTitle = !!title;\n\n    const classes = classNames('topbar__item-button topbar__menu', {\n        'topbar__menu--open': isOpen,\n    });\n\n    const handleButtonClick = () => {\n        setIsOpen((prev) => !prev);\n    };\n\n    const handleItemClick = (item: T) => {\n        setIsOpen(false);\n\n        if (onItemClick) {\n            onItemClick(item);\n        }\n    };\n\n    useGlobalMousedown((event) => {\n        if (rootRef.current && !rootRef.current.contains(event.target as HTMLElement)) {\n            setIsOpen(false);\n        }\n    }, [setIsOpen, rootRef]);\n\n    return (\n        <div className={classes} ref={rootRef}>\n            <button\n                className=\"topbar__button topbar__button--has-arrow topbar__menu-button\"\n                type=\"button\"\n                onClick={handleButtonClick}\n            >\n                {hasLabel && <span className=\"topbar__button-label\">{label}</span>}\n                {hasTitle && <span className=\"topbar__button-title\">{title}</span>}\n                <span className=\"topbar__button-arrow\">\n                    <ArrowDownSm7x5Svg />\n                </span>\n            </button>\n            <div className=\"topbar__menu-body\">\n                {items.map((item, index) => (\n                    <button\n                        key={index}\n                        className=\"topbar__menu-item\"\n                        type=\"button\"\n                        onClick={() => handleItemClick(item)}\n                    >\n                        {!!item.image && (\n                            <AppImage src={item.image} alt={item.title} />\n                        )}\n                        <span>{item.title}</span>\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}