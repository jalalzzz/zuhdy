{"ast":null,"code":"/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { AccountApi } from '~/api/base';\nimport { accountChangePassword, accountEditProfile, accountSignIn, accountSignOut, accountSignUp, addAddress, delAddress, editAddress, getAddress, getAddresses, getDefaultAddress, getOrderById, getOrderByToken, getOrdersList } from '~/fake-server/endpoints';\nexport class FakeAccountApi extends AccountApi {\n  signIn(email, password) {\n    return accountSignIn(email, password);\n  }\n\n  signUp(email, password) {\n    return accountSignUp(email, password);\n  }\n\n  signOut() {\n    return accountSignOut();\n  }\n\n  editProfile(data) {\n    return accountEditProfile(data);\n  }\n\n  changePassword(oldPassword, newPassword) {\n    return accountChangePassword(oldPassword, newPassword);\n  }\n\n  addAddress(data) {\n    return addAddress(data);\n  }\n\n  editAddress(addressId, data) {\n    return editAddress(addressId, data);\n  }\n\n  delAddress(addressId) {\n    return delAddress(addressId);\n  }\n\n  getDefaultAddress() {\n    return getDefaultAddress();\n  }\n\n  getAddress(addressId) {\n    return getAddress(addressId);\n  }\n\n  getAddresses() {\n    return getAddresses();\n  }\n\n  getOrdersList(options) {\n    return getOrdersList(options);\n  }\n\n  getOrderById(id) {\n    return getOrderById(id);\n  }\n\n  getOrderByToken(token) {\n    return getOrderByToken(token);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/api/fake-api/fake-account.api.ts"],"names":["AccountApi","accountChangePassword","accountEditProfile","accountSignIn","accountSignOut","accountSignUp","addAddress","delAddress","editAddress","getAddress","getAddresses","getDefaultAddress","getOrderById","getOrderByToken","getOrdersList","FakeAccountApi","signIn","email","password","signUp","signOut","editProfile","data","changePassword","oldPassword","newPassword","addressId","options","id","token"],"mappings":"AAAA;AAEA;AAKA,SACIA,UADJ,QAKO,YALP;AAMA,SACIC,qBADJ,EAEIC,kBAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,UAPJ,EAQIC,WARJ,EASIC,UATJ,EAUIC,YAVJ,EAWIC,iBAXJ,EAYIC,YAZJ,EAaIC,eAbJ,EAcIC,aAdJ,QAeO,yBAfP;AAiBA,OAAO,MAAMC,cAAN,SAA6Bf,UAA7B,CAAwC;AAC3CgB,EAAAA,MAAM,CAACC,KAAD,EAAgBC,QAAhB,EAAkD;AACpD,WAAOf,aAAa,CAACc,KAAD,EAAQC,QAAR,CAApB;AACH;;AAEDC,EAAAA,MAAM,CAACF,KAAD,EAAgBC,QAAhB,EAAkD;AACpD,WAAOb,aAAa,CAACY,KAAD,EAAQC,QAAR,CAApB;AACH;;AAEDE,EAAAA,OAAO,GAAkB;AACrB,WAAOhB,cAAc,EAArB;AACH;;AAEDiB,EAAAA,WAAW,CAACC,IAAD,EAAyC;AAChD,WAAOpB,kBAAkB,CAACoB,IAAD,CAAzB;AACH;;AAEDC,EAAAA,cAAc,CAACC,WAAD,EAAsBC,WAAtB,EAA0D;AACpE,WAAOxB,qBAAqB,CAACuB,WAAD,EAAcC,WAAd,CAA5B;AACH;;AAEDnB,EAAAA,UAAU,CAACgB,IAAD,EAA4C;AAClD,WAAOhB,UAAU,CAACgB,IAAD,CAAjB;AACH;;AAEDd,EAAAA,WAAW,CAACkB,SAAD,EAAoBJ,IAApB,EAA+D;AACtE,WAAOd,WAAW,CAACkB,SAAD,EAAYJ,IAAZ,CAAlB;AACH;;AAEDf,EAAAA,UAAU,CAACmB,SAAD,EAAmC;AACzC,WAAOnB,UAAU,CAACmB,SAAD,CAAjB;AACH;;AAEDf,EAAAA,iBAAiB,GAA6B;AAC1C,WAAOA,iBAAiB,EAAxB;AACH;;AAEDF,EAAAA,UAAU,CAACiB,SAAD,EAAuC;AAC7C,WAAOjB,UAAU,CAACiB,SAAD,CAAjB;AACH;;AAEDhB,EAAAA,YAAY,GAAwB;AAChC,WAAOA,YAAY,EAAnB;AACH;;AAEDI,EAAAA,aAAa,CAACa,OAAD,EAAwD;AACjE,WAAOb,aAAa,CAACa,OAAD,CAApB;AACH;;AAEDf,EAAAA,YAAY,CAACgB,EAAD,EAA8B;AACtC,WAAOhB,YAAY,CAACgB,EAAD,CAAnB;AACH;;AAEDf,EAAAA,eAAe,CAACgB,KAAD,EAAiC;AAC5C,WAAOhB,eAAe,CAACgB,KAAD,CAAtB;AACH;;AAvD0C","sourcesContent":["/* eslint-disable import/prefer-default-export,class-methods-use-this */\n\n// application\nimport { IAddress } from '~/interfaces/address';\nimport { IOrder } from '~/interfaces/order';\nimport { IOrdersList } from '~/interfaces/list';\nimport { IUser } from '~/interfaces/user';\nimport {\n    AccountApi,\n    IEditAddressData,\n    IEditProfileData,\n    IGetOrdersListOptions,\n} from '~/api/base';\nimport {\n    accountChangePassword,\n    accountEditProfile,\n    accountSignIn,\n    accountSignOut,\n    accountSignUp,\n    addAddress,\n    delAddress,\n    editAddress,\n    getAddress,\n    getAddresses,\n    getDefaultAddress,\n    getOrderById,\n    getOrderByToken,\n    getOrdersList,\n} from '~/fake-server/endpoints';\n\nexport class FakeAccountApi extends AccountApi {\n    signIn(email: string, password: string): Promise<IUser> {\n        return accountSignIn(email, password);\n    }\n\n    signUp(email: string, password: string): Promise<IUser> {\n        return accountSignUp(email, password);\n    }\n\n    signOut(): Promise<void> {\n        return accountSignOut();\n    }\n\n    editProfile(data: IEditProfileData): Promise<IUser> {\n        return accountEditProfile(data);\n    }\n\n    changePassword(oldPassword: string, newPassword: string): Promise<void> {\n        return accountChangePassword(oldPassword, newPassword);\n    }\n\n    addAddress(data: IEditAddressData): Promise<IAddress> {\n        return addAddress(data);\n    }\n\n    editAddress(addressId: number, data: IEditAddressData): Promise<IAddress> {\n        return editAddress(addressId, data);\n    }\n\n    delAddress(addressId: number): Promise<void> {\n        return delAddress(addressId);\n    }\n\n    getDefaultAddress(): Promise<IAddress | null> {\n        return getDefaultAddress();\n    }\n\n    getAddress(addressId: number): Promise<IAddress> {\n        return getAddress(addressId);\n    }\n\n    getAddresses(): Promise<IAddress[]> {\n        return getAddresses();\n    }\n\n    getOrdersList(options?: IGetOrdersListOptions): Promise<IOrdersList> {\n        return getOrdersList(options);\n    }\n\n    getOrderById(id: number): Promise<IOrder> {\n        return getOrderById(id);\n    }\n\n    getOrderByToken(token: string): Promise<IOrder> {\n        return getOrderByToken(token);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}