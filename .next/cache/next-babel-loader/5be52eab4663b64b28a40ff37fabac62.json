{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\blocks\\\\BlockSlideshow.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport AppSlick from '~/components/shared/AppSlick';\nimport { baseUrl } from '~/services/utils';\nvar slickSettings = {\n  dots: true,\n  arrows: false,\n  infinite: true,\n  speed: 400,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nfunction BlockSlideshow(props) {\n  var _this = this;\n\n  var slides = props.slides;\n  return __jsx(\"div\", {\n    className: \"block block-slideshow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"block-slideshow__carousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(AppSlick, _extends({}, slickSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), slides.map(function (slide, slideIdx) {\n    return __jsx(AppLink, {\n      href: slide.url,\n      key: slideIdx,\n      className: \"block-slideshow__item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, __jsx(\"span\", {\n      className: classNames('block-slideshow__item-image', 'block-slideshow__item-image--desktop', 'reflect-rtl'),\n      style: {\n        backgroundImage: \"url(\".concat(baseUrl(slide.desktopImage), \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }), __jsx(\"span\", {\n      className: classNames('block-slideshow__item-image', 'block-slideshow__item-image--mobile', 'reflect-rtl'),\n      style: {\n        backgroundImage: \"url(\".concat(baseUrl(slide.mobileImage), \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }), slide.offer && __jsx(\"span\", {\n      className: \"block-slideshow__item-offer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, slide.offer), __jsx(\"span\", {\n      className: \"block-slideshow__item-title\",\n      dangerouslySetInnerHTML: {\n        __html: slide.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }), __jsx(\"span\", {\n      className: \"block-slideshow__item-details\",\n      dangerouslySetInnerHTML: {\n        __html: slide.details\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }), __jsx(\"span\", {\n      className: \"block-slideshow__item-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, slide.buttonLabel));\n  })))));\n}\n\n_c = BlockSlideshow;\nexport default _c2 = React.memo(BlockSlideshow);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlockSlideshow\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/blocks/BlockSlideshow.tsx"],"names":["React","classNames","AppLink","AppSlick","baseUrl","slickSettings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","BlockSlideshow","props","slides","map","slide","slideIdx","url","backgroundImage","desktopImage","mobileImage","offer","__html","title","details","buttonLabel","memo"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAsC,8BAAtC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAgBA,IAAMC,aAA0B,GAAG;AAC/BC,EAAAA,IAAI,EAAE,IADyB;AAE/BC,EAAAA,MAAM,EAAE,KAFuB;AAG/BC,EAAAA,QAAQ,EAAE,IAHqB;AAI/BC,EAAAA,KAAK,EAAE,GAJwB;AAK/BC,EAAAA,YAAY,EAAE,CALiB;AAM/BC,EAAAA,cAAc,EAAE;AANe,CAAnC;;AASA,SAASC,cAAT,CAAwBC,KAAxB,EAAsC;AAAA;;AAAA,MAC1BC,MAD0B,GACfD,KADe,CAC1BC,MAD0B;AAGlC,SACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD,eAAcT,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKS,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,QAAR;AAAA,WACR,MAAC,OAAD;AAAS,MAAA,IAAI,EAAED,KAAK,CAACE,GAArB;AAA0B,MAAA,GAAG,EAAED,QAA/B;AAAyC,MAAA,SAAS,EAAC,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAEhB,UAAU,CACjB,6BADiB,EAEjB,sCAFiB,EAGjB,aAHiB,CADzB;AAMI,MAAA,KAAK,EAAE;AAAEkB,QAAAA,eAAe,gBAASf,OAAO,CAACY,KAAK,CAACI,YAAP,CAAhB;AAAjB,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI;AACI,MAAA,SAAS,EAAEnB,UAAU,CACjB,6BADiB,EAEjB,qCAFiB,EAGjB,aAHiB,CADzB;AAMI,MAAA,KAAK,EAAE;AAAEkB,QAAAA,eAAe,gBAASf,OAAO,CAACY,KAAK,CAACK,WAAP,CAAhB;AAAjB,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAiBKL,KAAK,CAACM,KAAN,IACG;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CN,KAAK,CAACM,KAArD,CAlBR,EAoBI;AACI,MAAA,SAAS,EAAC,6BADd;AAEI,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEP,KAAK,CAACQ;AAAhB,OAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,EAwBI;AACI,MAAA,SAAS,EAAC,+BADd;AAEI,MAAA,uBAAuB,EAAE;AAAED,QAAAA,MAAM,EAAEP,KAAK,CAACS;AAAhB,OAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,EA4BI;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDT,KAAK,CAACU,WAAtD,CA5BJ,CADQ;AAAA,GAAX,CADL,CADJ,CADJ,CADJ,CADJ;AA0CH;;KA7CQd,c;AA+CT,qBAAeZ,KAAK,CAAC2B,IAAN,CAAWf,cAAX,CAAf","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport AppSlick, { ISlickProps } from '~/components/shared/AppSlick';\nimport { baseUrl } from '~/services/utils';\n\nexport interface IBlockSlideshowSlide {\n    url: string;\n    desktopImage: string;\n    mobileImage: string;\n    offer?: string;\n    title: string;\n    details: string;\n    buttonLabel: string;\n}\n\ninterface Props {\n    slides: IBlockSlideshowSlide[];\n}\n\nconst slickSettings: ISlickProps = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n};\n\nfunction BlockSlideshow(props: Props) {\n    const { slides } = props;\n\n    return (\n        <div className=\"block block-slideshow\">\n            <div className=\"container\">\n                <div className=\"block-slideshow__carousel\">\n                    <AppSlick {...slickSettings}>\n                        {slides.map((slide, slideIdx) => (\n                            <AppLink href={slide.url} key={slideIdx} className=\"block-slideshow__item\">\n                                <span\n                                    className={classNames(\n                                        'block-slideshow__item-image',\n                                        'block-slideshow__item-image--desktop',\n                                        'reflect-rtl',\n                                    )}\n                                    style={{ backgroundImage: `url(${baseUrl(slide.desktopImage)})` }}\n                                />\n                                <span\n                                    className={classNames(\n                                        'block-slideshow__item-image',\n                                        'block-slideshow__item-image--mobile',\n                                        'reflect-rtl',\n                                    )}\n                                    style={{ backgroundImage: `url(${baseUrl(slide.mobileImage)})` }}\n                                />\n                                {slide.offer && (\n                                    <span className=\"block-slideshow__item-offer\">{slide.offer}</span>\n                                )}\n                                <span\n                                    className=\"block-slideshow__item-title\"\n                                    dangerouslySetInnerHTML={{ __html: slide.title }}\n                                />\n                                <span\n                                    className=\"block-slideshow__item-details\"\n                                    dangerouslySetInnerHTML={{ __html: slide.details }}\n                                />\n                                <span className=\"block-slideshow__item-button\">{slide.buttonLabel}</span>\n                            </AppLink>\n                        ))}\n                    </AppSlick>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(BlockSlideshow);\n"]},"metadata":{},"sourceType":"module"}