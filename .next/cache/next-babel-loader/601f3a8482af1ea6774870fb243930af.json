{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\shared\\\\Collapse.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nfunction Collapse(props) {\n  const {\n    toggleClass,\n    render,\n    open\n  } = props;\n  const {\n    0: init,\n    1: setInit\n  } = useState(false);\n  const itemRef = useRef(null);\n  const contentRef = useRef(null);\n  const expand = useCallback((immediate = false) => {\n    const item = itemRef.current;\n    const content = contentRef.current || item;\n\n    if (!item || !content) {\n      return;\n    }\n\n    if (immediate) {\n      item.classList.add(toggleClass);\n      content.style.height = '';\n    } else {\n      const startHeight = content.getBoundingClientRect().height;\n      item.classList.add(toggleClass);\n      const endHeight = content.getBoundingClientRect().height;\n      content.style.height = `${startHeight}px`;\n      content.getBoundingClientRect(); // force reflow\n\n      content.style.height = `${endHeight}px`;\n\n      if (content.getBoundingClientRect().height === endHeight) {\n        content.style.height = '';\n      }\n    }\n  }, [toggleClass, itemRef, contentRef]);\n  const collapse = useCallback((immediate = false) => {\n    const item = itemRef.current;\n    const content = contentRef.current || item;\n\n    if (!item || !content) {\n      return;\n    }\n\n    if (immediate) {\n      item.classList.remove(toggleClass);\n      content.style.height = '';\n    } else {\n      const startHeight = content.getBoundingClientRect().height;\n      content.style.height = `${startHeight}px`;\n      item.classList.remove(toggleClass);\n      content.getBoundingClientRect(); // force reflow\n\n      content.style.height = '';\n    }\n  }, [toggleClass, itemRef, contentRef]);\n  const handleToggle = useCallback(() => {\n    const item = itemRef.current;\n\n    if (!item) {\n      return;\n    }\n\n    if (item.classList.contains(toggleClass)) {\n      collapse();\n    } else {\n      expand();\n    }\n  }, [expand, collapse, toggleClass, itemRef]);\n  useEffect(() => {\n    if (typeof open === 'boolean') {\n      if (open) {\n        expand(!init);\n      } else {\n        collapse(!init);\n      }\n    }\n\n    setInit(true);\n  }, [expand, collapse, open, init]);\n  useEffect(() => {\n    const item = itemRef.current;\n    const content = contentRef.current || item;\n\n    if (!content) {\n      return () => {};\n    }\n\n    const handleTransitionEnd = event => {\n      if (content && event.propertyName === 'height') {\n        content.style.height = '';\n      }\n    };\n\n    content.addEventListener('transitionend', handleTransitionEnd);\n    return () => {\n      if (!content) {\n        return;\n      }\n\n      content.removeEventListener('transitionend', handleTransitionEnd);\n    };\n  }, []);\n  return useMemo(() => {\n    if (render) {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, render({\n        toggle: handleToggle,\n        setItemRef: itemRef,\n        setContentRef: contentRef\n      }));\n    }\n\n    return null;\n  }, [render, handleToggle, itemRef, contentRef]);\n}\n\nexport default Collapse;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shared/Collapse.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Collapse","props","toggleClass","render","open","init","setInit","itemRef","contentRef","expand","immediate","item","current","content","classList","add","style","height","startHeight","getBoundingClientRect","endHeight","collapse","remove","handleToggle","contains","handleTransitionEnd","event","propertyName","addEventListener","removeEventListener","toggle","setItemRef","setContentRef"],"mappings":"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","sourcesContent":["// react\nimport React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nexport interface ICollapseRenderFnData<T extends HTMLElement, P extends HTMLElement> {\n    toggle: () => void;\n    setItemRef: React.Ref<T>;\n    setContentRef: React.Ref<P>;\n}\n\nexport type ICollapseRenderFn<T extends HTMLElement, P extends HTMLElement>\n    = (data: ICollapseRenderFnData<T, P>) => React.ReactNode;\n\ninterface Props<T extends HTMLElement, P extends HTMLElement> {\n    toggleClass: string;\n    render: ICollapseRenderFn<T, P>;\n    open?: boolean;\n}\n\nfunction Collapse<T extends HTMLElement, P extends HTMLElement>(props: Props<T, P>) {\n    const { toggleClass, render, open } = props;\n    const [init, setInit] = useState(false);\n    const itemRef = useRef<T>(null);\n    const contentRef = useRef<P>(null);\n\n    const expand = useCallback((immediate = false) => {\n        const item = itemRef.current;\n        const content = contentRef.current || item;\n\n        if (!item || !content) {\n            return;\n        }\n\n        if (immediate) {\n            item.classList.add(toggleClass);\n            content.style.height = '';\n        } else {\n            const startHeight = content.getBoundingClientRect().height;\n\n            item.classList.add(toggleClass);\n\n            const endHeight = content.getBoundingClientRect().height;\n\n            content.style.height = `${startHeight}px`;\n            content.getBoundingClientRect(); // force reflow\n            content.style.height = `${endHeight}px`;\n\n            if (content.getBoundingClientRect().height === endHeight) {\n                content.style.height = '';\n            }\n        }\n    }, [toggleClass, itemRef, contentRef]);\n\n    const collapse = useCallback((immediate = false) => {\n        const item = itemRef.current;\n        const content = contentRef.current || item;\n\n        if (!item || !content) {\n            return;\n        }\n\n        if (immediate) {\n            item.classList.remove(toggleClass);\n            content.style.height = '';\n        } else {\n            const startHeight = content.getBoundingClientRect().height;\n\n            content.style.height = `${startHeight}px`;\n            item.classList.remove(toggleClass);\n\n            content.getBoundingClientRect(); // force reflow\n            content.style.height = '';\n        }\n    }, [toggleClass, itemRef, contentRef]);\n\n    const handleToggle = useCallback(() => {\n        const item = itemRef.current;\n\n        if (!item) {\n            return;\n        }\n\n        if (item.classList.contains(toggleClass)) {\n            collapse();\n        } else {\n            expand();\n        }\n    }, [expand, collapse, toggleClass, itemRef]);\n\n    useEffect(() => {\n        if (typeof open === 'boolean') {\n            if (open) {\n                expand(!init);\n            } else {\n                collapse(!init);\n            }\n        }\n\n        setInit(true);\n    }, [expand, collapse, open, init]);\n\n    useEffect(() => {\n        const item = itemRef.current;\n        const content = contentRef.current || item;\n\n        if (!content) {\n            return () => {};\n        }\n\n        const handleTransitionEnd = (event: TransitionEvent) => {\n            if (content && event.propertyName === 'height') {\n                content.style.height = '';\n            }\n        };\n\n        content.addEventListener('transitionend', handleTransitionEnd);\n\n        return () => {\n            if (!content) {\n                return;\n            }\n\n            content.removeEventListener('transitionend', handleTransitionEnd);\n        };\n    }, []);\n\n    return useMemo(() => {\n        if (render) {\n            return (\n                <React.Fragment>\n                    {render({\n                        toggle: handleToggle,\n                        setItemRef: itemRef,\n                        setContentRef: contentRef,\n                    })}\n                </React.Fragment>\n            );\n        }\n\n        return null;\n    }, [render, handleToggle, itemRef, contentRef]);\n}\n\nexport default Collapse;\n"]},"metadata":{},"sourceType":"module"}