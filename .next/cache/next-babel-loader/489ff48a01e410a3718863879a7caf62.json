{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\services\\\\i18n\\\\provider.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useEffect, useMemo } from 'react'; // third-party\n\nimport { IntlProvider } from 'react-intl'; // application\n\nimport GlobalIntlProvider from '~/services/i18n/global-intl';\nimport { LanguageLocaleContext, LanguageSetLocaleContext } from '~/services/i18n/context';\nimport { useOriginalRouter } from '~/services/router';\nimport { getDefaultLanguage, getDefaultLocale, getLanguageByPath, loadMessages } from '~/services/i18n/utils';\nvar cache = {};\nexport function getLanguageInitialProps(_x) {\n  return _getLanguageInitialProps.apply(this, arguments);\n}\n\nfunction _getLanguageInitialProps() {\n  _getLanguageInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(language) {\n    var locale;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            locale = language ? language.locale : getDefaultLocale();\n\n            if (!true) {\n              _context.next = 7;\n              break;\n            }\n\n            if (!cache[locale]) {\n              cache[locale] = loadMessages(locale);\n            }\n\n            _context.next = 5;\n            return cache[locale];\n\n          case 5:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              messages: _context.t0\n            });\n\n          case 7:\n            _context.next = 9;\n            return loadMessages(locale);\n\n          case 9:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", {\n              messages: _context.t1\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getLanguageInitialProps.apply(this, arguments);\n}\n\nfunction LanguageProvider(props) {\n  _s();\n\n  var children = props.children,\n      messages = props.messages;\n  var router = useOriginalRouter();\n  var language = useMemo(function () {\n    return getLanguageByPath(router.asPath) || getDefaultLanguage();\n  }, [router.asPath]);\n  var locale = language.locale; // Puts the initial translation into the cache.\n\n  useEffect(function () {\n    if (!cache[locale]) {\n      cache[locale] = Promise.resolve(messages);\n    }\n  }, [locale, messages]);\n  var setLocale = useCallback(function (newLocale) {\n    setTimeout(function () {\n      var language = getLanguageByPath(router.asPath);\n      var path = router.asPath;\n\n      if (language) {\n        path = \"/\".concat(router.asPath.substr(language.locale.length + 2));\n      }\n\n      var query = router.query;\n      var newPath = newLocale === getDefaultLocale() ? path : \"/\".concat(newLocale).concat(path);\n\n      if (newLocale !== getDefaultLocale()) {\n        query.lang = newLocale;\n      } else {\n        delete query.lang;\n      }\n\n      router.push({\n        pathname: router.pathname,\n        query: query\n      }, newPath).then();\n    }, 0);\n  }, [router]);\n  useEffect(function () {\n    document.documentElement.lang = language.locale;\n    document.documentElement.dir = language.direction;\n  }, [language]);\n  return __jsx(LanguageLocaleContext.Provider, {\n    value: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(LanguageSetLocaleContext.Provider, {\n    value: setLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(IntlProvider, {\n    locale: locale,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, __jsx(GlobalIntlProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, children))));\n}\n\n_s(LanguageProvider, \"WJwwRlIfZ8f2+C/7w3flSYLn6Zw=\", false, function () {\n  return [useOriginalRouter];\n});\n\n_c = LanguageProvider;\nexport default LanguageProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/services/i18n/provider.tsx"],"names":["React","useCallback","useEffect","useMemo","IntlProvider","GlobalIntlProvider","LanguageLocaleContext","LanguageSetLocaleContext","useOriginalRouter","getDefaultLanguage","getDefaultLocale","getLanguageByPath","loadMessages","cache","getLanguageInitialProps","language","locale","messages","LanguageProvider","props","children","router","asPath","Promise","resolve","setLocale","newLocale","setTimeout","path","substr","length","query","newPath","lang","push","pathname","then","document","documentElement","dir","direction"],"mappings":"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","sourcesContent":["// react\nimport React, {\n    PropsWithChildren,\n    useCallback,\n    useEffect,\n    useMemo,\n} from 'react';\n// third-party\nimport { IntlProvider } from 'react-intl';\n// application\nimport GlobalIntlProvider from '~/services/i18n/global-intl';\nimport { ILanguage } from '~/interfaces/language';\nimport { LanguageLocaleContext, LanguageSetLocaleContext } from '~/services/i18n/context';\nimport { useOriginalRouter } from '~/services/router';\nimport {\n    getDefaultLanguage,\n    getDefaultLocale,\n    getLanguageByPath,\n    loadMessages,\n} from '~/services/i18n/utils';\n\nexport interface ILanguageProviderProps {\n    messages: Record<string, string>;\n}\n\nconst cache: Record<string, Promise<Record<string, string>>> = {};\n\nexport async function getLanguageInitialProps(language: ILanguage | null): Promise<ILanguageProviderProps> {\n    const locale = language ? language.locale : getDefaultLocale();\n\n    if (process.browser) {\n        if (!cache[locale]) {\n            cache[locale] = loadMessages(locale);\n        }\n\n        return { messages: await cache[locale] };\n    }\n\n    return {\n        messages: await loadMessages(locale),\n    };\n}\n\nfunction LanguageProvider(props: PropsWithChildren<ILanguageProviderProps>) {\n    const { children, messages } = props;\n    const router = useOriginalRouter();\n    const language = useMemo(() => getLanguageByPath(router.asPath) || getDefaultLanguage(), [router.asPath]);\n    const { locale } = language;\n\n    // Puts the initial translation into the cache.\n    useEffect(() => {\n        if (!cache[locale]) {\n            cache[locale] = Promise.resolve(messages);\n        }\n    }, [locale, messages]);\n\n    const setLocale = useCallback((newLocale: string) => {\n        setTimeout(() => {\n            const language = getLanguageByPath(router.asPath);\n            let path = router.asPath;\n\n            if (language) {\n                path = `/${router.asPath.substr(language.locale.length + 2)}`;\n            }\n\n            const { query } = router;\n            const newPath = newLocale === getDefaultLocale() ? path : `/${newLocale}${path}`;\n\n            if (newLocale !== getDefaultLocale()) {\n                query.lang = newLocale;\n            } else {\n                delete query.lang;\n            }\n\n            router.push(\n                {\n                    pathname: router.pathname,\n                    query,\n                },\n                newPath,\n            ).then();\n        }, 0);\n    }, [router]);\n\n    useEffect(() => {\n        document.documentElement.lang = language.locale;\n        document.documentElement.dir = language.direction;\n    }, [language]);\n\n    return (\n        <LanguageLocaleContext.Provider value={locale}>\n            <LanguageSetLocaleContext.Provider value={setLocale}>\n                <IntlProvider locale={locale} messages={messages}>\n                    <GlobalIntlProvider>\n                        {children}\n                    </GlobalIntlProvider>\n                </IntlProvider>\n            </LanguageSetLocaleContext.Provider>\n        </LanguageLocaleContext.Provider>\n    );\n}\n\nexport default LanguageProvider;\n"]},"metadata":{},"sourceType":"module"}