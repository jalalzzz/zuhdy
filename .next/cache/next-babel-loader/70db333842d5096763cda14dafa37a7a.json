{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\filters\\\\FilterColor.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport { Check12x9Svg } from '~/svg';\nimport { colorType } from '~/services/color';\n\nfunction FilterColor(props) {\n  const {\n    options,\n    value,\n    onChangeValue\n  } = props;\n\n  const updateValue = newValue => {\n    if (onChangeValue) {\n      onChangeValue({\n        filter: options,\n        value: newValue\n      });\n    }\n  }; // noinspection DuplicatedCode\n\n\n  const handleChange = event => {\n    if (event.target.checked && !value.includes(event.target.value)) {\n      updateValue([...value, event.target.value]);\n    }\n\n    if (!event.target.checked && value.includes(event.target.value)) {\n      updateValue(value.filter(x => x !== event.target.value));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"filter-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-color__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, options.items.map(item => __jsx(\"div\", {\n    key: item.slug,\n    className: \"filter-color__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: classNames('filter-color__check', 'input-check-color', {\n      'input-check-color--white': colorType(item.color) === 'white',\n      'input-check-color--light': colorType(item.color) === 'light'\n    }),\n    style: {\n      color: item.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"input-check-color__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    className: \"input-check-color__input\",\n    type: \"checkbox\",\n    value: item.slug,\n    checked: value.includes(item.slug),\n    disabled: item.count === 0,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    className: \"input-check-color__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    className: \"input-check-color__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, __jsx(Check12x9Svg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  })), __jsx(\"span\", {\n    className: \"input-check-color__stick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  })))))));\n}\n\nexport default FilterColor;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/filters/FilterColor.tsx"],"names":["React","classNames","Check12x9Svg","colorType","FilterColor","props","options","value","onChangeValue","updateValue","newValue","filter","handleChange","event","target","checked","includes","x","items","map","item","slug","color","count"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport { Check12x9Svg } from '~/svg';\nimport { colorType } from '~/services/color';\nimport { IColorFilter, IColorFilterValue } from '~/interfaces/filter';\n\ninterface Props {\n    options: IColorFilter;\n    value: IColorFilterValue;\n    onChangeValue?: (event: { filter: IColorFilter, value: IColorFilterValue }) => void;\n}\n\nfunction FilterColor(props: Props) {\n    const { options, value, onChangeValue } = props;\n\n    const updateValue = (newValue: IColorFilterValue) => {\n        if (onChangeValue) {\n            onChangeValue({ filter: options, value: newValue });\n        }\n    };\n\n    // noinspection DuplicatedCode\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked && !value.includes(event.target.value)) {\n            updateValue([...value, event.target.value]);\n        }\n        if (!event.target.checked && value.includes(event.target.value)) {\n            updateValue(value.filter((x) => x !== event.target.value));\n        }\n    };\n\n    return (\n        <div className=\"filter-color\">\n            <div className=\"filter-color__list\">\n                {options.items.map((item) => (\n                    <div key={item.slug} className=\"filter-color__item\">\n                        <span\n                            className={classNames('filter-color__check', 'input-check-color', {\n                                'input-check-color--white': colorType(item.color) === 'white',\n                                'input-check-color--light': colorType(item.color) === 'light',\n                            })}\n                            style={{ color: item.color }}\n                        >\n                            <label className=\"input-check-color__body\">\n                                <input\n                                    className=\"input-check-color__input\"\n                                    type=\"checkbox\"\n                                    value={item.slug}\n                                    checked={value.includes(item.slug)}\n                                    disabled={item.count === 0}\n                                    onChange={handleChange}\n                                />\n                                <span className=\"input-check-color__box\" />\n                                <span className=\"input-check-color__icon\">\n                                    <Check12x9Svg />\n                                </span>\n                                <span className=\"input-check-color__stick\" />\n                            </label>\n                        </span>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default FilterColor;\n"]},"metadata":{},"sourceType":"module"}