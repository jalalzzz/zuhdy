{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { CURRENCY_CHANGE } from '~/store/currency/currencyActionTypes';\nimport { withClientState } from '~/store/client'; // data\n\nimport { dataShopDefaultCurrency } from '~/data/shopCurrencies';\nconst initialState = {\n  current: dataShopDefaultCurrency\n};\nexport const CURRENCY_NAMESPACE = 'currency';\n\nfunction currencyBaseReducer(state = initialState, action) {\n  if (action.type === CURRENCY_CHANGE && state.current.code !== action.currency.code) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: JSON.parse(JSON.stringify(action.currency))\n    });\n  }\n\n  return state;\n}\n\nconst currencyReducer = withClientState(currencyBaseReducer, CURRENCY_NAMESPACE);\nexport default currencyReducer;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/currency/currencyReducer.ts"],"names":["CURRENCY_CHANGE","withClientState","dataShopDefaultCurrency","initialState","current","CURRENCY_NAMESPACE","currencyBaseReducer","state","action","type","code","currency","JSON","parse","stringify","currencyReducer"],"mappings":";;;;;;AAAA;AACA,SAASA,eAAT,QAAgD,sCAAhD;AAEA,SAASC,eAAT,QAAgC,gBAAhC,C,CACA;;AACA,SAASC,uBAAT,QAAwC,uBAAxC;AAEA,MAAMC,YAA4B,GAAG;AACjCC,EAAAA,OAAO,EAAEF;AADwB,CAArC;AAIA,OAAO,MAAMG,kBAAkB,GAAG,UAA3B;;AAEP,SAASC,mBAAT,CAA6BC,KAAK,GAAGJ,YAArC,EAAmDK,MAAnD,EAA2F;AACvF,MAAIA,MAAM,CAACC,IAAP,KAAgBT,eAAhB,IAAmCO,KAAK,CAACH,OAAN,CAAcM,IAAd,KAAuBF,MAAM,CAACG,QAAP,CAAgBD,IAA9E,EAAoF;AAChF,2CACOH,KADP;AAEIH,MAAAA,OAAO,EAAEQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,MAAM,CAACG,QAAtB,CAAX;AAFb;AAIH;;AAED,SAAOJ,KAAP;AACH;;AAED,MAAMQ,eAAe,GAAGd,eAAe,CAACK,mBAAD,EAAsBD,kBAAtB,CAAvC;AAEA,eAAeU,eAAf","sourcesContent":["// application\nimport { CURRENCY_CHANGE, CurrencyAction } from '~/store/currency/currencyActionTypes';\nimport { ICurrencyState } from '~/store/currency/currencyTypes';\nimport { withClientState } from '~/store/client';\n// data\nimport { dataShopDefaultCurrency } from '~/data/shopCurrencies';\n\nconst initialState: ICurrencyState = {\n    current: dataShopDefaultCurrency,\n};\n\nexport const CURRENCY_NAMESPACE = 'currency';\n\nfunction currencyBaseReducer(state = initialState, action: CurrencyAction): ICurrencyState {\n    if (action.type === CURRENCY_CHANGE && state.current.code !== action.currency.code) {\n        return {\n            ...state,\n            current: JSON.parse(JSON.stringify(action.currency)),\n        };\n    }\n\n    return state;\n}\n\nconst currencyReducer = withClientState(currencyBaseReducer, CURRENCY_NAMESPACE);\n\nexport default currencyReducer;\n"]},"metadata":{},"sourceType":"module"}