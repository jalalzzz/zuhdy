{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\shared\\\\StockStatusBadge.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport StatusBadge from '~/components/shared/StatusBadge';\n\nfunction StockStatusBadge(props) {\n  const {\n    stock,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"stock\", \"className\"]);\n\n  const rootClasses = classNames(className);\n  const typesMap = useMemo(() => ({\n    'in-stock': 'success',\n    'out-of-stock': 'failure',\n    'on-backorder': 'warning'\n  }), []);\n  const textMap = useMemo(() => ({\n    'in-stock': __jsx(FormattedMessage, {\n      id: \"TEXT_STOCK_IN_STOCK\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }),\n    'out-of-stock': __jsx(FormattedMessage, {\n      id: \"TEXT_STOCK_OUT_OF_STOCK\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }\n    }),\n    'on-backorder': __jsx(FormattedMessage, {\n      id: \"TEXT_STOCK_ON_BACKORDER\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }\n    })\n  }), []);\n  return __jsx(StatusBadge, _extends({\n    type: typesMap[stock],\n    text: textMap[stock],\n    className: rootClasses\n  }, rootProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default StockStatusBadge;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shared/StockStatusBadge.tsx"],"names":["React","useMemo","classNames","FormattedMessage","StatusBadge","StockStatusBadge","props","stock","className","rootProps","rootClasses","typesMap","textMap"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CACA;;AACA,OAAOC,WAAP,MAA8C,iCAA9C;;AAOA,SAASC,gBAAT,CAA0BC,KAA1B,EAAwC;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqCF,KAA3C;AAAA,QAA6BG,SAA7B,4BAA2CH,KAA3C;;AACA,QAAMI,WAAW,GAAGR,UAAU,CAACM,SAAD,CAA9B;AAEA,QAAMG,QAAiD,GAAGV,OAAO,CAAC,OAAO;AACrE,gBAAY,SADyD;AAErE,oBAAgB,SAFqD;AAGrE,oBAAgB;AAHqD,GAAP,CAAD,EAI7D,EAJ6D,CAAjE;AAMA,QAAMW,OAAO,GAAGX,OAAO,CAAC,OAAO;AAC3B,gBAAa,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAE3B,oBAAiB,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFU;AAG3B,oBAAiB,MAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHU,GAAP,CAAD,EAInB,EAJmB,CAAvB;AAMA,SACI,MAAC,WAAD;AACI,IAAA,IAAI,EAAEU,QAAQ,CAACJ,KAAD,CADlB;AAEI,IAAA,IAAI,EAAEK,OAAO,CAACL,KAAD,CAFjB;AAGI,IAAA,SAAS,EAAEG;AAHf,KAIQD,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH;;AAED,eAAeJ,gBAAf","sourcesContent":["// react\nimport React, { useMemo } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n// application\nimport StatusBadge, { IStatusBadgeType } from '~/components/shared/StatusBadge';\nimport { IProductStock } from '~/interfaces/product';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    stock: IProductStock;\n}\n\nfunction StockStatusBadge(props: Props) {\n    const { stock, className, ...rootProps } = props;\n    const rootClasses = classNames(className);\n\n    const typesMap: Record<IProductStock, IStatusBadgeType> = useMemo(() => ({\n        'in-stock': 'success',\n        'out-of-stock': 'failure',\n        'on-backorder': 'warning',\n    }), []);\n\n    const textMap = useMemo(() => ({\n        'in-stock': (<FormattedMessage id=\"TEXT_STOCK_IN_STOCK\" />),\n        'out-of-stock': (<FormattedMessage id=\"TEXT_STOCK_OUT_OF_STOCK\" />),\n        'on-backorder': (<FormattedMessage id=\"TEXT_STOCK_ON_BACKORDER\" />),\n    }), []);\n\n    return (\n        <StatusBadge\n            type={typesMap[stock]}\n            text={textMap[stock]}\n            className={rootClasses}\n            {...rootProps}\n        />\n    );\n}\n\nexport default StockStatusBadge;\n"]},"metadata":{},"sourceType":"module"}