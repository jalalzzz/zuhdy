{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// react\nimport { useEffect, useRef, useState } from 'react'; // third-party\n\nimport { useIntl } from 'react-intl'; // application\n\nimport { vehicleApi } from '~/api';\n\nfunction makeItems(itemsDef) {\n  return itemsDef.map((itemDef, index) => _objectSpread(_objectSpread({}, itemDef), {}, {\n    value: 'none',\n    loading: false,\n    options: [],\n    disabled: index !== 0\n  }));\n}\n\nfunction getItemValue(item) {\n  const {\n    value: itemValue\n  } = item;\n\n  if (itemValue !== 'none' && item.deserializeOptionFn) {\n    return item.deserializeOptionFn(itemValue, item);\n  }\n\n  return itemValue;\n}\n\nfunction getItemValues(items) {\n  return items.reduce((acc, prevItem) => [...acc, getItemValue(prevItem)], []);\n}\n\nfunction serializeOption(option, item) {\n  if (item.serializeOptionFn) {\n    return item.serializeOptionFn(option, item);\n  }\n\n  return option;\n}\n\nfunction deserializeOption(option, item) {\n  if (item.deserializeOptionFn) {\n    return item.deserializeOptionFn(option, item);\n  }\n\n  return option;\n}\n\nexport default function useVehicleForm(options = {}) {\n  const intl = useIntl();\n  const {\n    onChange\n  } = options;\n  const cancelPrevRequestRef = useRef(() => {});\n  const {\n    0: items,\n    1: setItems\n  } = useState(makeItems([{\n    key: 'year',\n    label: intl.formatMessage({\n      id: 'INPUT_VEHICLE_YEAR_LABEL'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_VEHICLE_YEAR_PLACEHOLDER'\n    }),\n    optionsSource: vehicleApi.getYears.bind(vehicleApi),\n    serializeOptionFn: option => option.toString(),\n    deserializeOptionFn: option => parseFloat(option)\n  }, {\n    key: 'brand',\n    label: intl.formatMessage({\n      id: 'INPUT_VEHICLE_BRAND_LABEL'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_VEHICLE_BRAND_PLACEHOLDER'\n    }),\n    optionsSource: vehicleApi.getMakes.bind(vehicleApi)\n  }, {\n    key: 'model',\n    label: intl.formatMessage({\n      id: 'INPUT_VEHICLE_MODEL_LABEL'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_VEHICLE_MODEL_PLACEHOLDER'\n    }),\n    optionsSource: vehicleApi.getModels.bind(vehicleApi)\n  }, {\n    key: 'engine',\n    label: intl.formatMessage({\n      id: 'INPUT_VEHICLE_ENGINE_LABEL'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_VEHICLE_ENGINE_PLACEHOLDER'\n    }),\n    optionsSource: vehicleApi.getVehicles.bind(vehicleApi),\n    serializeOptionFn: option => option.engine,\n    deserializeOptionFn: (option, item) => item.options.find(x => x.engine === option)\n  }]));\n\n  const load = async (items, index) => {\n    cancelPrevRequestRef.current();\n    let canceled = false;\n\n    cancelPrevRequestRef.current = () => {\n      canceled = true;\n    };\n\n    setItems(prevItems => [...prevItems.map((prevItem, prevItemIdx) => prevItemIdx !== index ? prevItem : _objectSpread(_objectSpread({}, prevItem), {}, {\n      loading: true\n    }))]);\n    const item = items[index];\n    const args = getItemValues(items.slice(0, index));\n    let optionsSource = Promise.resolve([]);\n\n    if (args.length === 0 || args.slice().pop() !== 'none') {\n      optionsSource = item.optionsSource(...args);\n    }\n\n    const options = await optionsSource;\n\n    if (canceled) {\n      return;\n    }\n\n    setItems(prevItems => [...prevItems.map((prevItem, prevItemIdx) => prevItemIdx !== index ? prevItem : _objectSpread(_objectSpread({}, prevItem), {}, {\n      options,\n      loading: false\n    }))]);\n  };\n\n  const onItemValueChange = (index, value) => {\n    const nextItemIdx = index + 1;\n    setItems(prevItems => {\n      let resultItems = prevItems;\n      resultItems = [...resultItems.map((prevItem, prevItemIdx) => prevItemIdx !== index ? prevItem : _objectSpread(_objectSpread({}, prevItem), {}, {\n        value\n      }))];\n      resultItems = [...resultItems.map((prevItem, prevItemIdx) => prevItemIdx <= index ? prevItem : _objectSpread(_objectSpread({}, prevItem), {}, {\n        value: 'none',\n        options: [],\n        disabled: true\n      }))];\n\n      if (value !== 'none' && resultItems[nextItemIdx]) {\n        resultItems = [...resultItems.map((prevItem, prevItemIdx) => prevItemIdx !== nextItemIdx ? prevItem : _objectSpread(_objectSpread({}, prevItem), {}, {\n          disabled: false\n        }))];\n      }\n\n      return resultItems;\n    });\n\n    if (value === 'none') {\n      if (onChange) {\n        onChange(null);\n      }\n    } else if (!items[nextItemIdx] && onChange) {\n      onChange(deserializeOption(value, items[index]));\n    }\n  }; // Load items.\n\n\n  useEffect(() => {\n    let prevValue = null;\n\n    for (let i = 0; i < items.length; i += 1) {\n      const item = items[i];\n\n      if (prevValue !== 'none' && item.options.length === 0 && !item.loading) {\n        load(items, i).then();\n        return;\n      }\n\n      prevValue = item.value;\n    }\n  }, [items]);\n  return {\n    items,\n    onItemValueChange,\n    serializeOption\n  };\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/services/forms/vehicle.ts"],"names":["useEffect","useRef","useState","useIntl","vehicleApi","makeItems","itemsDef","map","itemDef","index","value","loading","options","disabled","getItemValue","item","itemValue","deserializeOptionFn","getItemValues","items","reduce","acc","prevItem","serializeOption","option","serializeOptionFn","deserializeOption","useVehicleForm","intl","onChange","cancelPrevRequestRef","setItems","key","label","formatMessage","id","placeholder","optionsSource","getYears","bind","toString","parseFloat","getMakes","getModels","getVehicles","engine","find","x","load","current","canceled","prevItems","prevItemIdx","args","slice","Promise","resolve","length","pop","onItemValueChange","nextItemIdx","resultItems","prevValue","i","then"],"mappings":"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","sourcesContent":["// react\nimport { useEffect, useRef, useState } from 'react';\n// third-party\nimport { useIntl } from 'react-intl';\n// application\nimport { IVehicle } from '~/interfaces/vehicle';\nimport { vehicleApi } from '~/api';\n\ninterface VehicleSelectItemDef<T = any> {\n    key: string;\n    label: string;\n    placeholder: string;\n    optionsSource: (...args: any[]) => Promise<T[]>;\n    serializeOptionFn?: (option: T, item: VehicleSelectItem<T>) => string;\n    deserializeOptionFn?: (value: string, item: VehicleSelectItem<T>) => T;\n}\n\ninterface VehicleSelectItem<T = any> extends VehicleSelectItemDef<T> {\n    value: string;\n    loading: boolean;\n    options: T[];\n    disabled: boolean,\n}\n\nfunction makeItems(itemsDef: VehicleSelectItemDef[]): VehicleSelectItem[] {\n    return itemsDef.map((itemDef, index) => ({\n        ...itemDef,\n        value: 'none',\n        loading: false,\n        options: [],\n        disabled: index !== 0,\n    }));\n}\n\nfunction getItemValue(item: VehicleSelectItem): any {\n    const { value: itemValue } = item;\n\n    if (itemValue !== 'none' && item.deserializeOptionFn) {\n        return item.deserializeOptionFn(itemValue, item);\n    }\n\n    return itemValue;\n}\n\nfunction getItemValues(items: VehicleSelectItem[]): any[] {\n    return items.reduce<any[]>((acc, prevItem) => [...acc, getItemValue(prevItem)], []);\n}\n\nfunction serializeOption(option: any, item: VehicleSelectItem): string {\n    if (item.serializeOptionFn) {\n        return item.serializeOptionFn(option, item);\n    }\n\n    return option;\n}\n\nfunction deserializeOption<T extends any>(option: string, item: VehicleSelectItem<T>): T {\n    if (item.deserializeOptionFn) {\n        return item.deserializeOptionFn(option, item);\n    }\n\n    return option as any;\n}\n\ninterface IOptions {\n    onChange?: (vehicle: IVehicle | null) => void;\n}\n\nexport default function useVehicleForm(options: IOptions = {}) {\n    const intl = useIntl();\n    const { onChange } = options;\n    const cancelPrevRequestRef = useRef(() => {});\n    const [items, setItems] = useState(makeItems([\n        {\n            key: 'year',\n            label: intl.formatMessage({ id: 'INPUT_VEHICLE_YEAR_LABEL' }),\n            placeholder: intl.formatMessage({ id: 'INPUT_VEHICLE_YEAR_PLACEHOLDER' }),\n            optionsSource: vehicleApi.getYears.bind(vehicleApi),\n            serializeOptionFn: (option: number) => option.toString(),\n            deserializeOptionFn: (option: string) => parseFloat(option),\n        },\n        {\n            key: 'brand',\n            label: intl.formatMessage({ id: 'INPUT_VEHICLE_BRAND_LABEL' }),\n            placeholder: intl.formatMessage({ id: 'INPUT_VEHICLE_BRAND_PLACEHOLDER' }),\n            optionsSource: vehicleApi.getMakes.bind(vehicleApi),\n        },\n        {\n            key: 'model',\n            label: intl.formatMessage({ id: 'INPUT_VEHICLE_MODEL_LABEL' }),\n            placeholder: intl.formatMessage({ id: 'INPUT_VEHICLE_MODEL_PLACEHOLDER' }),\n            optionsSource: vehicleApi.getModels.bind(vehicleApi),\n        },\n        {\n            key: 'engine',\n            label: intl.formatMessage({ id: 'INPUT_VEHICLE_ENGINE_LABEL' }),\n            placeholder: intl.formatMessage({ id: 'INPUT_VEHICLE_ENGINE_PLACEHOLDER' }),\n            optionsSource: vehicleApi.getVehicles.bind(vehicleApi),\n            serializeOptionFn: (option: IVehicle) => option.engine,\n            deserializeOptionFn: (option: string, item: VehicleSelectItem<IVehicle>) => (\n                item.options.find((x) => x.engine === option)!\n            ),\n        },\n    ]));\n\n    const load = async (items: VehicleSelectItem[], index: number) => {\n        cancelPrevRequestRef.current();\n\n        let canceled = false;\n        cancelPrevRequestRef.current = () => {\n            canceled = true;\n        };\n\n        setItems((prevItems) => [\n            ...prevItems.map((prevItem, prevItemIdx) => (\n                prevItemIdx !== index ? prevItem : {\n                    ...prevItem,\n                    loading: true,\n                }\n            )),\n        ]);\n\n        const item = items[index];\n        const args = getItemValues(items.slice(0, index));\n\n        let optionsSource = Promise.resolve<any[]>([]);\n\n        if (args.length === 0 || args.slice().pop() !== 'none') {\n            optionsSource = item.optionsSource(...args);\n        }\n\n        const options = await optionsSource;\n\n        if (canceled) {\n            return;\n        }\n\n        setItems((prevItems) => [\n            ...prevItems.map((prevItem, prevItemIdx) => (\n                prevItemIdx !== index ? prevItem : {\n                    ...prevItem,\n                    options,\n                    loading: false,\n                }\n            )),\n        ]);\n    };\n\n    const onItemValueChange = (index: number, value: string): void => {\n        const nextItemIdx = index + 1;\n\n        setItems((prevItems) => {\n            let resultItems = prevItems;\n\n            resultItems = [\n                ...resultItems.map(\n                    (prevItem, prevItemIdx) => (prevItemIdx !== index ? prevItem : {\n                        ...prevItem,\n                        value,\n                    }),\n                ),\n            ];\n\n            resultItems = [\n                ...resultItems.map(\n                    (prevItem, prevItemIdx) => (prevItemIdx <= index ? prevItem : {\n                        ...prevItem,\n                        value: 'none',\n                        options: [],\n                        disabled: true,\n                    }),\n                ),\n            ];\n\n            if (value !== 'none' && resultItems[nextItemIdx]) {\n                resultItems = [\n                    ...resultItems.map(\n                        (prevItem, prevItemIdx) => (prevItemIdx !== nextItemIdx ? prevItem : {\n                            ...prevItem,\n                            disabled: false,\n                        }),\n                    ),\n                ];\n            }\n\n            return resultItems;\n        });\n\n        if (value === 'none') {\n            if (onChange) {\n                onChange(null);\n            }\n        } else if (!items[nextItemIdx] && onChange) {\n            onChange(deserializeOption<IVehicle>(value, items[index] as VehicleSelectItem<IVehicle>));\n        }\n    };\n\n    // Load items.\n    useEffect(() => {\n        let prevValue = null;\n\n        for (let i = 0; i < items.length; i += 1) {\n            const item = items[i];\n\n            if (prevValue !== 'none' && item.options.length === 0 && !item.loading) {\n                load(items, i).then();\n\n                return;\n            }\n\n            prevValue = item.value;\n        }\n    }, [items]);\n\n    return {\n        items,\n        onItemValueChange,\n        serializeOption,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}