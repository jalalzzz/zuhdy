{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\header\\\\AccountMenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport AppLink from '~/components/shared/AppLink';\nimport url from '~/services/url';\nimport { useSignInForm } from '~/services/forms/sign-in';\nimport { useUser, useUserSignOut } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\nfunction AccountMenu(props) {\n  _s();\n\n  var _signInForm$errors$em, _signInForm$errors$em2, _signInForm$errors$pa;\n\n  var onCloseMenu = props.onCloseMenu;\n  var intl = useIntl();\n  var user = useUser();\n  var userSignOut = useUserSignOut();\n  var signInForm = useSignInForm({\n    onSuccess: useCallback(function () {\n      if (onCloseMenu) {\n        onCloseMenu();\n      }\n    }, [onCloseMenu])\n  });\n\n  var onLogOutButtonClick = function onLogOutButtonClick() {\n    userSignOut().then(function () {\n      if (onCloseMenu) {\n        onCloseMenu();\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"account-menu\",\n    onSubmit: signInForm.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, user === null && __jsx(\"form\", {\n    className: \"account-menu__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"account-menu__form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_LOGIN_TO_YOUR_ACCOUNT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })), signInForm.serverError && __jsx(\"div\", {\n    className: \"alert alert-xs alert-danger mt-n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: signInForm.serverError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"header-signin-email\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  })), __jsx(\"input\", {\n    id: \"header-signin-email\",\n    type: \"email\",\n    className: classNames('form-control', 'form-control-sm', {\n      'is-invalid': signInForm.errors.email\n    }),\n    placeholder: \"customer@example.com\",\n    name: \"email\",\n    ref: signInForm.register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, ((_signInForm$errors$em = signInForm.errors.email) === null || _signInForm$errors$em === void 0 ? void 0 : _signInForm$errors$em.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }), ((_signInForm$errors$em2 = signInForm.errors.email) === null || _signInForm$errors$em2 === void 0 ? void 0 : _signInForm$errors$em2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"header-signin-password\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    className: classNames('account-menu__form-forgot', {\n      'is-invalid': signInForm.errors.password\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    id: \"header-signin-password\",\n    type: \"password\",\n    className: classNames('form-control', 'form-control-sm', {\n      'is-invalid': signInForm.errors.password\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_PLACEHOLDER'\n    }),\n    name: \"password\",\n    ref: signInForm.register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }), __jsx(AppLink, {\n    href: url.passwordRecovery(),\n    className: \"account-menu__form-forgot-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_FORGOT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, ((_signInForm$errors$pa = signInForm.errors.password) === null || _signInForm$errors$pa === void 0 ? void 0 : _signInForm$errors$pa.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group account-menu__form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'btn-sm', {\n      'btn-loading': signInForm.submitInProgress\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_LOGIN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    className: \"account-menu__form-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, __jsx(AppLink, {\n    href: url.signUp(),\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_CREATE_ACCOUNT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  })))), user !== null && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, __jsx(AppLink, {\n    href: url.accountDashboard(),\n    className: \"account-menu__user\",\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"account-menu__user-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, __jsx(AppImage, {\n    src: user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    className: \" account-menu__user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \" account-menu__user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"\".concat(user.firstName, \" \").concat(user.lastName)), __jsx(\"div\", {\n    className: \" account-menu__user-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, user.email))), __jsx(\"div\", {\n    className: \"account-menu__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), __jsx(\"ul\", {\n    className: \"account-menu__links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, __jsx(AppLink, {\n    href: url.accountDashboard(),\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_DASHBOARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, __jsx(AppLink, {\n    href: url.accountGarage(),\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_GARAGE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, __jsx(AppLink, {\n    href: url.accountProfile(),\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_PROFILE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, __jsx(AppLink, {\n    href: url.accountOrders(),\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_ORDERS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, __jsx(AppLink, {\n    href: url.accountAddresses(),\n    onClick: onCloseMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_ADDRESSES\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  })))), __jsx(\"div\", {\n    className: \"account-menu__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), __jsx(\"ul\", {\n    className: \"account-menu__links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: onLogOutButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_LOGOUT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }))))));\n}\n\n_s(AccountMenu, \"ixd8pEQ0FNnjy+Rn42+CD0kqZu8=\", false, function () {\n  return [useIntl, useUser, useUserSignOut, useSignInForm];\n});\n\n_c = AccountMenu;\nexport default AccountMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountMenu\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/header/AccountMenu.tsx"],"names":["React","useCallback","classNames","FormattedMessage","useIntl","AppImage","AppLink","url","useSignInForm","useUser","useUserSignOut","validateEmail","AccountMenu","props","onCloseMenu","intl","user","userSignOut","signInForm","onSuccess","onLogOutButtonClick","then","submit","serverError","errors","email","register","required","validate","type","password","formatMessage","id","passwordRecovery","submitInProgress","signUp","accountDashboard","avatar","firstName","lastName","accountGarage","accountProfile","accountOrders","accountAddresses"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,wBAAxC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAAmC;AAAA;;AAAA;;AAAA,MACvBC,WADuB,GACPD,KADO,CACvBC,WADuB;AAE/B,MAAMC,IAAI,GAAGX,OAAO,EAApB;AACA,MAAMY,IAAI,GAAGP,OAAO,EAApB;AACA,MAAMQ,WAAW,GAAGP,cAAc,EAAlC;AAEA,MAAMQ,UAAU,GAAGV,aAAa,CAAC;AAC7BW,IAAAA,SAAS,EAAElB,WAAW,CAAC,YAAM;AACzB,UAAIa,WAAJ,EAAiB;AACbA,QAAAA,WAAW;AACd;AACJ,KAJqB,EAInB,CAACA,WAAD,CAJmB;AADO,GAAD,CAAhC;;AAQA,MAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BH,IAAAA,WAAW,GAAGI,IAAd,CAAmB,YAAM;AACrB,UAAIP,WAAJ,EAAiB;AACbA,QAAAA,WAAW;AACd;AACJ,KAJD;AAKH,GAND;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,QAAQ,EAAEI,UAAU,CAACI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,KAAK,IAAT,IACG;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,8BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAIKE,UAAU,CAACK,WAAX,IACG;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAEL,UAAU,CAACK,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALR,EASI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAqC,IAAA,SAAS,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AACI,IAAA,EAAE,EAAC,qBADP;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,SAAS,EAAErB,UAAU,CAAC,cAAD,EAAiB,iBAAjB,EAAoC;AACrD,oBAAcgB,UAAU,CAACM,MAAX,CAAkBC;AADqB,KAApC,CAHzB;AAMI,IAAA,WAAW,EAAC,sBANhB;AAOI,IAAA,IAAI,EAAC,OAPT;AAQI,IAAA,GAAG,EAAEP,UAAU,CAACQ,QAAX,CAAoB;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,QAAQ,EAAE;AAAEH,QAAAA,KAAK,EAAEd;AAAT;AAA5B,KAApB,CART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAcI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,0BAAAO,UAAU,CAACM,MAAX,CAAkBC,KAAlB,gFAAyBI,IAAzB,MAAkC,UAAlC,IACG,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAIK,2BAAAX,UAAU,CAACM,MAAX,CAAkBC,KAAlB,kFAAyBI,IAAzB,MAAkC,OAAlC,IACG,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CAdJ,CATJ,EAgCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,wBAAf;AAAwC,IAAA,SAAS,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AACI,IAAA,SAAS,EAAE3B,UAAU,CAAC,2BAAD,EAA8B;AAC/C,oBAAcgB,UAAU,CAACM,MAAX,CAAkBM;AADe,KAA9B,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AACI,IAAA,EAAE,EAAC,wBADP;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,SAAS,EAAE5B,UAAU,CAAC,cAAD,EAAiB,iBAAjB,EAAoC;AACrD,oBAAcgB,UAAU,CAACM,MAAX,CAAkBM;AADqB,KAApC,CAHzB;AAMI,IAAA,WAAW,EAAEf,IAAI,CAACgB,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CANjB;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,GAAG,EAAEd,UAAU,CAACQ,QAAX,CAAoB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAApB,CART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAeI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEpB,GAAG,CAAC0B,gBAAJ,EAAf;AAAuC,IAAA,SAAS,EAAC,gCAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,CAJJ,EAuBI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,0BAAAf,UAAU,CAACM,MAAX,CAAkBM,QAAlB,gFAA4BD,IAA5B,MAAqC,UAArC,IACG,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAvBJ,CAhCJ,EA8DI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAE3B,UAAU,CAAC,KAAD,EAAQ,aAAR,EAAuB,QAAvB,EAAiC;AAClD,qBAAegB,UAAU,CAACgB;AADwB,KAAjC,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CA9DJ,EAwEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE3B,GAAG,CAAC4B,MAAJ,EAAf;AAA6B,IAAA,OAAO,EAAErB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAxEJ,CAFR,EAiFKE,IAAI,KAAK,IAAT,IACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAET,GAAG,CAAC6B,gBAAJ,EAAf;AAAuC,IAAA,SAAS,EAAC,oBAAjD;AAAsE,IAAA,OAAO,EAAEtB,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEE,IAAI,CAACqB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQrB,IAAI,CAACsB,SADb,cAC0BtB,IAAI,CAACuB,QAD/B,EADJ,EAII;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,IAAI,CAACS,KADV,CAJJ,CAJJ,CADJ,EAcI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAeI;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAElB,GAAG,CAAC6B,gBAAJ,EAAf;AAAuC,IAAA,OAAO,EAAEtB,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEP,GAAG,CAACiC,aAAJ,EAAf;AAAoC,IAAA,OAAO,EAAE1B,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEP,GAAG,CAACkC,cAAJ,EAAf;AAAqC,IAAA,OAAO,EAAE3B,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAXJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEP,GAAG,CAACmC,aAAJ,EAAf;AAAoC,IAAA,OAAO,EAAE5B,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAhBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEP,GAAG,CAACoC,gBAAJ,EAAf;AAAuC,IAAA,OAAO,EAAE7B,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CArBJ,CAfJ,EA0CI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CJ,EA2CI;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CA3CJ,CAlFR,CADJ;AAyIH;;GA/JQR,W;UAEQR,O,EACAK,O,EACOC,c,EAEDF,a;;;KANdI,W;AAiKT,eAAeA,WAAf","sourcesContent":["// react\nimport React, { useCallback } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport AppImage from '~/components/shared/AppImage';\nimport AppLink from '~/components/shared/AppLink';\nimport url from '~/services/url';\nimport { useSignInForm } from '~/services/forms/sign-in';\nimport { useUser, useUserSignOut } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\ninterface Props {\n    onCloseMenu: () => void;\n}\n\nfunction AccountMenu(props: Props) {\n    const { onCloseMenu } = props;\n    const intl = useIntl();\n    const user = useUser();\n    const userSignOut = useUserSignOut();\n\n    const signInForm = useSignInForm({\n        onSuccess: useCallback(() => {\n            if (onCloseMenu) {\n                onCloseMenu();\n            }\n        }, [onCloseMenu]),\n    });\n\n    const onLogOutButtonClick = () => {\n        userSignOut().then(() => {\n            if (onCloseMenu) {\n                onCloseMenu();\n            }\n        });\n    };\n\n    return (\n        <div className=\"account-menu\" onSubmit={signInForm.submit}>\n            {user === null && (\n                <form className=\"account-menu__form\">\n                    <div className=\"account-menu__form-title\">\n                        <FormattedMessage id=\"HEADER_LOGIN_TO_YOUR_ACCOUNT\" />\n                    </div>\n                    {signInForm.serverError && (\n                        <div className=\"alert alert-xs alert-danger mt-n2\">\n                            <FormattedMessage id={signInForm.serverError} />\n                        </div>\n                    )}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"header-signin-email\" className=\"sr-only\">\n                            <FormattedMessage id=\"INPUT_EMAIL_ADDRESS_LABEL\" />\n                        </label>\n                        <input\n                            id=\"header-signin-email\"\n                            type=\"email\"\n                            className={classNames('form-control', 'form-control-sm', {\n                                'is-invalid': signInForm.errors.email,\n                            })}\n                            placeholder=\"customer@example.com\"\n                            name=\"email\"\n                            ref={signInForm.register({ required: true, validate: { email: validateEmail } })}\n                        />\n                        <div className=\"invalid-feedback\">\n                            {signInForm.errors.email?.type === 'required' && (\n                                <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                            )}\n                            {signInForm.errors.email?.type === 'email' && (\n                                <FormattedMessage id=\"ERROR_FORM_INCORRECT_EMAIL\" />\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"header-signin-password\" className=\"sr-only\">\n                            <FormattedMessage id=\"INPUT_PASSWORD_LABEL\" />\n                        </label>\n                        <div\n                            className={classNames('account-menu__form-forgot', {\n                                'is-invalid': signInForm.errors.password,\n                            })}\n                        >\n                            <input\n                                id=\"header-signin-password\"\n                                type=\"password\"\n                                className={classNames('form-control', 'form-control-sm', {\n                                    'is-invalid': signInForm.errors.password,\n                                })}\n                                placeholder={intl.formatMessage({ id: 'INPUT_PASSWORD_PLACEHOLDER' })}\n                                name=\"password\"\n                                ref={signInForm.register({ required: true })}\n                            />\n                            <AppLink href={url.passwordRecovery()} className=\"account-menu__form-forgot-link\">\n                                <FormattedMessage id=\"LINK_FORGOT\" />\n                            </AppLink>\n                        </div>\n                        <div className=\"invalid-feedback\">\n                            {signInForm.errors.password?.type === 'required' && (\n                                <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"form-group account-menu__form-button\">\n                        <button\n                            type=\"submit\"\n                            className={classNames('btn', 'btn-primary', 'btn-sm', {\n                                'btn-loading': signInForm.submitInProgress,\n                            })}\n                        >\n                            <FormattedMessage id=\"BUTTON_LOGIN\" />\n                        </button>\n                    </div>\n                    <div className=\"account-menu__form-link\">\n                        <AppLink href={url.signUp()} onClick={onCloseMenu}>\n                            <FormattedMessage id=\"LINK_CREATE_ACCOUNT\" />\n                        </AppLink>\n                    </div>\n                </form>\n            )}\n            {user !== null && (\n                <React.Fragment>\n                    <AppLink href={url.accountDashboard()} className=\"account-menu__user\" onClick={onCloseMenu}>\n                        <div className=\"account-menu__user-avatar\">\n                            <AppImage src={user.avatar} />\n                        </div>\n                        <div className=\" account-menu__user-info\">\n                            <div className=\" account-menu__user-name\">\n                                {`${user.firstName} ${user.lastName}`}\n                            </div>\n                            <div className=\" account-menu__user-email\">\n                                {user.email}\n                            </div>\n                        </div>\n                    </AppLink>\n                    <div className=\"account-menu__divider\" />\n                    <ul className=\"account-menu__links\">\n                        <li>\n                            <AppLink href={url.accountDashboard()} onClick={onCloseMenu}>\n                                <FormattedMessage id=\"LINK_ACCOUNT_DASHBOARD\" />\n                            </AppLink>\n                        </li>\n                        <li>\n                            <AppLink href={url.accountGarage()} onClick={onCloseMenu}>\n                                <FormattedMessage id=\"LINK_ACCOUNT_GARAGE\" />\n                            </AppLink>\n                        </li>\n                        <li>\n                            <AppLink href={url.accountProfile()} onClick={onCloseMenu}>\n                                <FormattedMessage id=\"LINK_ACCOUNT_PROFILE\" />\n                            </AppLink>\n                        </li>\n                        <li>\n                            <AppLink href={url.accountOrders()} onClick={onCloseMenu}>\n                                <FormattedMessage id=\"LINK_ACCOUNT_ORDERS\" />\n                            </AppLink>\n                        </li>\n                        <li>\n                            <AppLink href={url.accountAddresses()} onClick={onCloseMenu}>\n                                <FormattedMessage id=\"LINK_ACCOUNT_ADDRESSES\" />\n                            </AppLink>\n                        </li>\n                    </ul>\n                    <div className=\"account-menu__divider\" />\n                    <ul className=\"account-menu__links\">\n                        <li>\n                            <button type=\"button\" onClick={onLogOutButtonClick}>\n                                <FormattedMessage id=\"LINK_ACCOUNT_LOGOUT\" />\n                            </button>\n                        </li>\n                    </ul>\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\n\nexport default AccountMenu;\n"]},"metadata":{},"sourceType":"module"}