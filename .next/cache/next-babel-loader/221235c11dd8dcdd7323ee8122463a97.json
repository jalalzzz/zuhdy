{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { AbstractFilterBuilder } from '~/fake-server/filters/abstract-filter-builder';\nimport { products as dbProducts } from '~/fake-server/database/products';\nexport var RatingFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(RatingFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(RatingFilterBuilder);\n\n  function RatingFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, RatingFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", []);\n\n    return _this;\n  }\n\n  _createClass(RatingFilterBuilder, [{\n    key: \"test\",\n    value: function test(product) {\n      var _this2 = this;\n\n      if (this.value.length === 0) {\n        return true;\n      }\n\n      return this.value.reduce(function (acc, value) {\n        return acc || _this2.extractItem(product).rating === value;\n      }, false);\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      var _this3 = this;\n\n      products.forEach(function (product) {\n        var item = _this3.extractItem(product);\n\n        if (!_this3.items.find(function (x) {\n          return x.rating === item.rating;\n        })) {\n          _this3.items.push(item);\n        }\n      });\n      this.value = this.parseValue(value);\n      this.items.sort(function (a, b) {\n        return b.rating - a.rating;\n      });\n    }\n  }, {\n    key: \"calc\",\n    value: function calc(filters) {\n      var _this4 = this;\n\n      var products = dbProducts.filter(function (product) {\n        return filters.reduce(function (isMatched, filter) {\n          return isMatched && (filter === _this4 || filter.test(product));\n        }, true);\n      });\n      this.items = this.items.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          count: products.reduce(function (acc, product) {\n            return acc + (item.rating === _this4.extractItem(product).rating ? 1 : 0);\n          }, 0)\n        });\n      });\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'rating',\n        slug: this.slug,\n        name: this.name,\n        items: this.items,\n        value: this.value\n      };\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(value) {\n      return value ? value.split(',').map(function (x) {\n        return parseFloat(x);\n      }) : [];\n    } // noinspection JSMethodCanBeStatic\n\n  }, {\n    key: \"extractItem\",\n    value: function extractItem(product) {\n      return {\n        rating: Math.round(product.rating || 0),\n        count: 0\n      };\n    }\n  }]);\n\n  return RatingFilterBuilder;\n}(AbstractFilterBuilder);","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/filters/rating-filter-builder.ts"],"names":["AbstractFilterBuilder","products","dbProducts","RatingFilterBuilder","product","value","length","reduce","acc","extractItem","rating","forEach","item","items","find","x","push","parseValue","sort","a","b","filters","filter","isMatched","test","map","count","type","slug","name","split","parseFloat","Math","round"],"mappings":"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","sourcesContent":["/* eslint-disable import/prefer-default-export,class-methods-use-this */\n\n// application\nimport { AbstractFilterBuilder } from '~/fake-server/filters/abstract-filter-builder';\nimport { IProduct } from '~/interfaces/product';\nimport { IRatingFilter, IRatingFilterItem } from '~/interfaces/filter';\nimport { products as dbProducts } from '~/fake-server/database/products';\n\nexport class RatingFilterBuilder extends AbstractFilterBuilder {\n    private items: IRatingFilterItem[] = [];\n\n    private value: number[] = [];\n\n    test(product: IProduct): boolean {\n        if (this.value.length === 0) {\n            return true;\n        }\n\n        return this.value.reduce<boolean>((acc, value) => acc || this.extractItem(product).rating === value, false);\n    }\n\n    makeItems(products: IProduct[], value: string): void {\n        products.forEach((product) => {\n            const item = this.extractItem(product);\n\n            if (!this.items.find((x) => x.rating === item.rating)) {\n                this.items.push(item);\n            }\n        });\n\n        this.value = this.parseValue(value);\n        this.items.sort((a, b) => b.rating - a.rating);\n    }\n\n    calc(filters: AbstractFilterBuilder[]): void {\n        const products = dbProducts.filter(\n            (product) => filters.reduce<boolean>(\n                (isMatched, filter) => (isMatched && (filter === this || filter.test(product))),\n                true,\n            ),\n        );\n\n        this.items = this.items.map((item) => ({\n            ...item,\n            count: products.reduce((acc, product) => (\n                acc + (item.rating === this.extractItem(product).rating ? 1 : 0)\n            ), 0),\n        }));\n    }\n\n    build(): IRatingFilter {\n        return {\n            type: 'rating',\n            slug: this.slug,\n            name: this.name,\n            items: this.items,\n            value: this.value,\n        };\n    }\n\n    private parseValue(value: string): number[] {\n        return value ? value.split(',').map((x) => parseFloat(x)) : [];\n    }\n\n    // noinspection JSMethodCanBeStatic\n    private extractItem(product: IProduct): IRatingFilterItem {\n        return {\n            rating: Math.round(product.rating || 0),\n            count: 0,\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}