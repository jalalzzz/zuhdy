{"ast":null,"code":"// application\nimport { OPTIONS_HYDRATE, OPTIONS_SET_ALL } from '~/store/options/optionsActionTypes';\n\nfunction optionsSetAll(state, options) {\n  const {\n    desktopHeaderVariant,\n    mobileHeaderVariant\n  } = options;\n  const [desktopHeaderLayout, desktopHeaderScheme] = desktopHeaderVariant.split('/');\n  return {\n    desktopHeaderLayout,\n    desktopHeaderScheme,\n    mobileHeaderVariant\n  };\n}\n\nconst initialState = {\n  desktopHeaderLayout: 'spaceship',\n  desktopHeaderScheme: 'one',\n  mobileHeaderVariant: 'one'\n};\nexport const OPTIONS_NAMESPACE = 'options';\n\nfunction optionsReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPTIONS_HYDRATE:\n      return action.payload[OPTIONS_NAMESPACE];\n\n    case OPTIONS_SET_ALL:\n      return optionsSetAll(state, action.options);\n\n    default:\n      return state;\n  }\n}\n\nexport default optionsReducer;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/options/optionsReducer.ts"],"names":["OPTIONS_HYDRATE","OPTIONS_SET_ALL","optionsSetAll","state","options","desktopHeaderVariant","mobileHeaderVariant","desktopHeaderLayout","desktopHeaderScheme","split","initialState","OPTIONS_NAMESPACE","optionsReducer","action","type","payload"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,eAA1B,QAAgE,oCAAhE;;AAQA,SAASC,aAAT,CAAuBC,KAAvB,EAA6CC,OAA7C,EAAmF;AAC/E,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAgDF,OAAtD;AACA,QAAM,CACFG,mBADE,EAEFC,mBAFE,IAGFH,oBAAoB,CAACI,KAArB,CAA2B,GAA3B,CAHJ;AAKA,SAAO;AACHF,IAAAA,mBADG;AAEHC,IAAAA,mBAFG;AAGHF,IAAAA;AAHG,GAAP;AAKH;;AAED,MAAMI,YAA2B,GAAG;AAChCH,EAAAA,mBAAmB,EAAE,WADW;AAEhCC,EAAAA,mBAAmB,EAAE,KAFW;AAGhCF,EAAAA,mBAAmB,EAAE;AAHW,CAApC;AAMA,OAAO,MAAMK,iBAAiB,GAAG,SAA1B;;AAEP,SAASC,cAAT,CAAwBT,KAAK,GAAGO,YAAhC,EAA8CG,MAA9C,EAAqE;AACjE,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKd,eAAL;AACI,aAAOa,MAAM,CAACE,OAAP,CAAeJ,iBAAf,CAAP;;AACJ,SAAKV,eAAL;AACI,aAAOC,aAAa,CAACC,KAAD,EAAQU,MAAM,CAACT,OAAf,CAApB;;AAEJ;AACI,aAAOD,KAAP;AAPJ;AASH;;AAED,eAAeS,cAAf","sourcesContent":["// application\nimport { OPTIONS_HYDRATE, OPTIONS_SET_ALL, OptionsAction } from '~/store/options/optionsActionTypes';\nimport {\n    IDesktopHeaderLayout,\n    IDesktopHeaderScheme,\n    IOptionsData,\n    IOptionsState,\n} from '~/store/options/optionsTypes';\n\nfunction optionsSetAll(state: IOptionsState, options: IOptionsData): IOptionsState {\n    const { desktopHeaderVariant, mobileHeaderVariant } = options;\n    const [\n        desktopHeaderLayout,\n        desktopHeaderScheme,\n    ] = desktopHeaderVariant.split('/') as [IDesktopHeaderLayout, IDesktopHeaderScheme];\n\n    return {\n        desktopHeaderLayout,\n        desktopHeaderScheme,\n        mobileHeaderVariant,\n    };\n}\n\nconst initialState: IOptionsState = {\n    desktopHeaderLayout: 'spaceship',\n    desktopHeaderScheme: 'one',\n    mobileHeaderVariant: 'one',\n};\n\nexport const OPTIONS_NAMESPACE = 'options';\n\nfunction optionsReducer(state = initialState, action: OptionsAction) {\n    switch (action.type) {\n    case OPTIONS_HYDRATE:\n        return action.payload[OPTIONS_NAMESPACE];\n    case OPTIONS_SET_ALL:\n        return optionsSetAll(state, action.options);\n\n    default:\n        return state;\n    }\n}\n\nexport default optionsReducer;\n"]},"metadata":{},"sourceType":"module"}