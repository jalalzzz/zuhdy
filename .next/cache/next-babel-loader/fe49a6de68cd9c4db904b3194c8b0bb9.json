{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\mobile\\\\MobileMenuPanelController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useContext, useState } from 'react';\nimport ReactDOM from 'react-dom'; // application\n\nimport { ArrowRoundedLeft7x11Svg } from '~/svg';\nimport { MobileMenuContext, MobileMenuLevelContext } from '~/services/mobile-menu';\n\nfunction MobileMenuPanelController(props) {\n  _s();\n\n  var _this = this;\n\n  var label = props.label,\n      content = props.content,\n      children = props.children;\n  var level = useContext(MobileMenuLevelContext);\n  var conveyor = useContext(MobileMenuContext);\n\n  var _useState = useState(function () {\n    conveyor.lastPanelIdRef.current += 1;\n    return conveyor.lastPanelIdRef.current;\n  }),\n      id = _useState[0];\n\n  var childrenTemplate = children(function () {\n    conveyor.open(id);\n  }) || null;\n\n  var renderPanel = function renderPanel() {\n    if (!conveyor.containerRef || !conveyor.containerRef.current) {\n      return null;\n    }\n\n    var panel = __jsx(\"div\", {\n      className: \"mobile-menu__panel\",\n      style: {\n        transform: \"translateX(\".concat(level * 100, \"%)\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"mobile-menu__panel-header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, level > 0 && __jsx(\"button\", {\n      className: \"mobile-menu__panel-back\",\n      type: \"button\",\n      onClick: conveyor.close,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, __jsx(ArrowRoundedLeft7x11Svg, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"mobile-menu__panel-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, label)), __jsx(\"div\", {\n      className: \"mobile-menu__panel-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, __jsx(MobileMenuLevelContext.Provider, {\n      value: level + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, content)));\n\n    return ReactDOM.createPortal(panel, conveyor.containerRef.current);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, (conveyor.stack.includes(id) || conveyor.bin.includes(id)) && renderPanel(), childrenTemplate && React.Children.only(childrenTemplate));\n}\n\n_s(MobileMenuPanelController, \"cxQj43A+9dE67k+WZKNcwVpC3Ec=\");\n\n_c = MobileMenuPanelController;\nexport default MobileMenuPanelController;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileMenuPanelController\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/mobile/MobileMenuPanelController.tsx"],"names":["React","useContext","useState","ReactDOM","ArrowRoundedLeft7x11Svg","MobileMenuContext","MobileMenuLevelContext","MobileMenuPanelController","props","label","content","children","level","conveyor","lastPanelIdRef","current","id","childrenTemplate","open","renderPanel","containerRef","panel","transform","close","createPortal","stack","includes","bin","Children","only"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SAASC,uBAAT,QAAwC,OAAxC;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,QAA0D,wBAA1D;;AAQA,SAASC,yBAAT,CAAmCC,KAAnC,EAAiD;AAAA;;AAAA;;AAAA,MACrCC,KADqC,GACRD,KADQ,CACrCC,KADqC;AAAA,MAC9BC,OAD8B,GACRF,KADQ,CAC9BE,OAD8B;AAAA,MACrBC,QADqB,GACRH,KADQ,CACrBG,QADqB;AAE7C,MAAMC,KAAK,GAAGX,UAAU,CAACK,sBAAD,CAAxB;AACA,MAAMO,QAAQ,GAAGZ,UAAU,CAACI,iBAAD,CAA3B;;AAH6C,kBAIhCH,QAAQ,CAAC,YAAM;AACxBW,IAAAA,QAAQ,CAACC,cAAT,CAAwBC,OAAxB,IAAmC,CAAnC;AAEA,WAAOF,QAAQ,CAACC,cAAT,CAAwBC,OAA/B;AACH,GAJoB,CAJwB;AAAA,MAItCC,EAJsC;;AAU7C,MAAMC,gBAAgB,GAAGN,QAAQ,CAAC,YAAM;AACpCE,IAAAA,QAAQ,CAACK,IAAT,CAAcF,EAAd;AACH,GAFgC,CAAR,IAEnB,IAFN;;AAIA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAI,CAACN,QAAQ,CAACO,YAAV,IAA0B,CAACP,QAAQ,CAACO,YAAT,CAAsBL,OAArD,EAA8D;AAC1D,aAAO,IAAP;AACH;;AAED,QAAMM,KAAK,GACP;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,uBAAgBV,KAAK,GAAG,GAAxB;AADN,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,GAAG,CAAR,IACG;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAA0D,MAAA,OAAO,EAAEC,QAAQ,CAACU,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,EAMI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2Cd,KAA3C,CANJ,CANJ,EAcI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,sBAAD,CAAwB,QAAxB;AAAiC,MAAA,KAAK,EAAEG,KAAK,GAAG,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,OADL,CADJ,CAdJ,CADJ;;AAuBA,WAAOP,QAAQ,CAACqB,YAAT,CAAsBH,KAAtB,EAA6BR,QAAQ,CAACO,YAAT,CAAsBL,OAAnD,CAAP;AACH,GA7BD;;AA+BA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACF,QAAQ,CAACY,KAAT,CAAeC,QAAf,CAAwBV,EAAxB,KAA+BH,QAAQ,CAACc,GAAT,CAAaD,QAAb,CAAsBV,EAAtB,CAAhC,KAA8DG,WAAW,EAD9E,EAEKF,gBAAgB,IAAIjB,KAAK,CAAC4B,QAAN,CAAeC,IAAf,CAAoBZ,gBAApB,CAFzB,CADJ;AAMH;;GAnDQV,yB;;KAAAA,yB;AAqDT,eAAeA,yBAAf","sourcesContent":["// react\nimport React, { useContext, useState } from 'react';\nimport ReactDOM from 'react-dom';\n// application\nimport { ArrowRoundedLeft7x11Svg } from '~/svg';\nimport { MobileMenuContext, MobileMenuLevelContext } from '~/services/mobile-menu';\n\ninterface Props {\n    label: React.ReactNode;\n    content: React.ReactNode;\n    children: (open: () => void) => JSX.Element | null | undefined;\n}\n\nfunction MobileMenuPanelController(props: Props) {\n    const { label, content, children } = props;\n    const level = useContext(MobileMenuLevelContext);\n    const conveyor = useContext(MobileMenuContext);\n    const [id] = useState(() => {\n        conveyor.lastPanelIdRef.current += 1;\n\n        return conveyor.lastPanelIdRef.current;\n    });\n\n    const childrenTemplate = children(() => {\n        conveyor.open(id);\n    }) || null;\n\n    const renderPanel = () => {\n        if (!conveyor.containerRef || !conveyor.containerRef.current) {\n            return null;\n        }\n\n        const panel = (\n            <div\n                className=\"mobile-menu__panel\"\n                style={{\n                    transform: `translateX(${level * 100}%)`,\n                }}\n            >\n                <div className=\"mobile-menu__panel-header\">\n                    {level > 0 && (\n                        <button className=\"mobile-menu__panel-back\" type=\"button\" onClick={conveyor.close}>\n                            <ArrowRoundedLeft7x11Svg />\n                        </button>\n                    )}\n                    <div className=\"mobile-menu__panel-title\">{label}</div>\n                </div>\n                <div className=\"mobile-menu__panel-body\">\n                    <MobileMenuLevelContext.Provider value={level + 1}>\n                        {content}\n                    </MobileMenuLevelContext.Provider>\n                </div>\n            </div>\n        );\n\n        return ReactDOM.createPortal(panel, conveyor.containerRef.current);\n    };\n\n    return (\n        <React.Fragment>\n            {(conveyor.stack.includes(id) || conveyor.bin.includes(id)) && renderPanel()}\n            {childrenTemplate && React.Children.only(childrenTemplate)}\n        </React.Fragment>\n    );\n}\n\nexport default MobileMenuPanelController;\n"]},"metadata":{},"sourceType":"module"}