{"ast":null,"code":"var _s = $RefreshSig$();\n\n// react\nimport { useEffect, useRef, useState } from 'react';\n\nfunction AsyncAction(props) {\n  _s();\n\n  var action = props.action,\n      render = props.render;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var canceledRef = useRef(false);\n\n  var run = function run() {\n    if (loading || !action) {\n      return;\n    }\n\n    setLoading(true);\n    action().then(function () {\n      if (canceledRef.current) {\n        return;\n      }\n\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    return function () {\n      canceledRef.current = true;\n    };\n  }, [canceledRef]);\n\n  if (render) {\n    return render({\n      run: run,\n      loading: loading\n    });\n  }\n\n  return null;\n}\n\n_s(AsyncAction, \"LVaa90VM6pN8mNv930KoH8G7DHo=\");\n\n_c = AsyncAction;\nexport default AsyncAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsyncAction\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shared/AsyncAction.tsx"],"names":["useEffect","useRef","useState","AsyncAction","props","action","render","loading","setLoading","canceledRef","run","then","current"],"mappings":";;AAAA;AACA,SAAgBA,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;AAgBA,SAASC,WAAT,CAAqBC,KAArB,EAAmC;AAAA;;AAAA,MACvBC,MADuB,GACJD,KADI,CACvBC,MADuB;AAAA,MACfC,MADe,GACJF,KADI,CACfE,MADe;;AAAA,kBAEDJ,QAAQ,CAAC,KAAD,CAFP;AAAA,MAExBK,OAFwB;AAAA,MAEfC,UAFe;;AAG/B,MAAMC,WAAW,GAAGR,MAAM,CAAC,KAAD,CAA1B;;AAEA,MAAMS,GAAG,GAAG,SAANA,GAAM,GAAM;AACd,QAAIH,OAAO,IAAI,CAACF,MAAhB,EAAwB;AACpB;AACH;;AAEDG,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAH,IAAAA,MAAM,GAAGM,IAAT,CAAc,YAAM;AAChB,UAAIF,WAAW,CAACG,OAAhB,EAAyB;AACrB;AACH;;AAEDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAND;AAOH,GAdD;;AAgBAR,EAAAA,SAAS,CAAC;AAAA,WAAM,YAAM;AAClBS,MAAAA,WAAW,CAACG,OAAZ,GAAsB,IAAtB;AACH,KAFS;AAAA,GAAD,EAEN,CAACH,WAAD,CAFM,CAAT;;AAIA,MAAIH,MAAJ,EAAY;AACR,WAAOA,MAAM,CAAC;AAAEI,MAAAA,GAAG,EAAHA,GAAF;AAAOH,MAAAA,OAAO,EAAPA;AAAP,KAAD,CAAb;AACH;;AAED,SAAO,IAAP;AACH;;GA9BQJ,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["// react\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype ActionFn = () => Promise<any>;\n\ntype RenderFnProps = {\n    run: () => void;\n    loading: boolean;\n};\n\ntype RenderFn = (args: RenderFnProps) => React.ReactElement;\n\ninterface Props {\n    action: ActionFn;\n    render: RenderFn;\n}\n\nfunction AsyncAction(props: Props) {\n    const { action, render } = props;\n    const [loading, setLoading] = useState(false);\n    const canceledRef = useRef(false);\n\n    const run = () => {\n        if (loading || !action) {\n            return;\n        }\n\n        setLoading(true);\n\n        action().then(() => {\n            if (canceledRef.current) {\n                return;\n            }\n\n            setLoading(false);\n        });\n    };\n\n    useEffect(() => () => {\n        canceledRef.current = true;\n    }, [canceledRef]);\n\n    if (render) {\n        return render({ run, loading });\n    }\n\n    return null;\n}\n\nexport default AsyncAction;\n"]},"metadata":{},"sourceType":"module"}