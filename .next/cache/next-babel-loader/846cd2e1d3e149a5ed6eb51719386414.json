{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { blogCategoriesTree, shopCategoriesList, shopCategoriesTree } from '~/fake-server/database/categories';\nimport { clone, error } from '~/fake-server/utils';\nexport function prepareCategory(category, depth) {\n  let children;\n\n  if (depth && depth > 0) {\n    children = (category.children || []).map(x => prepareCategory(x, depth - 1));\n  }\n\n  let parent;\n\n  if (category.parent) {\n    parent = prepareCategory(category.parent);\n  } else if (category.parent === null) {\n    parent = null;\n  }\n\n  return JSON.parse(JSON.stringify(_objectSpread(_objectSpread({}, category), {}, {\n    parent,\n    children\n  })));\n}\nexport function getCategoryBySlug(slug, options) {\n  const optionsValue = options || {};\n  const category = shopCategoriesList.find(x => x.slug === slug);\n\n  if (!category) {\n    return error('Page Not Found');\n  }\n\n  return Promise.resolve(prepareCategory(category, optionsValue.depth));\n}\nexport function getCategories(options) {\n  let categories = shopCategoriesTree.slice(0);\n  const depth = (options === null || options === void 0 ? void 0 : options.depth) || 0;\n  const optionParent = options === null || options === void 0 ? void 0 : options.parent;\n  const optionSlugs = options === null || options === void 0 ? void 0 : options.slugs;\n\n  if (optionParent) {\n    const parent = shopCategoriesList.find(x => x.slug === optionParent.slug);\n\n    if (parent) {\n      categories = parent.children || [];\n    }\n  } else if (optionSlugs) {\n    categories = shopCategoriesList.filter(x => optionSlugs.includes(x.slug));\n  }\n\n  categories = categories.map(x => prepareCategory(x, depth));\n  return Promise.resolve(clone(categories));\n}\nexport function getBlogCategories(options) {\n  let categories = blogCategoriesTree.slice(0);\n  const depth = options.depth || 0;\n  categories = categories.map(x => prepareCategory(x, depth));\n  return Promise.resolve(clone(categories));\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/endpoints/categories.ts"],"names":["blogCategoriesTree","shopCategoriesList","shopCategoriesTree","clone","error","prepareCategory","category","depth","children","map","x","parent","JSON","parse","stringify","getCategoryBySlug","slug","options","optionsValue","find","Promise","resolve","getCategories","categories","slice","optionParent","optionSlugs","slugs","filter","includes","getBlogCategories"],"mappings":";;;;;;AAAA;AACA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,QAA2E,mCAA3E;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,qBAA7B;AAIA,OAAO,SAASC,eAAT,CAAkDC,QAAlD,EAA+DC,KAA/D,EAAkF;AACrF,MAAIC,QAAJ;;AAEA,MAAID,KAAK,IAAIA,KAAK,GAAG,CAArB,EAAwB;AACpBC,IAAAA,QAAQ,GAAG,CAACF,QAAQ,CAACE,QAAT,IAAqB,EAAtB,EAA0BC,GAA1B,CAA+BC,CAAD,IAAOL,eAAe,CAACK,CAAD,EAAIH,KAAK,GAAG,CAAZ,CAApD,CAAX;AACH;;AAED,MAAII,MAAJ;;AAEA,MAAIL,QAAQ,CAACK,MAAb,EAAqB;AACjBA,IAAAA,MAAM,GAAGN,eAAe,CAACC,QAAQ,CAACK,MAAV,CAAxB;AACH,GAFD,MAEO,IAAIL,QAAQ,CAACK,MAAT,KAAoB,IAAxB,EAA8B;AACjCA,IAAAA,MAAM,GAAG,IAAT;AACH;;AAED,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,iCACXR,QADW;AAEdK,IAAAA,MAFc;AAGdH,IAAAA;AAHc,KAAX,CAAP;AAKH;AAED,OAAO,SAASO,iBAAT,CAA2BC,IAA3B,EAAyCC,OAAzC,EAAsG;AACzG,QAAMC,YAAY,GAAGD,OAAO,IAAI,EAAhC;AAEA,QAAMX,QAAQ,GAAGL,kBAAkB,CAACkB,IAAnB,CAAyBT,CAAD,IAAOA,CAAC,CAACM,IAAF,KAAWA,IAA1C,CAAjB;;AAEA,MAAI,CAACV,QAAL,EAAe;AACX,WAAOF,KAAK,CAAC,gBAAD,CAAZ;AACH;;AAED,SAAOgB,OAAO,CAACC,OAAR,CAAgBhB,eAAe,CAACC,QAAD,EAAWY,YAAY,CAACX,KAAxB,CAA/B,CAAP;AACH;AAED,OAAO,SAASe,aAAT,CAAuBL,OAAvB,EAAkF;AACrF,MAAIM,UAAU,GAAGrB,kBAAkB,CAACsB,KAAnB,CAAyB,CAAzB,CAAjB;AACA,QAAMjB,KAAK,GAAG,CAAAU,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEV,KAAT,KAAkB,CAAhC;AACA,QAAMkB,YAAY,GAAGR,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEN,MAA9B;AACA,QAAMe,WAAW,GAAGT,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEU,KAA7B;;AAEA,MAAIF,YAAJ,EAAkB;AACd,UAAMd,MAAM,GAAGV,kBAAkB,CAACkB,IAAnB,CAAyBT,CAAD,IAAOA,CAAC,CAACM,IAAF,KAAWS,YAAY,CAACT,IAAvD,CAAf;;AAEA,QAAIL,MAAJ,EAAY;AACRY,MAAAA,UAAU,GAAGZ,MAAM,CAACH,QAAP,IAAmB,EAAhC;AACH;AACJ,GAND,MAMO,IAAIkB,WAAJ,EAAiB;AACpBH,IAAAA,UAAU,GAAGtB,kBAAkB,CAAC2B,MAAnB,CAA2BlB,CAAD,IAAOgB,WAAW,CAACG,QAAZ,CAAqBnB,CAAC,CAACM,IAAvB,CAAjC,CAAb;AACH;;AAEDO,EAAAA,UAAU,GAAGA,UAAU,CAACd,GAAX,CAAgBC,CAAD,IAAOL,eAAe,CAACK,CAAD,EAAIH,KAAJ,CAArC,CAAb;AAEA,SAAOa,OAAO,CAACC,OAAR,CAAgBlB,KAAK,CAACoB,UAAD,CAArB,CAAP;AACH;AAED,OAAO,SAASO,iBAAT,CAA2Bb,OAA3B,EAAyF;AAC5F,MAAIM,UAAU,GAAGvB,kBAAkB,CAACwB,KAAnB,CAAyB,CAAzB,CAAjB;AACA,QAAMjB,KAAK,GAAGU,OAAO,CAACV,KAAR,IAAiB,CAA/B;AAEAgB,EAAAA,UAAU,GAAGA,UAAU,CAACd,GAAX,CAAgBC,CAAD,IAAOL,eAAe,CAACK,CAAD,EAAIH,KAAJ,CAArC,CAAb;AAEA,SAAOa,OAAO,CAACC,OAAR,CAAgBlB,KAAK,CAACoB,UAAD,CAArB,CAAP;AACH","sourcesContent":["// application\nimport { blogCategoriesTree, shopCategoriesList, shopCategoriesTree } from '~/fake-server/database/categories';\nimport { clone, error } from '~/fake-server/utils';\nimport { IBaseCategory, IBlogCategory, IShopCategory } from '~/interfaces/category';\nimport { IGetBlogCategoriesOptions, IGetCategoriesOptions, IGetCategoryBySlugOptions } from '~/api/base';\n\nexport function prepareCategory<T extends IBaseCategory>(category: T, depth?: number): T {\n    let children;\n\n    if (depth && depth > 0) {\n        children = (category.children || []).map((x) => prepareCategory(x, depth - 1));\n    }\n\n    let parent;\n\n    if (category.parent) {\n        parent = prepareCategory(category.parent);\n    } else if (category.parent === null) {\n        parent = null;\n    }\n\n    return JSON.parse(JSON.stringify({\n        ...category,\n        parent,\n        children,\n    }));\n}\n\nexport function getCategoryBySlug(slug: string, options?: IGetCategoryBySlugOptions): Promise<IShopCategory> {\n    const optionsValue = options || {};\n\n    const category = shopCategoriesList.find((x) => x.slug === slug);\n\n    if (!category) {\n        return error('Page Not Found');\n    }\n\n    return Promise.resolve(prepareCategory(category, optionsValue.depth));\n}\n\nexport function getCategories(options?: IGetCategoriesOptions): Promise<IShopCategory[]> {\n    let categories = shopCategoriesTree.slice(0);\n    const depth = options?.depth || 0;\n    const optionParent = options?.parent;\n    const optionSlugs = options?.slugs;\n\n    if (optionParent) {\n        const parent = shopCategoriesList.find((x) => x.slug === optionParent.slug);\n\n        if (parent) {\n            categories = parent.children || [];\n        }\n    } else if (optionSlugs) {\n        categories = shopCategoriesList.filter((x) => optionSlugs.includes(x.slug));\n    }\n\n    categories = categories.map((x) => prepareCategory(x, depth));\n\n    return Promise.resolve(clone(categories));\n}\n\nexport function getBlogCategories(options: IGetBlogCategoriesOptions): Promise<IBlogCategory[]> {\n    let categories = blogCategoriesTree.slice(0);\n    const depth = options.depth || 0;\n\n    categories = categories.map((x) => prepareCategory(x, depth));\n\n    return Promise.resolve(clone(categories));\n}\n"]},"metadata":{},"sourceType":"module"}