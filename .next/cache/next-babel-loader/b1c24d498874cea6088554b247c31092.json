{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\filters\\\\Filter.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { ArrowRoundedDown12x7Svg } from '~/svg';\nimport FilterCategory from '~/components/filters/FilterCategory';\nimport FilterVehicle from '~/components/filters/FilterVehicle';\nimport { getFilterValue, isDefaultFilterValue, serializeFilterValue } from '~/services/filters';\nimport FilterRange from '~/components/filters/FilterRange';\nimport FilterCheck from '~/components/filters/FilterCheck';\nimport FilterRadio from '~/components/filters/FilterRadio';\nimport FilterRating from '~/components/filters/FilterRating';\nimport FilterColor from '~/components/filters/FilterColor';\nimport Collapse from '~/components/shared/Collapse';\nimport { useShopSetFilterValueThunk } from '~/store/shop/shopHooks';\n\nfunction Filter(props) {\n  const {\n    filter,\n    value\n  } = props;\n  const shopSetFilterValue = useShopSetFilterValueThunk();\n  const handleValueChange = useCallback(({\n    filter,\n    value\n  }) => {\n    shopSetFilterValue(filter.slug, isDefaultFilterValue(filter, value) ? null : serializeFilterValue(filter, value)).then();\n  }, [shopSetFilterValue]);\n\n  const renderFn = ({\n    toggle,\n    setItemRef,\n    setContentRef\n  }) => __jsx(\"div\", {\n    className: \"filter filter--opened\",\n    ref: setItemRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"filter__title\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, filter.name, __jsx(\"span\", {\n    className: \"filter__arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(ArrowRoundedDown12x7Svg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"filter__body\",\n    ref: setContentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"filter__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, filter.type === 'category' && __jsx(FilterCategory, {\n    options: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 52\n    }\n  }), filter.type === 'vehicle' && __jsx(FilterVehicle, {\n    options: filter,\n    value: getFilterValue(filter, value),\n    onChangeValue: handleValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), filter.type === 'range' && __jsx(FilterRange, {\n    options: filter,\n    value: getFilterValue(filter, value),\n    onChangeValue: handleValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), filter.type === 'check' && __jsx(FilterCheck, {\n    options: filter,\n    value: getFilterValue(filter, value),\n    onChangeValue: handleValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), filter.type === 'radio' && __jsx(FilterRadio, {\n    options: filter,\n    value: getFilterValue(filter, value),\n    onChangeValue: handleValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), filter.type === 'rating' && __jsx(FilterRating, {\n    options: filter,\n    value: getFilterValue(filter, value),\n    onChangeValue: handleValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), filter.type === 'color' && __jsx(FilterColor, {\n    options: filter,\n    value: getFilterValue(filter, value),\n    onChangeValue: handleValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }))));\n\n  return __jsx(\"div\", {\n    className: \"widget-filters__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Collapse, {\n    toggleClass: \"filter--opened\",\n    render: renderFn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default React.memo(Filter);","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/filters/Filter.tsx"],"names":["React","useCallback","ArrowRoundedDown12x7Svg","FilterCategory","FilterVehicle","getFilterValue","isDefaultFilterValue","serializeFilterValue","FilterRange","FilterCheck","FilterRadio","FilterRating","FilterColor","Collapse","useShopSetFilterValueThunk","Filter","props","filter","value","shopSetFilterValue","handleValueChange","slug","then","renderFn","toggle","setItemRef","setContentRef","name","type","memo"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { ArrowRoundedDown12x7Svg } from '~/svg';\nimport FilterCategory from '~/components/filters/FilterCategory';\nimport FilterVehicle from '~/components/filters/FilterVehicle';\nimport { getFilterValue, isDefaultFilterValue, serializeFilterValue } from '~/services/filters';\nimport FilterRange from '~/components/filters/FilterRange';\nimport FilterCheck from '~/components/filters/FilterCheck';\nimport FilterRadio from '~/components/filters/FilterRadio';\nimport FilterRating from '~/components/filters/FilterRating';\nimport FilterColor from '~/components/filters/FilterColor';\nimport Collapse, { ICollapseRenderFn } from '~/components/shared/Collapse';\nimport { IFilter } from '~/interfaces/filter';\nimport { useShopSetFilterValueThunk } from '~/store/shop/shopHooks';\n\ntype RenderFilterFn = ICollapseRenderFn<HTMLDivElement, HTMLDivElement>;\n\ninterface ChangeValueEvent {\n    filter: IFilter;\n    value: IFilter['value'];\n}\n\ninterface Props {\n    filter: IFilter;\n    value: string;\n}\n\nfunction Filter(props: Props) {\n    const { filter, value } = props;\n    const shopSetFilterValue = useShopSetFilterValueThunk();\n\n    const handleValueChange = useCallback(({ filter, value }: ChangeValueEvent) => {\n        shopSetFilterValue(\n            filter.slug,\n            isDefaultFilterValue(filter, value) ? null : serializeFilterValue(filter, value),\n        ).then();\n    }, [shopSetFilterValue]);\n\n    const renderFn: RenderFilterFn = ({ toggle, setItemRef, setContentRef }) => (\n        <div className=\"filter filter--opened\" ref={setItemRef}>\n            <button type=\"button\" className=\"filter__title\" onClick={toggle}>\n                {filter.name}\n                <span className=\"filter__arrow\">\n                    <ArrowRoundedDown12x7Svg />\n                </span>\n            </button>\n            <div className=\"filter__body\" ref={setContentRef}>\n                <div className=\"filter__container\">\n                    {filter.type === 'category' && <FilterCategory options={filter} />}\n\n                    {filter.type === 'vehicle' && (\n                        <FilterVehicle\n                            options={filter}\n                            value={getFilterValue(filter, value)}\n                            onChangeValue={handleValueChange}\n                        />\n                    )}\n\n                    {filter.type === 'range' && (\n                        <FilterRange\n                            options={filter}\n                            value={getFilterValue(filter, value)}\n                            onChangeValue={handleValueChange}\n                        />\n                    )}\n\n                    {filter.type === 'check' && (\n                        <FilterCheck\n                            options={filter}\n                            value={getFilterValue(filter, value)}\n                            onChangeValue={handleValueChange}\n                        />\n                    )}\n\n                    {filter.type === 'radio' && (\n                        <FilterRadio\n                            options={filter}\n                            value={getFilterValue(filter, value)}\n                            onChangeValue={handleValueChange}\n                        />\n                    )}\n\n                    {filter.type === 'rating' && (\n                        <FilterRating\n                            options={filter}\n                            value={getFilterValue(filter, value)}\n                            onChangeValue={handleValueChange}\n                        />\n                    )}\n\n                    {filter.type === 'color' && (\n                        <FilterColor\n                            options={filter}\n                            value={getFilterValue(filter, value)}\n                            onChangeValue={handleValueChange}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"widget-filters__item\">\n            <Collapse toggleClass=\"filter--opened\" render={renderFn} />\n        </div>\n    );\n}\n\nexport default React.memo(Filter);\n"]},"metadata":{},"sourceType":"module"}