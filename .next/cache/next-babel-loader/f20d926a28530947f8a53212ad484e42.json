{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SHOP_NAMESPACE } from '~/store/shop/shopTypes';\nimport { shopApi } from '~/api';\nimport { SHOP_FETCH_CATEGORY_SUCCESS, SHOP_FETCH_PRODUCTS_LIST_START, SHOP_FETCH_PRODUCTS_LIST_SUCCESS, SHOP_INIT, SHOP_RESET_FILTER, SHOP_RESET_FILTERS, SHOP_SET_FILTER_VALUE, SHOP_SET_OPTION_VALUE } from '~/store/shop/shopActionTypes';\n\nlet cancelPreviousCategoryRequest = () => {};\n\nlet cancelPreviousProductsListRequest = () => {};\n\nexport function shopInit(categorySlug, options = {}, filters = {}) {\n  return {\n    type: SHOP_INIT,\n    categorySlug,\n    options,\n    filters\n  };\n}\nexport function shopFetchCategorySuccess(category) {\n  return {\n    type: SHOP_FETCH_CATEGORY_SUCCESS,\n    category\n  };\n}\nexport function shopFetchProductsListStart() {\n  return {\n    type: SHOP_FETCH_PRODUCTS_LIST_START\n  };\n}\nexport function shopFetchProductsListSuccess(productsList) {\n  return {\n    type: SHOP_FETCH_PRODUCTS_LIST_SUCCESS,\n    productsList\n  };\n}\nexport function shopResetFilters() {\n  return {\n    type: SHOP_RESET_FILTERS\n  };\n}\nexport function shopResetFilter(activeFilter) {\n  return {\n    type: SHOP_RESET_FILTER,\n    activeFilter\n  };\n}\nexport function shopSetOptionValue(option, value) {\n  return {\n    type: SHOP_SET_OPTION_VALUE,\n    option,\n    value\n  };\n}\nexport function shopSetFilterValue(filter, value) {\n  return {\n    type: SHOP_SET_FILTER_VALUE,\n    filter,\n    value\n  };\n}\nexport function shopFetchCategoryThunk(categorySlug) {\n  return async dispatch => {\n    let canceled = false;\n    cancelPreviousCategoryRequest();\n\n    cancelPreviousCategoryRequest = () => {\n      canceled = true;\n    };\n\n    let request;\n\n    if (categorySlug) {\n      request = shopApi.getCategoryBySlug(categorySlug);\n    } else {\n      request = Promise.resolve(null);\n    }\n\n    const category = await request;\n\n    if (canceled && false) {\n      return;\n    }\n\n    dispatch(shopFetchCategorySuccess(category));\n  };\n}\nexport function shopFetchProductsListThunk() {\n  return async (dispatch, getState) => {\n    let canceled = false;\n    cancelPreviousProductsListRequest();\n\n    cancelPreviousProductsListRequest = () => {\n      canceled = true;\n    };\n\n    dispatch(shopFetchProductsListStart());\n    const shopState = getState()[SHOP_NAMESPACE];\n    let {\n      filters\n    } = shopState;\n\n    if (shopState.categorySlug !== null) {\n      filters = _objectSpread(_objectSpread({}, filters), {}, {\n        category: shopState.categorySlug\n      });\n    }\n\n    const productsList = await shopApi.getProductsList(shopState.options, filters);\n\n    if (canceled && false) {\n      return;\n    }\n\n    dispatch(shopFetchProductsListSuccess(productsList));\n  };\n}\nexport function shopSetOptionValueThunk(option, value) {\n  return async dispatch => {\n    dispatch(shopSetOptionValue(option, value));\n    await dispatch(shopFetchProductsListThunk());\n  };\n}\nexport function shopSetFilterValueThunk(filter, value) {\n  return async dispatch => {\n    dispatch(shopSetFilterValue(filter, value));\n    await dispatch(shopFetchProductsListThunk());\n  };\n}\nexport function shopResetFiltersThunk() {\n  return async dispatch => {\n    dispatch(shopResetFilters());\n    await dispatch(shopFetchProductsListThunk());\n  };\n}\nexport function shopResetFilterThunk(activeFilter) {\n  return async dispatch => {\n    dispatch(shopResetFilter(activeFilter));\n    await dispatch(shopFetchProductsListThunk());\n  };\n}\nexport function shopInitThunk(categorySlug, options = {}, filters = {}) {\n  return async dispatch => {\n    dispatch(shopInit(categorySlug, options, filters));\n    await Promise.all([dispatch(shopFetchCategoryThunk(categorySlug)), dispatch(shopFetchProductsListThunk())]);\n  };\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/shop/shopActions.ts"],"names":["SHOP_NAMESPACE","shopApi","SHOP_FETCH_CATEGORY_SUCCESS","SHOP_FETCH_PRODUCTS_LIST_START","SHOP_FETCH_PRODUCTS_LIST_SUCCESS","SHOP_INIT","SHOP_RESET_FILTER","SHOP_RESET_FILTERS","SHOP_SET_FILTER_VALUE","SHOP_SET_OPTION_VALUE","cancelPreviousCategoryRequest","cancelPreviousProductsListRequest","shopInit","categorySlug","options","filters","type","shopFetchCategorySuccess","category","shopFetchProductsListStart","shopFetchProductsListSuccess","productsList","shopResetFilters","shopResetFilter","activeFilter","shopSetOptionValue","option","value","shopSetFilterValue","filter","shopFetchCategoryThunk","dispatch","canceled","request","getCategoryBySlug","Promise","resolve","shopFetchProductsListThunk","getState","shopState","getProductsList","shopSetOptionValueThunk","shopSetFilterValueThunk","shopResetFiltersThunk","shopResetFilterThunk","shopInitThunk","all"],"mappings":"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","sourcesContent":["import { IActiveFilter } from '~/interfaces/filter';\nimport { IFilterValues, IListOptions } from '~/interfaces/list';\nimport { IProductsList } from '~/interfaces/product';\nimport { IShopCategory } from '~/interfaces/category';\nimport { SHOP_NAMESPACE } from '~/store/shop/shopTypes';\nimport { shopApi } from '~/api';\nimport {\n    SHOP_FETCH_CATEGORY_SUCCESS,\n    SHOP_FETCH_PRODUCTS_LIST_START,\n    SHOP_FETCH_PRODUCTS_LIST_SUCCESS,\n    SHOP_INIT,\n    SHOP_RESET_FILTER,\n    SHOP_RESET_FILTERS,\n    SHOP_SET_FILTER_VALUE,\n    SHOP_SET_OPTION_VALUE,\n    ShopFetchCategorySuccessAction,\n    ShopFetchProductsListStartAction,\n    ShopFetchProductsListSuccessAction,\n    ShopInitAction, ShopResetFilterAction,\n    ShopResetFiltersAction,\n    ShopSetFilterValueAction,\n    ShopSetOptionValueAction,\n    ShopThunkAction,\n} from '~/store/shop/shopActionTypes';\n\nlet cancelPreviousCategoryRequest = () => {};\nlet cancelPreviousProductsListRequest = () => {};\n\nexport function shopInit(\n    categorySlug: string | null,\n    options: IListOptions = {},\n    filters: IFilterValues = {},\n): ShopInitAction {\n    return {\n        type: SHOP_INIT,\n        categorySlug,\n        options,\n        filters,\n    };\n}\n\nexport function shopFetchCategorySuccess(category: IShopCategory | null): ShopFetchCategorySuccessAction {\n    return {\n        type: SHOP_FETCH_CATEGORY_SUCCESS,\n        category,\n    };\n}\n\nexport function shopFetchProductsListStart(): ShopFetchProductsListStartAction {\n    return {\n        type: SHOP_FETCH_PRODUCTS_LIST_START,\n    };\n}\n\nexport function shopFetchProductsListSuccess(productsList: IProductsList): ShopFetchProductsListSuccessAction {\n    return {\n        type: SHOP_FETCH_PRODUCTS_LIST_SUCCESS,\n        productsList,\n    };\n}\n\nexport function shopResetFilters(): ShopResetFiltersAction {\n    return {\n        type: SHOP_RESET_FILTERS,\n    };\n}\n\nexport function shopResetFilter(activeFilter: IActiveFilter): ShopResetFilterAction {\n    return {\n        type: SHOP_RESET_FILTER,\n        activeFilter,\n    };\n}\n\nexport function shopSetOptionValue(option: string, value: string): ShopSetOptionValueAction {\n    return {\n        type: SHOP_SET_OPTION_VALUE,\n        option,\n        value,\n    };\n}\n\nexport function shopSetFilterValue(filter: string, value: string | null): ShopSetFilterValueAction {\n    return {\n        type: SHOP_SET_FILTER_VALUE,\n        filter,\n        value,\n    };\n}\n\nexport function shopFetchCategoryThunk(categorySlug: string | null): ShopThunkAction<Promise<void>> {\n    return async (dispatch) => {\n        let canceled = false;\n\n        cancelPreviousCategoryRequest();\n        cancelPreviousCategoryRequest = () => { canceled = true; };\n\n        let request: Promise<IShopCategory | null>;\n\n        if (categorySlug) {\n            request = shopApi.getCategoryBySlug(categorySlug);\n        } else {\n            request = Promise.resolve(null);\n        }\n\n        const category = await request;\n\n        if (canceled && process.browser) {\n            return;\n        }\n\n        dispatch(shopFetchCategorySuccess(category));\n    };\n}\n\nexport function shopFetchProductsListThunk(): ShopThunkAction<Promise<void>> {\n    return async (dispatch, getState) => {\n        let canceled = false;\n\n        cancelPreviousProductsListRequest();\n        cancelPreviousProductsListRequest = () => { canceled = true; };\n\n        dispatch(shopFetchProductsListStart());\n\n        const shopState = getState()[SHOP_NAMESPACE];\n\n        let { filters } = shopState;\n\n        if (shopState.categorySlug !== null) {\n            filters = { ...filters, category: shopState.categorySlug };\n        }\n\n        const productsList = await shopApi.getProductsList(shopState.options, filters);\n\n        if (canceled && process.browser) {\n            return;\n        }\n\n        dispatch(shopFetchProductsListSuccess(productsList));\n    };\n}\n\nexport function shopSetOptionValueThunk(option: string, value: string): ShopThunkAction<Promise<void>> {\n    return async (dispatch) => {\n        dispatch(shopSetOptionValue(option, value));\n        await dispatch(shopFetchProductsListThunk());\n    };\n}\n\nexport function shopSetFilterValueThunk(filter: string, value: string | null): ShopThunkAction<Promise<void>> {\n    return async (dispatch) => {\n        dispatch(shopSetFilterValue(filter, value));\n        await dispatch(shopFetchProductsListThunk());\n    };\n}\n\nexport function shopResetFiltersThunk(): ShopThunkAction<Promise<void>> {\n    return async (dispatch) => {\n        dispatch(shopResetFilters());\n        await dispatch(shopFetchProductsListThunk());\n    };\n}\n\nexport function shopResetFilterThunk(activeFilter: IActiveFilter): ShopThunkAction<Promise<void>> {\n    return async (dispatch) => {\n        dispatch(shopResetFilter(activeFilter));\n        await dispatch(shopFetchProductsListThunk());\n    };\n}\n\nexport function shopInitThunk(\n    categorySlug: string | null,\n    options: IListOptions = {},\n    filters: IFilterValues = {},\n): ShopThunkAction<Promise<void>> {\n    return async (dispatch) => {\n        dispatch(shopInit(categorySlug, options, filters));\n\n        await Promise.all([\n            dispatch(shopFetchCategoryThunk(categorySlug)),\n            dispatch(shopFetchProductsListThunk()),\n        ]);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}