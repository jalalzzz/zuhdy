{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\shop\\\\ProductForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { useFormContext } from 'react-hook-form'; // application\n\nimport { colorType } from '~/services/color';\n\nfunction ProductForm(props) {\n  _s();\n\n  var _this = this;\n\n  var options = props.options,\n      namespace = props.namespace,\n      className = props.className,\n      rootProps = _objectWithoutProperties(props, [\"options\", \"namespace\", \"className\"]);\n\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register;\n\n  var ns = useMemo(function () {\n    return namespace ? \"\".concat(namespace, \".\") : '';\n  }, [namespace]);\n  var optionsTemplate = options.map(function (option, optionIdx) {\n    return __jsx(\"div\", {\n      key: optionIdx,\n      className: \"product-form__row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"product-form__title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, option.name), __jsx(\"div\", {\n      className: \"product-form__control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, option.type === 'default' && __jsx(\"div\", {\n      className: \"input-radio-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"input-radio-label__list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, option.values.map(function (value, valueIdx) {\n      return __jsx(\"label\", {\n        key: valueIdx,\n        className: \"input-radio-label__item\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, __jsx(\"input\", {\n        type: \"radio\",\n        name: \"\".concat(ns).concat(option.slug),\n        className: \"input-radio-label__input\",\n        value: value.slug,\n        ref: register({\n          required: true\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 37\n        }\n      }), __jsx(\"span\", {\n        className: \"input-radio-label__title\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }\n      }, value.name));\n    }))), option.type === 'color' && __jsx(\"div\", {\n      className: \"input-radio-color\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"input-radio-color__list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, option.values.map(function (value, valueIdx) {\n      return __jsx(React.Fragment, {\n        key: valueIdx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, __jsx(\"label\", {\n        className: classNames('input-radio-color__item', {\n          'input-radio-color__item--white': colorType(value.color) === 'white'\n        }),\n        id: \"product-option-\".concat(optionIdx, \"-\").concat(valueIdx),\n        style: {\n          color: value.color\n        },\n        title: value.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, __jsx(\"input\", {\n        type: \"radio\",\n        name: \"\".concat(ns).concat(option.slug),\n        value: value.slug,\n        ref: register({\n          required: true\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      })), __jsx(UncontrolledTooltip, {\n        target: \"product-option-\".concat(optionIdx, \"-\").concat(valueIdx),\n        fade: false,\n        delay: {\n          show: 0,\n          hide: 0\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, value.name));\n    })))));\n  });\n  var rootClasses = classNames('product-form', className);\n  return __jsx(\"div\", _extends({\n    className: rootClasses\n  }, rootProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"product-form__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, optionsTemplate));\n}\n\n_s(ProductForm, \"5IqbdgVsf+vuwgfe9TCqwpEgayY=\", false, function () {\n  return [useFormContext];\n});\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shop/ProductForm.tsx"],"names":["React","useMemo","classNames","UncontrolledTooltip","useFormContext","colorType","ProductForm","props","options","namespace","className","rootProps","register","ns","optionsTemplate","map","option","optionIdx","name","type","values","value","valueIdx","slug","required","color","show","hide","rootClasses"],"mappings":"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","sourcesContent":["// react\nimport React, { useMemo } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { useFormContext } from 'react-hook-form';\n// application\nimport { colorType } from '~/services/color';\nimport { IProductOption } from '~/interfaces/product';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    options: IProductOption[];\n    namespace?: string;\n}\n\nfunction ProductForm(props: Props) {\n    const {\n        options,\n        namespace,\n        className,\n        ...rootProps\n    } = props;\n    const { register } = useFormContext();\n    const ns = useMemo(() => (namespace ? `${namespace}.` : ''), [namespace]);\n\n    const optionsTemplate = options.map((option, optionIdx) => (\n        <div key={optionIdx} className=\"product-form__row\">\n            <div className=\"product-form__title\">{option.name}</div>\n            <div className=\"product-form__control\">\n                {option.type === 'default' && (\n                    <div className=\"input-radio-label\">\n                        <div className=\"input-radio-label__list\">\n                            {option.values.map((value, valueIdx) => (\n                                <label key={valueIdx} className=\"input-radio-label__item\">\n                                    <input\n                                        type=\"radio\"\n                                        name={`${ns}${option.slug}`}\n                                        className=\"input-radio-label__input\"\n                                        value={value.slug}\n                                        ref={register({ required: true })}\n                                    />\n\n                                    <span className=\"input-radio-label__title\">{value.name}</span>\n                                </label>\n                            ))}\n                        </div>\n                    </div>\n                )}\n                {option.type === 'color' && (\n                    <div className=\"input-radio-color\">\n                        <div className=\"input-radio-color__list\">\n                            {option.values.map((value, valueIdx) => (\n                                <React.Fragment key={valueIdx}>\n                                    <label\n                                        className={classNames('input-radio-color__item', {\n                                            'input-radio-color__item--white': colorType(value.color) === 'white',\n                                        })}\n                                        id={`product-option-${optionIdx}-${valueIdx}`}\n                                        style={{ color: value.color }}\n                                        title={value.name}\n                                    >\n                                        <input\n                                            type=\"radio\"\n                                            name={`${ns}${option.slug}`}\n                                            value={value.slug}\n                                            ref={register({ required: true })}\n                                        />\n                                        <span />\n                                    </label>\n\n                                    <UncontrolledTooltip\n                                        target={`product-option-${optionIdx}-${valueIdx}`}\n                                        fade={false}\n                                        delay={{ show: 0, hide: 0 }}\n                                    >\n                                        {value.name}\n                                    </UncontrolledTooltip>\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    ));\n\n    const rootClasses = classNames('product-form', className);\n\n    return (\n        <div className={rootClasses} {...rootProps}>\n            <div className=\"product-form__body\">\n                {optionsTemplate}\n            </div>\n        </div>\n    );\n}\n\nexport default ProductForm;\n"]},"metadata":{},"sourceType":"module"}