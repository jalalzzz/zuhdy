{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\header\\\\DropdownLanguage.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport Dropdown from '~/components/header/Dropdown';\nimport { getAllLanguages } from '~/services/i18n/utils';\n// data\nimport { useLanguage, useSetLocale } from '~/services/i18n/hooks';\n\nfunction DropdownLanguage() {\n  _s();\n\n  var language = useLanguage();\n  var setLocale = useSetLocale();\n\n  var handleItemClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLocale(item.language.locale);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleItemClick(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var items = useMemo(function () {\n    return getAllLanguages().map(function (eachLanguage) {\n      return {\n        title: eachLanguage.name,\n        image: eachLanguage.icon,\n        language: eachLanguage\n      };\n    });\n  }, []);\n\n  var label = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_TOPBAR_LANGUAGE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), \":\");\n\n  return __jsx(Dropdown, {\n    label: label,\n    title: language.code.toUpperCase(),\n    items: items,\n    onItemClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  });\n}\n\n_s(DropdownLanguage, \"soE7fBNbAmFwNtNb2dc6ahr6Leo=\", false, function () {\n  return [useLanguage, useSetLocale];\n});\n\n_c = DropdownLanguage;\nexport default DropdownLanguage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownLanguage\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/header/DropdownLanguage.tsx"],"names":["React","useMemo","FormattedMessage","Dropdown","getAllLanguages","useLanguage","useSetLocale","DropdownLanguage","language","setLocale","handleItemClick","item","locale","items","map","eachLanguage","title","name","image","icon","label","code","toUpperCase"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAwC,8BAAxC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,uBAA1C;;AAMA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,MAAMI,SAAS,GAAGH,YAAY,EAA9B;;AAEA,MAAMI,eAAe;AAAA,wEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACpBF,cAAAA,SAAS,CAACE,IAAI,CAACH,QAAL,CAAcI,MAAf,CAAT;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfF,eAAe;AAAA;AAAA;AAAA,KAArB;;AAIA,MAAMG,KAAa,GAAGZ,OAAO,CAAC;AAAA,WAC1BG,eAAe,GAAGU,GAAlB,CAAuB,UAACC,YAAD;AAAA,aAAmB;AACtCC,QAAAA,KAAK,EAAED,YAAY,CAACE,IADkB;AAEtCC,QAAAA,KAAK,EAAEH,YAAY,CAACI,IAFkB;AAGtCX,QAAAA,QAAQ,EAAEO;AAH4B,OAAnB;AAAA,KAAvB,CAD0B;AAAA,GAAD,EAM1B,EAN0B,CAA7B;;AAQA,MAAMK,KAAK,GACP,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,MADJ;;AAOA,SACI,MAAC,QAAD;AACI,IAAA,KAAK,EAAEA,KADX;AAEI,IAAA,KAAK,EAAEZ,QAAQ,CAACa,IAAT,CAAcC,WAAd,EAFX;AAGI,IAAA,KAAK,EAAET,KAHX;AAII,IAAA,WAAW,EAAEH,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;GA/BQH,gB;UACYF,W,EACCC,Y;;;KAFbC,gB;AAiCT,eAAeA,gBAAf","sourcesContent":["// react\nimport React, { useMemo } from 'react';\n// third-party\nimport { FormattedMessage } from 'react-intl';\n// application\nimport Dropdown, { IDropdownItem } from '~/components/header/Dropdown';\nimport { getAllLanguages } from '~/services/i18n/utils';\nimport { ILanguage } from '~/interfaces/language';\n// data\nimport { useLanguage, useSetLocale } from '~/services/i18n/hooks';\n\ninterface Item extends IDropdownItem {\n    language: ILanguage;\n}\n\nfunction DropdownLanguage() {\n    const language = useLanguage();\n    const setLocale = useSetLocale();\n\n    const handleItemClick = async (item: Item) => {\n        setLocale(item.language.locale);\n    };\n\n    const items: Item[] = useMemo(() => (\n        getAllLanguages().map(((eachLanguage) => ({\n            title: eachLanguage.name,\n            image: eachLanguage.icon,\n            language: eachLanguage,\n        })))\n    ), []);\n\n    const label = (\n        <React.Fragment>\n            <FormattedMessage id=\"TEXT_TOPBAR_LANGUAGE\" />\n            :\n        </React.Fragment>\n    );\n\n    return (\n        <Dropdown\n            label={label}\n            title={language.code.toUpperCase()}\n            items={items}\n            onItemClick={handleItemClick}\n        />\n    );\n}\n\nexport default DropdownLanguage;\n"]},"metadata":{},"sourceType":"module"}