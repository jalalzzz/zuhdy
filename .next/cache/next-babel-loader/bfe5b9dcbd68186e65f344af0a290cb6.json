{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { AbstractFilterBuilder } from '~/fake-server/filters/abstract-filter-builder';\nimport { vehicles as dbVehicles } from '~/fake-server/database/vehicles';\nexport var VehicleFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(VehicleFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(VehicleFilterBuilder);\n\n  function VehicleFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, VehicleFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"vehicle\", null);\n\n    return _this;\n  }\n\n  _createClass(VehicleFilterBuilder, [{\n    key: \"test\",\n    value: function test(product) {\n      if (this.value) {\n        return this.vehicle !== null && VehicleFilterBuilder.testCompatibility(this.vehicle, product);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      this.vehicle = dbVehicles.find(function (x) {\n        return x.id === parseFloat(value);\n      }) || null;\n      this.value = this.vehicle ? this.vehicle.id : null;\n    }\n  }, {\n    key: \"calc\",\n    value: function calc() {}\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'vehicle',\n        slug: this.slug,\n        name: this.name,\n        value: this.value,\n        vehicle: this.vehicle\n      };\n    }\n  }], [{\n    key: \"testCompatibility\",\n    value: function testCompatibility(vehicle, product) {\n      if (product.compatibility === 'all') {\n        return true;\n      }\n\n      if (product.compatibility === 'unknown') {\n        return false;\n      }\n\n      return product.compatibility.includes(vehicle.id);\n    }\n  }]);\n\n  return VehicleFilterBuilder;\n}(AbstractFilterBuilder);","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/filters/vehicle-filter-builder.ts"],"names":["AbstractFilterBuilder","vehicles","dbVehicles","VehicleFilterBuilder","product","value","vehicle","testCompatibility","products","find","x","id","parseFloat","type","slug","name","compatibility","includes"],"mappings":";;;;;;;;;;;;AAAA;AAEA;AACA,SAASA,qBAAT,QAAsC,+CAAtC;AAIA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,iCAAvC;AAEA,WAAaC,oBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACyC,IADzC;;AAAA,8DAGuC,IAHvC;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAgBI,cAAKC,OAAL,EAAiC;AAC7B,UAAI,KAAKC,KAAT,EAAgB;AACZ,eAAO,KAAKC,OAAL,KAAiB,IAAjB,IAAyBH,oBAAoB,CAACI,iBAArB,CAAuC,KAAKD,OAA5C,EAAqDF,OAArD,CAAhC;AACH;;AAED,aAAO,IAAP;AACH;AAtBL;AAAA;AAAA,WAwBI,mBAAUI,QAAV,EAAgCH,KAAhC,EAAqD;AACjD,WAAKC,OAAL,GAAeJ,UAAU,CAACO,IAAX,CAAgB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,EAAF,KAASC,UAAU,CAACP,KAAD,CAA1B;AAAA,OAAhB,KAAsD,IAArE;AACA,WAAKA,KAAL,GAAa,KAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaK,EAA5B,GAAiC,IAA9C;AACH;AA3BL;AAAA;AAAA,WA6BI,gBAAa,CAAG;AA7BpB;AAAA;AAAA,WA+BI,iBAAwB;AACpB,aAAO;AACHE,QAAAA,IAAI,EAAE,SADH;AAEHC,QAAAA,IAAI,EAAE,KAAKA,IAFR;AAGHC,QAAAA,IAAI,EAAE,KAAKA,IAHR;AAIHV,QAAAA,KAAK,EAAE,KAAKA,KAJT;AAKHC,QAAAA,OAAO,EAAE,KAAKA;AALX,OAAP;AAOH;AAvCL;AAAA;AAAA,WAKI,2BAAiCA,OAAjC,EAAoDF,OAApD,EAAgF;AAC5E,UAAIA,OAAO,CAACY,aAAR,KAA0B,KAA9B,EAAqC;AACjC,eAAO,IAAP;AACH;;AACD,UAAIZ,OAAO,CAACY,aAAR,KAA0B,SAA9B,EAAyC;AACrC,eAAO,KAAP;AACH;;AAED,aAAOZ,OAAO,CAACY,aAAR,CAAsBC,QAAtB,CAA+BX,OAAO,CAACK,EAAvC,CAAP;AACH;AAdL;;AAAA;AAAA,EAA0CX,qBAA1C","sourcesContent":["/* eslint-disable import/prefer-default-export,class-methods-use-this */\n\n// application\nimport { AbstractFilterBuilder } from '~/fake-server/filters/abstract-filter-builder';\nimport { IProduct } from '~/interfaces/product';\nimport { IVehicle } from '~/interfaces/vehicle';\nimport { IVehicleFilter, IVehicleFilterValue } from '~/interfaces/filter';\nimport { vehicles as dbVehicles } from '~/fake-server/database/vehicles';\n\nexport class VehicleFilterBuilder extends AbstractFilterBuilder {\n    private value: IVehicleFilterValue = null;\n\n    private vehicle: IVehicle | null = null;\n\n    private static testCompatibility(vehicle: IVehicle, product: IProduct): boolean {\n        if (product.compatibility === 'all') {\n            return true;\n        }\n        if (product.compatibility === 'unknown') {\n            return false;\n        }\n\n        return product.compatibility.includes(vehicle.id);\n    }\n\n    test(product: IProduct): boolean {\n        if (this.value) {\n            return this.vehicle !== null && VehicleFilterBuilder.testCompatibility(this.vehicle, product);\n        }\n\n        return true;\n    }\n\n    makeItems(products: IProduct[], value: string): void {\n        this.vehicle = dbVehicles.find((x) => x.id === parseFloat(value)) || null;\n        this.value = this.vehicle ? this.vehicle.id : null;\n    }\n\n    calc(): void { }\n\n    build(): IVehicleFilter {\n        return {\n            type: 'vehicle',\n            slug: this.slug,\n            name: this.name,\n            value: this.value,\n            vehicle: this.vehicle,\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}