{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n// application\nexport function baseUrl(url) {\n  if (/^\\/([^/]|$)/.test(url)) {\n    return \"\".concat(process.env.basePath).concat(url);\n  }\n\n  return url;\n}\nexport function getCategoryPath(category) {\n  return category ? [].concat(_toConsumableArray(getCategoryPath(category.parent)), [category]) : [];\n}\nexport function getCategoryParents(category) {\n  return category.parent ? [].concat(_toConsumableArray(getCategoryParents(category.parent)), [category.parent]) : [];\n}\nexport function isArrayOfStrings(value) {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n\n  return !value.map(function (x) {\n    return typeof x !== 'string';\n  }).includes(true);\n}\nexport function isArrayOfNumbers(value) {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n\n  return !value.map(function (x) {\n    return typeof x !== 'number';\n  }).includes(true);\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/services/utils.ts"],"names":["baseUrl","url","test","process","env","basePath","getCategoryPath","category","parent","getCategoryParents","isArrayOfStrings","value","Array","isArray","map","x","includes","isArrayOfNumbers"],"mappings":";AAAA;AAGA,OAAO,SAASA,OAAT,CAAiBC,GAAjB,EAAsC;AACzC,MAAI,cAAcC,IAAd,CAAmBD,GAAnB,CAAJ,EAA6B;AACzB,qBAAUE,OAAO,CAACC,GAAR,CAAYC,QAAtB,SAAiCJ,GAAjC;AACH;;AAED,SAAOA,GAAP;AACH;AAED,OAAO,SAASK,eAAT,CAAkDC,QAAlD,EAAuF;AAC1F,SAAOA,QAAQ,gCAAOD,eAAe,CAACC,QAAQ,CAACC,MAAV,CAAtB,IAAyCD,QAAzC,KAAqD,EAApE;AACH;AAED,OAAO,SAASE,kBAAT,CAA4BF,QAA5B,EAA8D;AACjE,SAAOA,QAAQ,CAACC,MAAT,gCAAsBC,kBAAkB,CAACF,QAAQ,CAACC,MAAV,CAAxC,IAA2DD,QAAQ,CAACC,MAApE,KAA8E,EAArF;AACH;AAED,OAAO,SAASE,gBAAT,CAA0BC,KAA1B,EAAyD;AAC5D,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvB,WAAO,KAAP;AACH;;AAED,SAAO,CAACA,KAAK,CAACG,GAAN,CAAU,UAACC,CAAD;AAAA,WAAO,OAAOA,CAAP,KAAa,QAApB;AAAA,GAAV,EAAwCC,QAAxC,CAAiD,IAAjD,CAAR;AACH;AAED,OAAO,SAASC,gBAAT,CAA0BN,KAA1B,EAAyD;AAC5D,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvB,WAAO,KAAP;AACH;;AAED,SAAO,CAACA,KAAK,CAACG,GAAN,CAAU,UAACC,CAAD;AAAA,WAAO,OAAOA,CAAP,KAAa,QAApB;AAAA,GAAV,EAAwCC,QAAxC,CAAiD,IAAjD,CAAR;AACH","sourcesContent":["// application\nimport { IBaseCategory, ICategory } from '~/interfaces/category';\n\nexport function baseUrl(url: string): string {\n    if (/^\\/([^/]|$)/.test(url)) {\n        return `${process.env.basePath}${url}`;\n    }\n\n    return url;\n}\n\nexport function getCategoryPath<T extends IBaseCategory>(category: T | null | undefined): T[] {\n    return category ? [...getCategoryPath(category.parent), category] : [];\n}\n\nexport function getCategoryParents(category: ICategory): ICategory[] {\n    return category.parent ? [...getCategoryParents(category.parent), category.parent] : [];\n}\n\nexport function isArrayOfStrings(value: any): value is string[] {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n\n    return !value.map((x) => typeof x !== 'string').includes(true);\n}\n\nexport function isArrayOfNumbers(value: any): value is number[] {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n\n    return !value.map((x) => typeof x !== 'number').includes(true);\n}\n"]},"metadata":{},"sourceType":"module"}