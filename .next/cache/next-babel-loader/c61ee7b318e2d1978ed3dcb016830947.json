{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\widgets\\\\WidgetCategories.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport Collapse from '~/components/shared/Collapse';\nimport url from '~/services/url';\n\nfunction WidgetCategories(props) {\n  const {\n    widgetTitle,\n    categories\n  } = props;\n  return __jsx(\"div\", {\n    className: \"card widget widget-categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, widgetTitle && __jsx(\"div\", {\n    className: \"widget__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, widgetTitle)), __jsx(\"ul\", {\n    className: \"widget-categories__list widget-categories__list--root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, categories.map((category, index) => {\n    const children = category.children || [];\n\n    const render = ({\n      toggle,\n      setItemRef,\n      setContentRef\n    }) => __jsx(\"li\", {\n      className: \"widget-categories__item\",\n      ref: setItemRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, __jsx(AppLink, {\n      href: url.category(category),\n      className: \"widget-categories__link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, category.name), children.length > 0 && __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"widget-categories__expander\",\n      \"aria-label\": \"Toggle\",\n      onClick: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }), __jsx(\"div\", {\n      className: \"widget-categories__container\",\n      ref: setContentRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, __jsx(\"ul\", {\n      className: \"widget-categories__list widget-categories__list--child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }, children.map((child, childIndex) => __jsx(\"li\", {\n      key: childIndex,\n      className: \"widget-categories__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 49\n      }\n    }, __jsx(AppLink, {\n      href: url.category(child),\n      className: \"widget-categories__link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }\n    }, child.name)))))));\n\n    return __jsx(Collapse, {\n      key: index,\n      toggleClass: \"widget-categories__item--open\",\n      render: render,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    });\n  })));\n}\n\nexport default WidgetCategories;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/widgets/WidgetCategories.tsx"],"names":["React","AppLink","Collapse","url","WidgetCategories","props","widgetTitle","categories","map","category","index","children","render","toggle","setItemRef","setContentRef","name","length","child","childIndex"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAA4C,8BAA5C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AAUA,SAASC,gBAAT,CAA0BC,KAA1B,EAAwC;AACpC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BF,KAApC;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,WAAW,IACR;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,WAAL,CADJ,CAFR,EAMI;AAAI,IAAA,SAAS,EAAC,uDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,UAAU,CAACC,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjC,UAAMC,QAAqB,GAAGF,QAAQ,CAACE,QAAT,IAAqB,EAAnD;;AAEA,UAAMC,MAAsB,GAAG,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA;AAAtB,KAAD,KAC3B;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAwC,MAAA,GAAG,EAAED,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEX,GAAG,CAACM,QAAJ,CAAaA,QAAb,CAAf;AAAuC,MAAA,SAAS,EAAC,yBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QAAQ,CAACO,IADd,CADJ,EAIKL,QAAQ,CAACM,MAAT,GAAkB,CAAlB,IACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,6BAFd;AAGI,oBAAW,QAHf;AAII,MAAA,OAAO,EAAEJ,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,GAAG,EAAEE,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,wDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,QAAQ,CAACH,GAAT,CAAa,CAACU,KAAD,EAAQC,UAAR,KACV;AAAI,MAAA,GAAG,EAAEA,UAAT;AAAqB,MAAA,SAAS,EAAC,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AACI,MAAA,IAAI,EAAEhB,GAAG,CAACM,QAAJ,CAAaS,KAAb,CADV;AAEI,MAAA,SAAS,EAAC,yBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKA,KAAK,CAACF,IAJX,CADJ,CADH,CADL,CADJ,CAPJ,CALR,CADJ;;AAgCA,WACI,MAAC,QAAD;AACI,MAAA,GAAG,EAAEN,KADT;AAEI,MAAA,WAAW,EAAC,+BAFhB;AAGI,MAAA,MAAM,EAAEE,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GA1CA,CADL,CANJ,CADJ;AAsDH;;AAED,eAAeR,gBAAf","sourcesContent":["// react\nimport React from 'react';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport Collapse, { ICollapseRenderFn } from '~/components/shared/Collapse';\nimport url from '~/services/url';\nimport { ICategory } from '~/interfaces/category';\n\ninterface Props {\n    widgetTitle?: React.ReactNode;\n    categories: ICategory[];\n}\n\ntype RenderFilterFn = ICollapseRenderFn<HTMLLIElement, HTMLDivElement>;\n\nfunction WidgetCategories(props: Props) {\n    const { widgetTitle, categories } = props;\n\n    return (\n        <div className=\"card widget widget-categories\">\n            {widgetTitle && (\n                <div className=\"widget__header\">\n                    <h4>{widgetTitle}</h4>\n                </div>\n            )}\n            <ul className=\"widget-categories__list widget-categories__list--root\">\n                {categories.map((category, index) => {\n                    const children: ICategory[] = category.children || [];\n\n                    const render: RenderFilterFn = ({ toggle, setItemRef, setContentRef }) => (\n                        <li className=\"widget-categories__item\" ref={setItemRef}>\n                            <AppLink href={url.category(category)} className=\"widget-categories__link\">\n                                {category.name}\n                            </AppLink>\n                            {children.length > 0 && (\n                                <React.Fragment>\n                                    <button\n                                        type=\"button\"\n                                        className=\"widget-categories__expander\"\n                                        aria-label=\"Toggle\"\n                                        onClick={toggle}\n                                    />\n                                    <div className=\"widget-categories__container\" ref={setContentRef}>\n                                        <ul className=\"widget-categories__list widget-categories__list--child\">\n                                            {children.map((child, childIndex) => (\n                                                <li key={childIndex} className=\"widget-categories__item\">\n                                                    <AppLink\n                                                        href={url.category(child)}\n                                                        className=\"widget-categories__link\"\n                                                    >\n                                                        {child.name}\n                                                    </AppLink>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                </React.Fragment>\n                            )}\n                        </li>\n                    );\n\n                    return (\n                        <Collapse\n                            key={index}\n                            toggleClass=\"widget-categories__item--open\"\n                            render={render}\n                        />\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\nexport default WidgetCategories;\n"]},"metadata":{},"sourceType":"module"}