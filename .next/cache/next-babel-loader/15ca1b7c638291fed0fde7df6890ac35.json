{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\filters\\\\FilterVehicle.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect, useState } from 'react'; // third-party\n\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport Checkbox from '~/components/shared/Checkbox';\nimport VehiclePickerModal from '~/components/shared/VehiclePickerModal';\nimport { useCurrentVehicle } from '~/services/current-vehicle';\n\nfunction FilterVehicle(props) {\n  _s();\n\n  var options = props.options,\n      value = props.value,\n      onChangeValue = props.onChangeValue;\n\n  var _useCurrentVehicle = useCurrentVehicle(),\n      _useCurrentVehicle2 = _slicedToArray(_useCurrentVehicle, 2),\n      currentVehicle = _useCurrentVehicle2[0],\n      setCurrentVehicle = _useCurrentVehicle2[1];\n\n  var _useState = useState(false),\n      vehiclePickerIsOpen = _useState[0],\n      setVehiclePickerIsOpen = _useState[1];\n\n  var _useState2 = useState(options.vehicle),\n      initialVehicle = _useState2[0];\n\n  var updateValue = function updateValue(newValue) {\n    if (onChangeValue) {\n      onChangeValue({\n        filter: options,\n        value: newValue\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (event.target.checked && currentVehicle) {\n      updateValue(currentVehicle.id);\n    } else {\n      updateValue(null);\n    }\n  };\n\n  var showVehiclePicker = function showVehiclePicker() {\n    setVehiclePickerIsOpen(true);\n  };\n\n  var onVehiclePickerClose = function onVehiclePickerClose() {\n    setVehiclePickerIsOpen(false);\n  };\n\n  var onVehiclePickerSelect = function onVehiclePickerSelect(selectedVehicle) {\n    setCurrentVehicle(selectedVehicle || null);\n\n    if (value !== null) {\n      updateValue((selectedVehicle === null || selectedVehicle === void 0 ? void 0 : selectedVehicle.id) || null);\n    }\n  };\n\n  useEffect(function () {\n    if (initialVehicle === null) {\n      return;\n    }\n\n    setTimeout(function () {\n      setCurrentVehicle(initialVehicle || null);\n    }, 0);\n  }, [setCurrentVehicle, initialVehicle]);\n  return __jsx(\"div\", {\n    className: \"filter-vehicle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(VehiclePickerModal, {\n    value: currentVehicle,\n    isOpen: vehiclePickerIsOpen,\n    onClose: onVehiclePickerClose,\n    onSelect: onVehiclePickerSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), currentVehicle !== null && __jsx(\"ul\", {\n    className: \"filter-vehicle__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    className: \"filter-vehicle__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    className: \"filter-vehicle__item-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, __jsx(Checkbox, {\n    className: \"filter-list__input\",\n    checked: value !== null,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    className: \"filter-vehicle__item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_ONLY_EXACT_FIT_PARTS_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  })))), __jsx(\"li\", {\n    className: \"filter-vehicle__vehicle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-vehicle__vehicle-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"\".concat(currentVehicle.year, \" \").concat(currentVehicle.make, \" \").concat(currentVehicle.model)), __jsx(\"div\", {\n    className: \"filter-vehicle__vehicle-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, currentVehicle.engine))), currentVehicle === null && __jsx(\"div\", {\n    className: \"filter-vehicle__empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_VEHICLE_FILTER_HELP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"filter-vehicle__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-xs btn-secondary\",\n    onClick: showVehiclePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SELECT_VEHICLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(FilterVehicle, \"czL9L88m2Op7giQ0tD6lKXfDhjg=\", false, function () {\n  return [useCurrentVehicle];\n});\n\n_c = FilterVehicle;\nexport default FilterVehicle;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterVehicle\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/filters/FilterVehicle.tsx"],"names":["React","useEffect","useState","FormattedMessage","Checkbox","VehiclePickerModal","useCurrentVehicle","FilterVehicle","props","options","value","onChangeValue","currentVehicle","setCurrentVehicle","vehiclePickerIsOpen","setVehiclePickerIsOpen","vehicle","initialVehicle","updateValue","newValue","filter","handleChange","event","target","checked","id","showVehiclePicker","onVehiclePickerClose","onVehiclePickerSelect","selectedVehicle","setTimeout","year","make","model","engine"],"mappings":"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","sourcesContent":["// react\nimport React, { useEffect, useState } from 'react';\n// third-party\nimport { FormattedMessage } from 'react-intl';\n// application\nimport Checkbox from '~/components/shared/Checkbox';\nimport VehiclePickerModal from '~/components/shared/VehiclePickerModal';\nimport { IVehicle } from '~/interfaces/vehicle';\nimport { IVehicleFilter, IVehicleFilterValue } from '~/interfaces/filter';\nimport { useCurrentVehicle } from '~/services/current-vehicle';\n\ninterface Props {\n    options: IVehicleFilter;\n    value: IVehicleFilterValue;\n    onChangeValue?: (event: { filter: IVehicleFilter, value: IVehicleFilterValue }) => void;\n}\n\nfunction FilterVehicle(props: Props) {\n    const { options, value, onChangeValue } = props;\n    const [currentVehicle, setCurrentVehicle] = useCurrentVehicle();\n    const [vehiclePickerIsOpen, setVehiclePickerIsOpen] = useState(false);\n    const [initialVehicle] = useState(options.vehicle);\n\n    const updateValue = (newValue: IVehicleFilterValue) => {\n        if (onChangeValue) {\n            onChangeValue({ filter: options, value: newValue });\n        }\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked && currentVehicle) {\n            updateValue(currentVehicle.id);\n        } else {\n            updateValue(null);\n        }\n    };\n\n    const showVehiclePicker = () => {\n        setVehiclePickerIsOpen(true);\n    };\n\n    const onVehiclePickerClose = () => {\n        setVehiclePickerIsOpen(false);\n    };\n\n    const onVehiclePickerSelect = (selectedVehicle: IVehicle | null) => {\n        setCurrentVehicle(selectedVehicle || null);\n\n        if (value !== null) {\n            updateValue(selectedVehicle?.id || null);\n        }\n    };\n\n    useEffect(() => {\n        if (initialVehicle === null) {\n            return;\n        }\n\n        setTimeout(() => {\n            setCurrentVehicle(initialVehicle || null);\n        }, 0);\n    }, [setCurrentVehicle, initialVehicle]);\n\n    return (\n        <div className=\"filter-vehicle\">\n            <VehiclePickerModal\n                value={currentVehicle}\n                isOpen={vehiclePickerIsOpen}\n                onClose={onVehiclePickerClose}\n                onSelect={onVehiclePickerSelect}\n            />\n\n            {currentVehicle !== null && (\n                <ul className=\"filter-vehicle__list\">\n                    <li className=\"filter-vehicle__item\">\n                        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                        <label className=\"filter-vehicle__item-label\">\n                            <Checkbox\n                                className=\"filter-list__input\"\n                                checked={value !== null}\n                                onChange={handleChange}\n                            />\n                            <span className=\"filter-vehicle__item-title\">\n                                <FormattedMessage id=\"INPUT_ONLY_EXACT_FIT_PARTS_LABEL\" />\n                            </span>\n                        </label>\n                    </li>\n                    <li className=\"filter-vehicle__vehicle\">\n                        <div className=\"filter-vehicle__vehicle-title\">\n                            {`${currentVehicle.year} ${currentVehicle.make} ${currentVehicle.model}`}\n                        </div>\n                        <div className=\"filter-vehicle__vehicle-subtitle\">\n                            {currentVehicle.engine}\n                        </div>\n                    </li>\n                </ul>\n            )}\n            {currentVehicle === null && (\n                <div className=\"filter-vehicle__empty\">\n                    <FormattedMessage id=\"TEXT_VEHICLE_FILTER_HELP\" />\n                </div>\n            )}\n\n            <div className=\"filter-vehicle__button\">\n                <button type=\"button\" className=\"btn btn-xs btn-secondary\" onClick={showVehiclePicker}>\n                    <FormattedMessage id=\"BUTTON_SELECT_VEHICLE\" />\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default FilterVehicle;\n"]},"metadata":{},"sourceType":"module"}