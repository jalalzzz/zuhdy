{"ast":null,"code":"// react\nimport { useCallback } from 'react'; // application\n\nimport { SHOP_NAMESPACE } from '~/store/shop/shopTypes';\nimport { useAppAction, useAppSelector } from '~/store/hooks';\nimport { shopResetFiltersThunk, shopResetFilterThunk, shopSetFilterValueThunk, shopSetOptionValueThunk } from '~/store/shop/shopActions';\nexport function useShopSelector(selector) {\n  return useAppSelector(state => selector(state[SHOP_NAMESPACE]));\n}\nexport const useShop = () => useShopSelector(state => state);\nexport const useShopProductsListIsLoading = () => useShopSelector(state => state.productsListIsLoading);\nexport const useShopProductsList = () => useShopSelector(state => state.productsList);\nexport const useShopOptions = () => useShopSelector(state => state.options);\nexport const useShopFilters = () => useShopSelector(state => {\n  var _state$productsList;\n\n  return ((_state$productsList = state.productsList) === null || _state$productsList === void 0 ? void 0 : _state$productsList.filters) || [];\n});\nexport const useShopFilterValues = () => useShopSelector(state => state.filters);\nexport const useShopResetFiltersThunk = () => useAppAction(shopResetFiltersThunk);\nexport const useShopResetFilterThunk = () => useAppAction(shopResetFilterThunk);\nexport const useShopSetOptionValueThunk = () => useAppAction(shopSetOptionValueThunk);\nexport const useShopSetFilterValueThunk = () => useAppAction(shopSetFilterValueThunk);\nexport function useSetOption(option, filterValueFn) {\n  const callback = useCallback(filterValueFn, []);\n  const shopSetOptionValue = useShopSetOptionValueThunk();\n  return useCallback(data => {\n    shopSetOptionValue(option, callback(data)).then();\n  }, [shopSetOptionValue, option, callback]);\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/shop/shopHooks.ts"],"names":["useCallback","SHOP_NAMESPACE","useAppAction","useAppSelector","shopResetFiltersThunk","shopResetFilterThunk","shopSetFilterValueThunk","shopSetOptionValueThunk","useShopSelector","selector","state","useShop","useShopProductsListIsLoading","productsListIsLoading","useShopProductsList","productsList","useShopOptions","options","useShopFilters","filters","useShopFilterValues","useShopResetFiltersThunk","useShopResetFilterThunk","useShopSetOptionValueThunk","useShopSetFilterValueThunk","useSetOption","option","filterValueFn","callback","shopSetOptionValue","data","then"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,OAA5B,C,CACA;;AAEA,SAASC,cAAT,QAA2C,wBAA3C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SACIC,qBADJ,EAEIC,oBAFJ,EAGIC,uBAHJ,EAIIC,uBAJJ,QAKO,0BALP;AAOA,OAAO,SAASC,eAAT,CAA8DC,QAA9D,EAA0F;AAC7F,SAAON,cAAc,CAAEO,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACT,cAAD,CAAN,CAApB,CAArB;AACH;AAED,OAAO,MAAMU,OAAO,GAAG,MAAMH,eAAe,CAAEE,KAAD,IAAWA,KAAZ,CAArC;AAEP,OAAO,MAAME,4BAA4B,GAAG,MAAMJ,eAAe,CAAEE,KAAD,IAAWA,KAAK,CAACG,qBAAlB,CAA1D;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAMN,eAAe,CAAEE,KAAD,IAAWA,KAAK,CAACK,YAAlB,CAAjD;AAEP,OAAO,MAAMC,cAAc,GAAG,MAAMR,eAAe,CAAEE,KAAD,IAAWA,KAAK,CAACO,OAAlB,CAA5C;AAEP,OAAO,MAAMC,cAAc,GAAG,MAAMV,eAAe,CAAEE,KAAD;AAAA;;AAAA,SAAW,wBAAAA,KAAK,CAACK,YAAN,4EAAoBI,OAApB,KAA+B,EAA1C;AAAA,CAAD,CAA5C;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAMZ,eAAe,CAAEE,KAAD,IAAWA,KAAK,CAACS,OAAlB,CAAjD;AAEP,OAAO,MAAME,wBAAwB,GAAG,MAAMnB,YAAY,CAACE,qBAAD,CAAnD;AAEP,OAAO,MAAMkB,uBAAuB,GAAG,MAAMpB,YAAY,CAACG,oBAAD,CAAlD;AAEP,OAAO,MAAMkB,0BAA0B,GAAG,MAAMrB,YAAY,CAACK,uBAAD,CAArD;AAEP,OAAO,MAAMiB,0BAA0B,GAAG,MAAMtB,YAAY,CAACI,uBAAD,CAArD;AAEP,OAAO,SAASmB,YAAT,CACHC,MADG,EAEHC,aAFG,EAGL;AACE,QAAMC,QAAQ,GAAG5B,WAAW,CAAC2B,aAAD,EAAgB,EAAhB,CAA5B;AACA,QAAME,kBAAkB,GAAGN,0BAA0B,EAArD;AAEA,SAAOvB,WAAW,CAAE8B,IAAD,IAAU;AACzBD,IAAAA,kBAAkB,CAACH,MAAD,EAASE,QAAQ,CAACE,IAAD,CAAjB,CAAlB,CAA2CC,IAA3C;AACH,GAFiB,EAEf,CAACF,kBAAD,EAAqBH,MAArB,EAA6BE,QAA7B,CAFe,CAAlB;AAGH","sourcesContent":["// react\nimport { useCallback } from 'react';\n// application\nimport { IListOptions } from '~/interfaces/list';\nimport { SHOP_NAMESPACE, IShopState } from '~/store/shop/shopTypes';\nimport { useAppAction, useAppSelector } from '~/store/hooks';\nimport {\n    shopResetFiltersThunk,\n    shopResetFilterThunk,\n    shopSetFilterValueThunk,\n    shopSetOptionValueThunk,\n} from '~/store/shop/shopActions';\n\nexport function useShopSelector<T extends(state: IShopState) => any>(selector: T): ReturnType<T> {\n    return useAppSelector((state) => selector(state[SHOP_NAMESPACE]));\n}\n\nexport const useShop = () => useShopSelector((state) => state);\n\nexport const useShopProductsListIsLoading = () => useShopSelector((state) => state.productsListIsLoading);\n\nexport const useShopProductsList = () => useShopSelector((state) => state.productsList);\n\nexport const useShopOptions = () => useShopSelector((state) => state.options);\n\nexport const useShopFilters = () => useShopSelector((state) => state.productsList?.filters || []);\n\nexport const useShopFilterValues = () => useShopSelector((state) => state.filters);\n\nexport const useShopResetFiltersThunk = () => useAppAction(shopResetFiltersThunk);\n\nexport const useShopResetFilterThunk = () => useAppAction(shopResetFilterThunk);\n\nexport const useShopSetOptionValueThunk = () => useAppAction(shopSetOptionValueThunk);\n\nexport const useShopSetFilterValueThunk = () => useAppAction(shopSetFilterValueThunk);\n\nexport function useSetOption(\n    option: keyof IListOptions,\n    filterValueFn: (data: any) => any,\n) {\n    const callback = useCallback(filterValueFn, []);\n    const shopSetOptionValue = useShopSetOptionValueThunk();\n\n    return useCallback((data) => {\n        shopSetOptionValue(option, callback(data)).then();\n    }, [shopSetOptionValue, option, callback]);\n}\n"]},"metadata":{},"sourceType":"module"}