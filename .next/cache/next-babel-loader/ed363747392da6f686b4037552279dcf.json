{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\header\\\\DropdownLanguage.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport Dropdown from '~/components/header/Dropdown';\nimport { getAllLanguages } from '~/services/i18n/utils';\n// data\nimport { useLanguage, useSetLocale } from '~/services/i18n/hooks';\n\nfunction DropdownLanguage() {\n  const language = useLanguage();\n  const setLocale = useSetLocale();\n\n  const handleItemClick = async item => {\n    setLocale(item.language.locale);\n  };\n\n  const items = useMemo(() => getAllLanguages().map(eachLanguage => ({\n    title: eachLanguage.name,\n    image: eachLanguage.icon,\n    language: eachLanguage\n  })), []);\n\n  const label = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_TOPBAR_LANGUAGE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), \":\");\n\n  return __jsx(Dropdown, {\n    label: label,\n    title: language.code.toUpperCase(),\n    items: items,\n    onItemClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default DropdownLanguage;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/header/DropdownLanguage.tsx"],"names":["React","useMemo","FormattedMessage","Dropdown","getAllLanguages","useLanguage","useSetLocale","DropdownLanguage","language","setLocale","handleItemClick","item","locale","items","map","eachLanguage","title","name","image","icon","label","code","toUpperCase"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAwC,8BAAxC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,uBAA1C;;AAMA,SAASC,gBAAT,GAA4B;AACxB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,SAAS,GAAGH,YAAY,EAA9B;;AAEA,QAAMI,eAAe,GAAG,MAAOC,IAAP,IAAsB;AAC1CF,IAAAA,SAAS,CAACE,IAAI,CAACH,QAAL,CAAcI,MAAf,CAAT;AACH,GAFD;;AAIA,QAAMC,KAAa,GAAGZ,OAAO,CAAC,MAC1BG,eAAe,GAAGU,GAAlB,CAAwBC,YAAD,KAAmB;AACtCC,IAAAA,KAAK,EAAED,YAAY,CAACE,IADkB;AAEtCC,IAAAA,KAAK,EAAEH,YAAY,CAACI,IAFkB;AAGtCX,IAAAA,QAAQ,EAAEO;AAH4B,GAAnB,CAAvB,CADyB,EAM1B,EAN0B,CAA7B;;AAQA,QAAMK,KAAK,GACP,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,MADJ;;AAOA,SACI,MAAC,QAAD;AACI,IAAA,KAAK,EAAEA,KADX;AAEI,IAAA,KAAK,EAAEZ,QAAQ,CAACa,IAAT,CAAcC,WAAd,EAFX;AAGI,IAAA,KAAK,EAAET,KAHX;AAII,IAAA,WAAW,EAAEH,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;AAED,eAAeH,gBAAf","sourcesContent":["// react\nimport React, { useMemo } from 'react';\n// third-party\nimport { FormattedMessage } from 'react-intl';\n// application\nimport Dropdown, { IDropdownItem } from '~/components/header/Dropdown';\nimport { getAllLanguages } from '~/services/i18n/utils';\nimport { ILanguage } from '~/interfaces/language';\n// data\nimport { useLanguage, useSetLocale } from '~/services/i18n/hooks';\n\ninterface Item extends IDropdownItem {\n    language: ILanguage;\n}\n\nfunction DropdownLanguage() {\n    const language = useLanguage();\n    const setLocale = useSetLocale();\n\n    const handleItemClick = async (item: Item) => {\n        setLocale(item.language.locale);\n    };\n\n    const items: Item[] = useMemo(() => (\n        getAllLanguages().map(((eachLanguage) => ({\n            title: eachLanguage.name,\n            image: eachLanguage.icon,\n            language: eachLanguage,\n        })))\n    ), []);\n\n    const label = (\n        <React.Fragment>\n            <FormattedMessage id=\"TEXT_TOPBAR_LANGUAGE\" />\n            :\n        </React.Fragment>\n    );\n\n    return (\n        <Dropdown\n            label={label}\n            title={language.code.toUpperCase()}\n            items={items}\n            onItemClick={handleItemClick}\n        />\n    );\n}\n\nexport default DropdownLanguage;\n"]},"metadata":{},"sourceType":"module"}