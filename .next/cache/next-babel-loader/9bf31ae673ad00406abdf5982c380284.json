{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\shared\\\\VehiclePickerModal.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useEffect, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'reactstrap'; // application\n\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport RadioButton from '~/components/shared/RadioButton';\nimport VehicleForm from '~/components/shared/VehicleForm';\nimport { Cross12Svg, RecycleBin16Svg } from '~/svg';\nimport { useGarageAddItem, useGarageRemoveItem, useUserVehicles } from '~/store/garage/garageHooks';\n\nfunction VehiclePickerModal(props) {\n  const {\n    value = null,\n    isOpen = false,\n    onClose,\n    onSelect\n  } = props;\n  const vehicles = useUserVehicles();\n  const garageRemoveItem = useGarageRemoveItem();\n  const garageAddItem = useGarageAddItem();\n  const {\n    0: currentPanel,\n    1: setCurrentPanel\n  } = useState('list');\n  const {\n    0: innerValue,\n    1: setInnerValue\n  } = useState(null);\n  const {\n    0: controlValue,\n    1: setControlValue\n  } = useState(null);\n\n  const onSelectClick = () => {\n    if (onSelect) {\n      onSelect(innerValue);\n    }\n\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const toggle = useCallback(() => {\n    if (isOpen && onClose) {\n      onClose();\n    }\n  }, [isOpen, onClose]);\n\n  const onAddVehicleClick = async () => {\n    if (!controlValue) {\n      return;\n    }\n\n    await garageAddItem(controlValue.id);\n    setCurrentPanel('list');\n    setInnerValue(controlValue);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      setCurrentPanel('list');\n      setInnerValue(value);\n    }\n  }, [isOpen, value]);\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    centered: true,\n    className: \"vehicle-picker-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"vehicle-picker-modal__close\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Cross12Svg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: classNames('vehicle-picker-modal__panel', {\n      'vehicle-picker-modal__panel--active': currentPanel === 'list' && vehicles.length !== 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker-modal__title card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_SELECT_VEHICLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_SELECT_VEHICLE_TO_FIND_EXACT_FIT_PARTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"vehicles-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"vehicles-list__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    className: \"vehicles-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, __jsx(RadioButton, {\n    className: \"vehicles-list__item-radio\",\n    checked: innerValue === null,\n    onChange: () => setInnerValue(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    className: \"vehicles-list__item-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    className: \"vehicles-list__item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALL_VEHICLES\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  })))), vehicles.map((vehicle, vehicleIdx) => // eslint-disable-next-line jsx-a11y/label-has-associated-control\n  __jsx(\"label\", {\n    key: vehicleIdx,\n    className: \"vehicles-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, __jsx(RadioButton, {\n    className: \"vehicles-list__item-radio\",\n    checked: innerValue !== null && innerValue.id === vehicle.id,\n    onChange: () => setInnerValue(vehicle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    className: \"vehicles-list__item-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: \"vehicles-list__item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, `${vehicle.year} ${vehicle.make} ${vehicle.model}`), __jsx(\"span\", {\n    className: \"vehicles-list__item-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_VEHICLE_ENGINE\",\n    values: {\n      engine: vehicle.engine\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  }))), __jsx(AsyncAction, {\n    action: () => garageRemoveItem(vehicle.id),\n    render: ({\n      run,\n      loading\n    }) => __jsx(\"button\", {\n      type: \"button\",\n      className: classNames('vehicles-list__item-remove', {\n        'vehicles-list__item-remove--loading': loading\n      }),\n      onClick: run,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, __jsx(RecycleBin16Svg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 45\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }))))), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary btn-block mt-2 vehicle-picker-modal__add-button\",\n    onClick: () => setCurrentPanel('form'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_VEHICLE_LONG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_CANCEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  })), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-primary\",\n    onClick: onSelectClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SELECT_VEHICLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    className: classNames('vehicle-picker-modal__panel', {\n      'vehicle-picker-modal__panel--active': currentPanel === 'form' || vehicles.length === 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker-modal__title card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_ADD_VEHICLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  })), __jsx(VehicleForm, {\n    location: \"modal\",\n    onVehicleChange: setControlValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, vehicles.length !== 0 && __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary\",\n    onClick: () => setCurrentPanel('list'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_BACK_TO_LIST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  })), __jsx(AsyncAction, {\n    action: onAddVehicleClick,\n    render: ({\n      run,\n      loading\n    }) => __jsx(\"button\", {\n      type: \"button\",\n      className: classNames('btn', 'btn-sm', 'btn-primary', {\n        'btn-loading': loading\n      }),\n      disabled: controlValue === null,\n      onClick: run,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"BUTTON_ADD_VEHICLE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default VehiclePickerModal;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shared/VehiclePickerModal.tsx"],"names":["React","useCallback","useEffect","useState","classNames","FormattedMessage","Modal","AsyncAction","RadioButton","VehicleForm","Cross12Svg","RecycleBin16Svg","useGarageAddItem","useGarageRemoveItem","useUserVehicles","VehiclePickerModal","props","value","isOpen","onClose","onSelect","vehicles","garageRemoveItem","garageAddItem","currentPanel","setCurrentPanel","innerValue","setInnerValue","controlValue","setControlValue","onSelectClick","toggle","onAddVehicleClick","id","length","map","vehicle","vehicleIdx","year","make","model","engine","run","loading"],"mappings":"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","sourcesContent":["// react\nimport React, { useCallback, useEffect, useState } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'reactstrap';\n// application\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport RadioButton from '~/components/shared/RadioButton';\nimport VehicleForm from '~/components/shared/VehicleForm';\nimport { Cross12Svg, RecycleBin16Svg } from '~/svg';\nimport { IVehicle } from '~/interfaces/vehicle';\nimport { useGarageAddItem, useGarageRemoveItem, useUserVehicles } from '~/store/garage/garageHooks';\n\ninterface Props {\n    value?: IVehicle | null;\n    isOpen?: boolean;\n    onClose?: () => void;\n    onSelect?: (vehicle: IVehicle | null) => void;\n}\n\nfunction VehiclePickerModal(props: Props) {\n    const {\n        value = null,\n        isOpen = false,\n        onClose,\n        onSelect,\n    } = props;\n    const vehicles = useUserVehicles();\n    const garageRemoveItem = useGarageRemoveItem();\n    const garageAddItem = useGarageAddItem();\n    const [currentPanel, setCurrentPanel] = useState('list');\n    const [innerValue, setInnerValue] = useState<IVehicle | null>(null);\n    const [controlValue, setControlValue] = useState<IVehicle | null>(null);\n\n    const onSelectClick = () => {\n        if (onSelect) {\n            onSelect(innerValue);\n        }\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    const toggle = useCallback(() => {\n        if (isOpen && onClose) {\n            onClose();\n        }\n    }, [isOpen, onClose]);\n\n    const onAddVehicleClick = async () => {\n        if (!controlValue) {\n            return;\n        }\n\n        await garageAddItem(controlValue.id);\n\n        setCurrentPanel('list');\n        setInnerValue(controlValue);\n    };\n\n    useEffect(() => {\n        if (isOpen) {\n            setCurrentPanel('list');\n            setInnerValue(value);\n        }\n    }, [isOpen, value]);\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} centered className=\"vehicle-picker-modal\">\n            <button type=\"button\" className=\"vehicle-picker-modal__close\" onClick={onClose}>\n                <Cross12Svg />\n            </button>\n\n            <div\n                className={classNames('vehicle-picker-modal__panel', {\n                    'vehicle-picker-modal__panel--active': currentPanel === 'list' && vehicles.length !== 0,\n                })}\n            >\n                <div className=\"vehicle-picker-modal__title card-title\">\n                    <FormattedMessage id=\"HEADER_SELECT_VEHICLE\" />\n                </div>\n\n                <div className=\"vehicle-picker-modal__text\">\n                    <FormattedMessage id=\"TEXT_SELECT_VEHICLE_TO_FIND_EXACT_FIT_PARTS\" />\n                </div>\n\n                <div className=\"vehicles-list\">\n                    <div className=\"vehicles-list__body\">\n                        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                        <label className=\"vehicles-list__item\">\n                            <RadioButton\n                                className=\"vehicles-list__item-radio\"\n                                checked={innerValue === null}\n                                onChange={() => setInnerValue(null)}\n                            />\n                            <span className=\"vehicles-list__item-info\">\n                                <span className=\"vehicles-list__item-name\">\n                                    <FormattedMessage id=\"TEXT_ALL_VEHICLES\" />\n                                </span>\n                            </span>\n                        </label>\n                        {vehicles.map((vehicle, vehicleIdx) => (\n                            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n                            <label key={vehicleIdx} className=\"vehicles-list__item\">\n                                <RadioButton\n                                    className=\"vehicles-list__item-radio\"\n                                    checked={innerValue !== null && innerValue.id === vehicle.id}\n                                    onChange={() => setInnerValue(vehicle)}\n                                />\n                                <span className=\"vehicles-list__item-info\">\n                                    <span className=\"vehicles-list__item-name\">\n                                        {`${vehicle.year} ${vehicle.make} ${vehicle.model}`}\n                                    </span>\n                                    <span className=\"vehicles-list__item-details\">\n                                        <FormattedMessage\n                                            id=\"TEXT_VEHICLE_ENGINE\"\n                                            values={{ engine: vehicle.engine }}\n                                        />\n                                    </span>\n                                </span>\n\n                                <AsyncAction\n                                    action={() => garageRemoveItem(vehicle.id)}\n                                    render={({ run, loading }) => (\n                                        <button\n                                            type=\"button\"\n                                            className={classNames('vehicles-list__item-remove', {\n                                                'vehicles-list__item-remove--loading': loading,\n                                            })}\n                                            onClick={run}\n                                        >\n                                            <RecycleBin16Svg />\n                                        </button>\n                                    )}\n                                />\n                            </label>\n                        ))}\n                    </div>\n                </div>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-secondary btn-block mt-2 vehicle-picker-modal__add-button\"\n                    onClick={() => setCurrentPanel('form')}\n                >\n                    <FormattedMessage id=\"BUTTON_ADD_VEHICLE_LONG\" />\n                </button>\n\n                <div className=\"vehicle-picker-modal__actions\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-secondary\"\n                        onClick={onClose}\n                    >\n                        <FormattedMessage id=\"BUTTON_CANCEL\" />\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-primary\"\n                        onClick={onSelectClick}\n                    >\n                        <FormattedMessage id=\"BUTTON_SELECT_VEHICLE\" />\n                    </button>\n                </div>\n            </div>\n\n            <div\n                className={classNames('vehicle-picker-modal__panel', {\n                    'vehicle-picker-modal__panel--active': currentPanel === 'form' || vehicles.length === 0,\n                })}\n            >\n                <div className=\"vehicle-picker-modal__title card-title\">\n                    <FormattedMessage id=\"HEADER_ADD_VEHICLE\" />\n                </div>\n                <VehicleForm location=\"modal\" onVehicleChange={setControlValue} />\n                <div className=\"vehicle-picker-modal__actions\">\n                    {vehicles.length !== 0 && (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-sm btn-secondary\"\n                            onClick={() => setCurrentPanel('list')}\n                        >\n                            <FormattedMessage id=\"BUTTON_BACK_TO_LIST\" />\n                        </button>\n                    )}\n\n                    <AsyncAction\n                        action={onAddVehicleClick}\n                        render={({ run, loading }) => (\n                            <button\n                                type=\"button\"\n                                className={classNames('btn', 'btn-sm', 'btn-primary', {\n                                    'btn-loading': loading,\n                                })}\n                                disabled={controlValue === null}\n                                onClick={run}\n                            >\n                                <FormattedMessage id=\"BUTTON_ADD_VEHICLE\" />\n                            </button>\n                        )}\n                    />\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default VehiclePickerModal;\n"]},"metadata":{},"sourceType":"module"}