{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\blocks\\\\BlockHeader.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect, useRef } from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport Breadcrumb from '~/components/shared/Breadcrumb';\nimport { useMedia } from '~/store/hooks';\n\nfunction BlockHeader(props) {\n  const {\n    pageTitle,\n    breadcrumb = [],\n    afterHeader = true\n  } = props;\n  const hasPageTitle = !!pageTitle;\n  const hasBreadcrumb = breadcrumb.length > 0;\n  const elementRef = useRef(null);\n  const titleElementRef = useRef(null);\n  const titleVisible = useMedia('(min-width: 1200px)');\n\n  const calcTitleWidth = () => {\n    // So that breadcrumbs correctly flow around the page title, we need to know its width.\n    // This code simply conveys the width of the page title in CSS.\n    if (!elementRef.current || !titleElementRef.current) {\n      return;\n    }\n\n    const {\n      width\n    } = titleElementRef.current.getBoundingClientRect();\n    elementRef.current.style.setProperty('--block-header-title-width', `${width}px`);\n  };\n\n  useEffect(() => {\n    if (titleVisible) {\n      calcTitleWidth();\n    }\n  }, [pageTitle, titleVisible]);\n  const rootClasses = classNames('block-header', {\n    'block-header--has-title': hasPageTitle,\n    'block-header--has-breadcrumb': hasBreadcrumb\n  });\n  return __jsx(\"div\", {\n    className: rootClasses,\n    ref: elementRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"block-header__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, hasBreadcrumb && __jsx(Breadcrumb, {\n    className: \"block-header__breadcrumb\",\n    items: breadcrumb,\n    withPageTitle: hasPageTitle,\n    afterHeader: afterHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), hasPageTitle && __jsx(\"h1\", {\n    className: \"block-header__title\",\n    ref: titleElementRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 38\n    }\n  }, pageTitle))));\n}\n\nexport default BlockHeader;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/blocks/BlockHeader.tsx"],"names":["React","useEffect","useRef","classNames","Breadcrumb","useMedia","BlockHeader","props","pageTitle","breadcrumb","afterHeader","hasPageTitle","hasBreadcrumb","length","elementRef","titleElementRef","titleVisible","calcTitleWidth","current","width","getBoundingClientRect","style","setProperty","rootClasses"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,SAASC,QAAT,QAAyB,eAAzB;;AAQA,SAASC,WAAT,CAAqBC,KAArB,EAAmC;AAC/B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAU,GAAG,EAA1B;AAA8BC,IAAAA,WAAW,GAAG;AAA5C,MAAqDH,KAA3D;AACA,QAAMI,YAAY,GAAG,CAAC,CAACH,SAAvB;AACA,QAAMI,aAAa,GAAGH,UAAU,CAACI,MAAX,GAAoB,CAA1C;AACA,QAAMC,UAAU,GAAGZ,MAAM,CAAwB,IAAxB,CAAzB;AACA,QAAMa,eAAe,GAAGb,MAAM,CAA4B,IAA5B,CAA9B;AACA,QAAMc,YAAY,GAAGX,QAAQ,CAAC,qBAAD,CAA7B;;AAEA,QAAMY,cAAc,GAAG,MAAM;AACzB;AACA;AAEA,QAAI,CAACH,UAAU,CAACI,OAAZ,IAAuB,CAACH,eAAe,CAACG,OAA5C,EAAqD;AACjD;AACH;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAYJ,eAAe,CAACG,OAAhB,CAAwBE,qBAAxB,EAAlB;AAEAN,IAAAA,UAAU,CAACI,OAAX,CAAmBG,KAAnB,CAAyBC,WAAzB,CAAqC,4BAArC,EAAoE,GAAEH,KAAM,IAA5E;AACH,GAXD;;AAaAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,YAAJ,EAAkB;AACdC,MAAAA,cAAc;AACjB;AACJ,GAJQ,EAIN,CAACT,SAAD,EAAYQ,YAAZ,CAJM,CAAT;AAMA,QAAMO,WAAW,GAAGpB,UAAU,CAAC,cAAD,EAAiB;AAC3C,+BAA2BQ,YADgB;AAE3C,oCAAgCC;AAFW,GAAjB,CAA9B;AAKA,SACI;AAAK,IAAA,SAAS,EAAEW,WAAhB;AAA6B,IAAA,GAAG,EAAET,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,aAAa,IACV,MAAC,UAAD;AACI,IAAA,SAAS,EAAC,0BADd;AAEI,IAAA,KAAK,EAAEH,UAFX;AAGI,IAAA,aAAa,EAAEE,YAHnB;AAII,IAAA,WAAW,EAAED,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EASKC,YAAY,IAAI;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAoC,IAAA,GAAG,EAAEI,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DP,SAA3D,CATrB,CADJ,CADJ,CADJ;AAiBH;;AAED,eAAeF,WAAf","sourcesContent":["// react\nimport React, { useEffect, useRef } from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport Breadcrumb from '~/components/shared/Breadcrumb';\nimport { ILink } from '~/interfaces/link';\nimport { useMedia } from '~/store/hooks';\n\ninterface Props {\n    pageTitle?: React.ReactNode;\n    breadcrumb?: ILink[];\n    afterHeader?: boolean;\n}\n\nfunction BlockHeader(props: Props) {\n    const { pageTitle, breadcrumb = [], afterHeader = true } = props;\n    const hasPageTitle = !!pageTitle;\n    const hasBreadcrumb = breadcrumb.length > 0;\n    const elementRef = useRef<HTMLDivElement | null>(null);\n    const titleElementRef = useRef<HTMLHeadingElement | null>(null);\n    const titleVisible = useMedia('(min-width: 1200px)');\n\n    const calcTitleWidth = () => {\n        // So that breadcrumbs correctly flow around the page title, we need to know its width.\n        // This code simply conveys the width of the page title in CSS.\n\n        if (!elementRef.current || !titleElementRef.current) {\n            return;\n        }\n\n        const { width } = titleElementRef.current.getBoundingClientRect();\n\n        elementRef.current.style.setProperty('--block-header-title-width', `${width}px`);\n    };\n\n    useEffect(() => {\n        if (titleVisible) {\n            calcTitleWidth();\n        }\n    }, [pageTitle, titleVisible]);\n\n    const rootClasses = classNames('block-header', {\n        'block-header--has-title': hasPageTitle,\n        'block-header--has-breadcrumb': hasBreadcrumb,\n    });\n\n    return (\n        <div className={rootClasses} ref={elementRef}>\n            <div className=\"container\">\n                <div className=\"block-header__body\">\n                    {hasBreadcrumb && (\n                        <Breadcrumb\n                            className=\"block-header__breadcrumb\"\n                            items={breadcrumb}\n                            withPageTitle={hasPageTitle}\n                            afterHeader={afterHeader}\n                        />\n                    )}\n                    {hasPageTitle && <h1 className=\"block-header__title\" ref={titleElementRef}>{pageTitle}</h1>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BlockHeader;\n"]},"metadata":{},"sourceType":"module"}