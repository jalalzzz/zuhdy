{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\header\\\\DropdownCurrency.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport Dropdown from '~/components/header/Dropdown';\nimport { useCurrency, useCurrencyChange } from '~/store/currency/currencyHooks'; // data\n\nimport dataShopCurrencies from '~/data/shopCurrencies';\n\nfunction DropdownCurrency() {\n  _s();\n\n  var currency = useCurrency();\n  var currencyChange = useCurrencyChange();\n\n  var handleItemClick = function handleItemClick(item) {\n    currencyChange(item.currency);\n  };\n\n  var items = useMemo(function () {\n    return dataShopCurrencies.map(function (eachCurrency) {\n      return {\n        title: \"\".concat(eachCurrency.symbol, \" \").concat(eachCurrency.name),\n        currency: eachCurrency\n      };\n    });\n  }, []);\n\n  var label = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_TOPBAR_CURRENCY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), \":\");\n\n  return __jsx(Dropdown, {\n    label: label,\n    title: currency.code,\n    items: items,\n    onItemClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  });\n}\n\n_s(DropdownCurrency, \"q1yzKOCd3+BZAZH9By6hGYiyqaY=\", false, function () {\n  return [useCurrency, useCurrencyChange];\n});\n\n_c = DropdownCurrency;\nexport default DropdownCurrency;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownCurrency\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/header/DropdownCurrency.tsx"],"names":["React","useMemo","FormattedMessage","Dropdown","useCurrency","useCurrencyChange","dataShopCurrencies","DropdownCurrency","currency","currencyChange","handleItemClick","item","items","map","eachCurrency","title","symbol","name","label","code"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAwC,8BAAxC;AAEA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,gCAA/C,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAMA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,cAAc,GAAGJ,iBAAiB,EAAxC;;AAEA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAgB;AACpCF,IAAAA,cAAc,CAACE,IAAI,CAACH,QAAN,CAAd;AACH,GAFD;;AAIA,MAAMI,KAAa,GAAGX,OAAO,CAAC;AAAA,WAC1BK,kBAAkB,CAACO,GAAnB,CAAwB,UAACC,YAAD;AAAA,aAAmB;AACvCC,QAAAA,KAAK,YAAKD,YAAY,CAACE,MAAlB,cAA4BF,YAAY,CAACG,IAAzC,CADkC;AAEvCT,QAAAA,QAAQ,EAAEM;AAF6B,OAAnB;AAAA,KAAxB,CAD0B;AAAA,GAAD,EAK1B,EAL0B,CAA7B;;AAOA,MAAMI,KAAK,GACP,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,MADJ;;AAOA,SACI,MAAC,QAAD;AACI,IAAA,KAAK,EAAEA,KADX;AAEI,IAAA,KAAK,EAAEV,QAAQ,CAACW,IAFpB;AAGI,IAAA,KAAK,EAAEP,KAHX;AAII,IAAA,WAAW,EAAEF,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;GA9BQH,gB;UACYH,W,EACMC,iB;;;KAFlBE,gB;AAgCT,eAAeA,gBAAf","sourcesContent":["// react\nimport React, { useMemo } from 'react';\n// third-party\nimport { FormattedMessage } from 'react-intl';\n// application\nimport Dropdown, { IDropdownItem } from '~/components/header/Dropdown';\nimport { ICurrency } from '~/interfaces/currency';\nimport { useCurrency, useCurrencyChange } from '~/store/currency/currencyHooks';\n// data\nimport dataShopCurrencies from '~/data/shopCurrencies';\n\ninterface Item extends IDropdownItem {\n    currency: ICurrency;\n}\n\nfunction DropdownCurrency() {\n    const currency = useCurrency();\n    const currencyChange = useCurrencyChange();\n\n    const handleItemClick = (item: Item) => {\n        currencyChange(item.currency);\n    };\n\n    const items: Item[] = useMemo(() => (\n        dataShopCurrencies.map(((eachCurrency) => ({\n            title: `${eachCurrency.symbol} ${eachCurrency.name}`,\n            currency: eachCurrency,\n        })))\n    ), []);\n\n    const label = (\n        <React.Fragment>\n            <FormattedMessage id=\"TEXT_TOPBAR_CURRENCY\" />\n            :\n        </React.Fragment>\n    );\n\n    return (\n        <Dropdown\n            label={label}\n            title={currency.code}\n            items={items}\n            onItemClick={handleItemClick}\n        />\n    );\n}\n\nexport default DropdownCurrency;\n"]},"metadata":{},"sourceType":"module"}