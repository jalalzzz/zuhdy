{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\account\\\\profile.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form'; // application\n\nimport AccountLayout from '~/components/account/AccountLayout';\nimport PageTitle from '~/components/shared/PageTitle';\nimport { useAsyncAction } from '~/store/hooks';\nimport { useUser, useUserEditProfile } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\nfunction Page() {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$email2, _errors$phone;\n\n  var intl = useIntl();\n  var user = useUser();\n  var userEditProfile = useUserEditProfile();\n\n  var _useForm = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    }\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var _useAsyncAction = useAsyncAction( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return userEditProfile(data);\n\n            case 2:\n              toast.success(intl.formatMessage({\n                id: 'TEXT_TOAST_PROFILE_SAVED'\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [userEditProfile, intl]),\n      _useAsyncAction2 = _slicedToArray(_useAsyncAction, 2),\n      submit = _useAsyncAction2[0],\n      submitInProgress = _useAsyncAction2[1];\n\n  useEffect(function () {\n    reset({\n      firstName: (user === null || user === void 0 ? void 0 : user.firstName) || '',\n      lastName: (user === null || user === void 0 ? void 0 : user.lastName) || '',\n      email: (user === null || user === void 0 ? void 0 : user.email) || '',\n      phone: (user === null || user === void 0 ? void 0 : user.phone) || ''\n    });\n  }, [user, reset]);\n  return __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'HEADER_EDIT_PROFILE'\n  })), __jsx(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_EDIT_PROFILE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"card-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12 col-lg-7 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"profile-first-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_FIRST_NAME_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  })), __jsx(\"input\", {\n    type: \"text\",\n    id: \"profile-first-name\",\n    name: \"firstName\",\n    className: classNames('form-control', {\n      'is-invalid': errors.firstName\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_FIRST_NAME_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"profile-last-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_LAST_NAME_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  })), __jsx(\"input\", {\n    type: \"text\",\n    id: \"profile-last-name\",\n    name: \"lastName\",\n    className: classNames('form-control', {\n      'is-invalid': errors.lastName\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_LAST_NAME_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"profile-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  })), __jsx(\"input\", {\n    type: \"email\",\n    id: \"profile-email\",\n    name: \"email\",\n    className: classNames('form-control', {\n      'is-invalid': errors.email\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_EMAIL_ADDRESS_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 41\n    }\n  }), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"profile-phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PHONE_NUMBER_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  })), __jsx(\"input\", {\n    type: \"text\",\n    id: \"profile-phone\",\n    name: \"phone\",\n    className: classNames('form-control', {\n      'is-invalid': errors.phone\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PHONE_NUMBER_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, ((_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'mt-3', {\n      'btn-loading': submitInProgress\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SAVE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\n_s(Page, \"/V19KFsEbnkaGHNvryzeEgwUKi8=\", false, function () {\n  return [useIntl, useUser, useUserEditProfile, useForm, useAsyncAction];\n});\n\n_c = Page;\nPage.Layout = AccountLayout;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/account/profile.tsx"],"names":["React","useEffect","classNames","FormattedMessage","useIntl","toast","useForm","AccountLayout","PageTitle","useAsyncAction","useUser","useUserEditProfile","validateEmail","Page","intl","user","userEditProfile","defaultValues","firstName","lastName","email","phone","register","handleSubmit","reset","errors","data","success","formatMessage","id","submit","submitInProgress","required","type","validate","Layout"],"mappings":"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","sourcesContent":["// react\nimport React, { useEffect } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form';\n// application\nimport AccountLayout from '~/components/account/AccountLayout';\nimport PageTitle from '~/components/shared/PageTitle';\nimport { useAsyncAction } from '~/store/hooks';\nimport { useUser, useUserEditProfile } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\ninterface IForm {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n}\n\nfunction Page() {\n    const intl = useIntl();\n    const user = useUser();\n    const userEditProfile = useUserEditProfile();\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        errors,\n    } = useForm<IForm>({\n        defaultValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n        },\n    });\n\n    const [submit, submitInProgress] = useAsyncAction(async (data: IForm) => {\n        await userEditProfile(data);\n\n        toast.success(intl.formatMessage({ id: 'TEXT_TOAST_PROFILE_SAVED' }));\n    }, [userEditProfile, intl]);\n\n    useEffect(() => {\n        reset({\n            firstName: user?.firstName || '',\n            lastName: user?.lastName || '',\n            email: user?.email || '',\n            phone: user?.phone || '',\n        });\n    }, [user, reset]);\n\n    return (\n        <div className=\"card\">\n            <PageTitle>{intl.formatMessage({ id: 'HEADER_EDIT_PROFILE' })}</PageTitle>\n\n            <div className=\"card-header\">\n                <h5><FormattedMessage id=\"HEADER_EDIT_PROFILE\" /></h5>\n            </div>\n            <div className=\"card-divider\" />\n\n            <div className=\"card-body card-body--padding--2\">\n                <div className=\"row no-gutters\">\n                    <div className=\"col-12 col-lg-7 col-xl-6\">\n                        <form onSubmit={handleSubmit(submit)}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"profile-first-name\">\n                                    <FormattedMessage id=\"INPUT_FIRST_NAME_LABEL\" />\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"profile-first-name\"\n                                    name=\"firstName\"\n                                    className={classNames('form-control', {\n                                        'is-invalid': errors.firstName,\n                                    })}\n                                    placeholder={intl.formatMessage({ id: 'INPUT_FIRST_NAME_PLACEHOLDER' })}\n                                    ref={register({ required: true })}\n                                />\n                                <div className=\"invalid-feedback\">\n                                    {errors.firstName?.type === 'required' && (\n                                        <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"profile-last-name\">\n                                    <FormattedMessage id=\"INPUT_LAST_NAME_LABEL\" />\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"profile-last-name\"\n                                    name=\"lastName\"\n                                    className={classNames('form-control', {\n                                        'is-invalid': errors.lastName,\n                                    })}\n                                    placeholder={intl.formatMessage({ id: 'INPUT_LAST_NAME_PLACEHOLDER' })}\n                                    ref={register({ required: true })}\n                                />\n                                <div className=\"invalid-feedback\">\n                                    {errors.lastName?.type === 'required' && (\n                                        <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"profile-email\">\n                                    <FormattedMessage id=\"INPUT_EMAIL_ADDRESS_LABEL\" />\n                                </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"profile-email\"\n                                    name=\"email\"\n                                    className={classNames('form-control', {\n                                        'is-invalid': errors.email,\n                                    })}\n                                    placeholder={intl.formatMessage({ id: 'INPUT_EMAIL_ADDRESS_PLACEHOLDER' })}\n                                    ref={register({\n                                        required: true,\n                                        validate: { email: validateEmail },\n                                    })}\n                                />\n                                <div className=\"invalid-feedback\">\n                                    {errors.email?.type === 'required' && (\n                                        <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                    )}\n                                    {errors.email?.type === 'email' && (\n                                        <FormattedMessage id=\"ERROR_FORM_INCORRECT_EMAIL\" />\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"profile-phone\">\n                                    <FormattedMessage id=\"INPUT_PHONE_NUMBER_LABEL\" />\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"profile-phone\"\n                                    name=\"phone\"\n                                    className={classNames('form-control', {\n                                        'is-invalid': errors.phone,\n                                    })}\n                                    placeholder={intl.formatMessage({ id: 'INPUT_PHONE_NUMBER_PLACEHOLDER' })}\n                                    ref={register({ required: true })}\n                                />\n                                <div className=\"invalid-feedback\">\n                                    {errors.phone?.type === 'required' && (\n                                        <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"form-group mb-0\">\n                                <button\n                                    type=\"submit\"\n                                    className={classNames('btn', 'btn-primary', 'mt-3', {\n                                        'btn-loading': submitInProgress,\n                                    })}\n                                >\n                                    <FormattedMessage id=\"BUTTON_SAVE\" />\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nPage.Layout = AccountLayout;\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}