{"ast":null,"code":"// application\nexport class AccountApi {}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/api/base/account.api.ts"],"names":["AccountApi"],"mappings":"AAAA;AAuBA,OAAO,MAAeA,UAAf,CAA0B","sourcesContent":["// application\nimport { IAddress, IAddressData } from '~/interfaces/address';\nimport { IOrder } from '~/interfaces/order';\nimport { IOrdersList } from '~/interfaces/list';\nimport { IUser } from '~/interfaces/user';\n\nexport interface IEditProfileData {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n}\n\nexport interface IGetOrdersListOptions {\n    page?: number;\n    limit?: number;\n    sort?: string;\n}\n\nexport interface IEditAddressData extends IAddressData {\n    default: boolean;\n}\n\nexport abstract class AccountApi {\n    abstract signIn(email: string, password: string): Promise<IUser>;\n\n    abstract signUp(email: string, password: string): Promise<IUser>;\n\n    abstract signOut(): Promise<void>;\n\n    abstract editProfile(data: IEditProfileData): Promise<IUser>;\n\n    abstract changePassword(oldPassword: string, newPassword: string): Promise<void>;\n\n    abstract addAddress(data: IEditAddressData): Promise<IAddress>;\n\n    abstract editAddress(addressId: number, data: IEditAddressData): Promise<IAddress>;\n\n    abstract delAddress(addressId: number): Promise<void>;\n\n    abstract getDefaultAddress(): Promise<IAddress | null>;\n\n    abstract getAddress(addressId: number): Promise<IAddress>;\n\n    abstract getAddresses(): Promise<IAddress[]>;\n\n    abstract getOrdersList(options?: IGetOrdersListOptions): Promise<IOrdersList>;\n\n    abstract getOrderById(id: number): Promise<IOrder>;\n\n    abstract getOrderByToken(token: string): Promise<IOrder>;\n}\n"]},"metadata":{},"sourceType":"module"}