{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\filters\\\\FilterCheck.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport Checkbox from '~/components/shared/Checkbox';\n\nfunction FilterCheck(props) {\n  var _this = this;\n\n  var options = props.options,\n      value = props.value,\n      onChangeValue = props.onChangeValue;\n\n  var updateValue = function updateValue(newValue) {\n    if (onChangeValue) {\n      onChangeValue({\n        filter: options,\n        value: newValue\n      });\n    }\n  }; // noinspection DuplicatedCode\n\n\n  var handleChange = function handleChange(event) {\n    if (event.target.checked && !value.includes(event.target.value)) {\n      updateValue([].concat(_toConsumableArray(value), [event.target.value]));\n    }\n\n    if (!event.target.checked && value.includes(event.target.value)) {\n      updateValue(value.filter(function (x) {\n        return x !== event.target.value;\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"filter-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, options.items.map(function (item) {\n    return __jsx(\"label\", {\n      key: item.slug,\n      className: classNames('filter-list__item', {\n        'filter-list__item--disabled': item.count === 0\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, __jsx(Checkbox, {\n      className: \"filter-list__input\",\n      value: item.slug,\n      checked: value.includes(item.slug),\n      disabled: item.count === 0,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), __jsx(\"span\", {\n      className: \"filter-list__title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, item.name), item.count !== 0 && __jsx(\"span\", {\n      className: \"filter-list__counter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, item.count));\n  })));\n}\n\n_c = FilterCheck;\nexport default FilterCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterCheck\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/filters/FilterCheck.tsx"],"names":["React","classNames","Checkbox","FilterCheck","props","options","value","onChangeValue","updateValue","newValue","filter","handleChange","event","target","checked","includes","x","items","map","item","slug","count","name"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;;AASA,SAASC,WAAT,CAAqBC,KAArB,EAAmC;AAAA;;AAAA,MACvBC,OADuB,GACWD,KADX,CACvBC,OADuB;AAAA,MACdC,KADc,GACWF,KADX,CACdE,KADc;AAAA,MACPC,aADO,GACWH,KADX,CACPG,aADO;;AAG/B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAiC;AACjD,QAAIF,aAAJ,EAAmB;AACfA,MAAAA,aAAa,CAAC;AAAEG,QAAAA,MAAM,EAAEL,OAAV;AAAmBC,QAAAA,KAAK,EAAEG;AAA1B,OAAD,CAAb;AACH;AACJ,GAJD,CAH+B,CAS/B;;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAgD;AACjE,QAAIA,KAAK,CAACC,MAAN,CAAaC,OAAb,IAAwB,CAACR,KAAK,CAACS,QAAN,CAAeH,KAAK,CAACC,MAAN,CAAaP,KAA5B,CAA7B,EAAiE;AAC7DE,MAAAA,WAAW,8BAAKF,KAAL,IAAYM,KAAK,CAACC,MAAN,CAAaP,KAAzB,GAAX;AACH;;AACD,QAAI,CAACM,KAAK,CAACC,MAAN,CAAaC,OAAd,IAAyBR,KAAK,CAACS,QAAN,CAAeH,KAAK,CAACC,MAAN,CAAaP,KAA5B,CAA7B,EAAiE;AAC7DE,MAAAA,WAAW,CAACF,KAAK,CAACI,MAAN,CAAa,UAACM,CAAD;AAAA,eAAOA,CAAC,KAAKJ,KAAK,CAACC,MAAN,CAAaP,KAA1B;AAAA,OAAb,CAAD,CAAX;AACH;AACJ,GAPD;;AASA,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,CAACY,KAAR,CAAcC,GAAd,CAAkB,UAACC,IAAD;AAAA,WACf;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,IADd;AAEI,MAAA,SAAS,EAAEnB,UAAU,CAAC,mBAAD,EAAsB;AACvC,uCAA+BkB,IAAI,CAACE,KAAL,KAAe;AADP,OAAtB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,MAAC,QAAD;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,KAAK,EAAEF,IAAI,CAACC,IAFhB;AAGI,MAAA,OAAO,EAAEd,KAAK,CAACS,QAAN,CAAeI,IAAI,CAACC,IAApB,CAHb;AAII,MAAA,QAAQ,EAAED,IAAI,CAACE,KAAL,KAAe,CAJ7B;AAKI,MAAA,QAAQ,EAAEV,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAcI;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCQ,IAAI,CAACG,IAA3C,CAdJ,EAeKH,IAAI,CAACE,KAAL,KAAe,CAAf,IACG;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCF,IAAI,CAACE,KAA7C,CAhBR,CADe;AAAA,GAAlB,CADL,CADJ,CADJ;AA2BH;;KA9CQlB,W;AAgDT,eAAeA,WAAf","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport Checkbox from '~/components/shared/Checkbox';\nimport { ICheckFilter, ICheckFilterValue } from '~/interfaces/filter';\n\ninterface Props {\n    options: ICheckFilter;\n    value: ICheckFilterValue;\n    onChangeValue?: (event: { filter: ICheckFilter, value: ICheckFilterValue }) => void;\n}\n\nfunction FilterCheck(props: Props) {\n    const { options, value, onChangeValue } = props;\n\n    const updateValue = (newValue: ICheckFilterValue) => {\n        if (onChangeValue) {\n            onChangeValue({ filter: options, value: newValue });\n        }\n    };\n\n    // noinspection DuplicatedCode\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked && !value.includes(event.target.value)) {\n            updateValue([...value, event.target.value]);\n        }\n        if (!event.target.checked && value.includes(event.target.value)) {\n            updateValue(value.filter((x) => x !== event.target.value));\n        }\n    };\n\n    return (\n        <div className=\"filter-list\">\n            <div className=\"filter-list__list\">\n                {options.items.map((item) => (\n                    <label\n                        key={item.slug}\n                        className={classNames('filter-list__item', {\n                            'filter-list__item--disabled': item.count === 0,\n                        })}\n                    >\n                        <Checkbox\n                            className=\"filter-list__input\"\n                            value={item.slug}\n                            checked={value.includes(item.slug)}\n                            disabled={item.count === 0}\n                            onChange={handleChange}\n                        />\n\n                        <span className=\"filter-list__title\">{item.name}</span>\n                        {item.count !== 0 && (\n                            <span className=\"filter-list__counter\">{item.count}</span>\n                        )}\n                    </label>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default FilterCheck;\n"]},"metadata":{},"sourceType":"module"}