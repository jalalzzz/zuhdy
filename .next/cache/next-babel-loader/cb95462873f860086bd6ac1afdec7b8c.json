{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\account\\\\login.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport Checkbox from '~/components/shared/Checkbox';\nimport PageTitle from '~/components/shared/PageTitle';\nimport Redirect from '~/components/shared/Redirect';\nimport url from '~/services/url';\nimport { useSignInForm } from '~/services/forms/sign-in';\nimport { useSignUpForm } from '~/services/forms/sign-up';\nimport { useUser } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\nfunction Page() {\n  var _signInForm$errors$em, _signInForm$errors$em2, _signInForm$errors$pa, _signUpForm$errors$em, _signUpForm$errors$em2, _signUpForm$errors$pa, _signUpForm$errors$co, _signUpForm$errors$co2;\n\n  const intl = useIntl();\n  const user = useUser();\n  const signInForm = useSignInForm();\n  const signUpForm = useSignUpForm();\n\n  if (user) {\n    return __jsx(Redirect, {\n      href: url.accountDashboard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'HEADER_LOGIN'\n  })), __jsx(BlockSpace, {\n    layout: \"after-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"container container--max--lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"card flex-grow-1 mb-md-0 mr-0 mr-lg-3 ml-0 ml-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, __jsx(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_LOGIN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  })), __jsx(\"form\", {\n    onSubmit: signInForm.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, signInForm.serverError && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: signInForm.serverError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 49\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"signin-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 49\n    }\n  })), __jsx(\"input\", {\n    id: \"signin-email\",\n    type: \"email\",\n    className: classNames('form-control', {\n      'is-invalid': signInForm.errors.email\n    }),\n    placeholder: \"customer@example.com\",\n    name: \"email\",\n    ref: signInForm.register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 45\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }\n  }, ((_signInForm$errors$em = signInForm.errors.email) === null || _signInForm$errors$em === void 0 ? void 0 : _signInForm$errors$em.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 53\n    }\n  }), ((_signInForm$errors$em2 = signInForm.errors.email) === null || _signInForm$errors$em2 === void 0 ? void 0 : _signInForm$errors$em2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 53\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"signin-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 49\n    }\n  })), __jsx(\"input\", {\n    id: \"signin-password\",\n    type: \"password\",\n    className: classNames('form-control', {\n      'is-invalid': signInForm.errors.password\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_PLACEHOLDER'\n    }),\n    name: \"password\",\n    ref: signInForm.register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, ((_signInForm$errors$pa = signInForm.errors.password) === null || _signInForm$errors$pa === void 0 ? void 0 : _signInForm$errors$pa.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 53\n    }\n  })), __jsx(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }\n  }, __jsx(AppLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 49\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_FORGOT_PASSWORD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 53\n    }\n  })))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 45\n    }\n  }, __jsx(Checkbox, {\n    className: \"form-check-input\",\n    id: \"sign-in-remember\",\n    name: \"remember\",\n    inputRef: signInForm.register(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 49\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"sign-in-remember\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 49\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_REMEMBER_ME_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 53\n    }\n  })))), __jsx(\"div\", {\n    className: \"form-group mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 41\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'mt-3', {\n      'btn-loading': signInForm.submitInProgress\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_LOGIN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 49\n    }\n  }))))))), __jsx(\"div\", {\n    className: \"col-md-6 d-flex mt-4 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"card flex-grow-1 mb-0 ml-0 ml-lg-3 mr-0 mr-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, __jsx(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_REGISTER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  })), __jsx(\"form\", {\n    onSubmit: signUpForm.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, signUpForm.serverError && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: signUpForm.serverError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"signup-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  })), __jsx(\"input\", {\n    id: \"signup-email\",\n    type: \"email\",\n    className: classNames('form-control', {\n      'is-invalid': signUpForm.errors.email\n    }),\n    placeholder: \"customer@example.com\",\n    name: \"email\",\n    ref: signUpForm.register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, ((_signUpForm$errors$em = signUpForm.errors.email) === null || _signUpForm$errors$em === void 0 ? void 0 : _signUpForm$errors$em.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 53\n    }\n  }), ((_signUpForm$errors$em2 = signUpForm.errors.email) === null || _signUpForm$errors$em2 === void 0 ? void 0 : _signUpForm$errors$em2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 53\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"signup-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 49\n    }\n  })), __jsx(\"input\", {\n    id: \"signup-password\",\n    type: \"password\",\n    className: classNames('form-control', {\n      'is-invalid': signUpForm.errors.password\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_PLACEHOLDER'\n    }),\n    name: \"password\",\n    ref: signUpForm.register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 45\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 45\n    }\n  }, ((_signUpForm$errors$pa = signUpForm.errors.password) === null || _signUpForm$errors$pa === void 0 ? void 0 : _signUpForm$errors$pa.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 53\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"signup-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_REPEAT_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 49\n    }\n  })), __jsx(\"input\", {\n    id: \"signup-confirm\",\n    type: \"password\",\n    className: classNames('form-control', {\n      'is-invalid': signUpForm.errors.confirmPassword\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_REPEAT_PLACEHOLDER'\n    }),\n    name: \"confirmPassword\",\n    ref: signUpForm.register({\n      required: true,\n      validate: {\n        match: value => value === signUpForm.watch('password')\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 45\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 45\n    }\n  }, ((_signUpForm$errors$co = signUpForm.errors.confirmPassword) === null || _signUpForm$errors$co === void 0 ? void 0 : _signUpForm$errors$co.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 53\n    }\n  }), ((_signUpForm$errors$co2 = signUpForm.errors.confirmPassword) === null || _signUpForm$errors$co2 === void 0 ? void 0 : _signUpForm$errors$co2.type) === 'match' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_PASSWORD_DOES_NOT_MATCH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 53\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'mt-3', {\n      'btn-loading': signUpForm.submitInProgress\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 45\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_REGISTER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 49\n    }\n  })))))))))), __jsx(BlockSpace, {\n    layout: \"before-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/account/login.tsx"],"names":["React","classNames","FormattedMessage","useIntl","AppLink","BlockSpace","Checkbox","PageTitle","Redirect","url","useSignInForm","useSignUpForm","useUser","validateEmail","Page","intl","user","signInForm","signUpForm","accountDashboard","formatMessage","id","submit","serverError","errors","email","register","required","validate","type","password","submitInProgress","confirmPassword","match","value","watch"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport Checkbox from '~/components/shared/Checkbox';\nimport PageTitle from '~/components/shared/PageTitle';\nimport Redirect from '~/components/shared/Redirect';\nimport url from '~/services/url';\nimport { useSignInForm } from '~/services/forms/sign-in';\nimport { useSignUpForm } from '~/services/forms/sign-up';\nimport { useUser } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\nfunction Page() {\n    const intl = useIntl();\n    const user = useUser();\n    const signInForm = useSignInForm();\n    const signUpForm = useSignUpForm();\n\n    if (user) {\n        return <Redirect href={url.accountDashboard()} />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageTitle>{intl.formatMessage({ id: 'HEADER_LOGIN' })}</PageTitle>\n\n            <BlockSpace layout=\"after-header\" />\n\n            <div className=\"block\">\n                <div className=\"container container--max--lg\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 d-flex\">\n                            <div className=\"card flex-grow-1 mb-md-0 mr-0 mr-lg-3 ml-0 ml-lg-4\">\n                                <div className=\"card-body card-body--padding--2\">\n                                    <h3 className=\"card-title\">\n                                        <FormattedMessage id=\"HEADER_LOGIN\" />\n                                    </h3>\n                                    <form onSubmit={signInForm.submit}>\n                                        {signInForm.serverError && (\n                                            <div className=\"alert alert-sm alert-danger\">\n                                                <FormattedMessage id={signInForm.serverError} />\n                                            </div>\n                                        )}\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"signin-email\">\n                                                <FormattedMessage id=\"INPUT_EMAIL_ADDRESS_LABEL\" />\n                                            </label>\n                                            <input\n                                                id=\"signin-email\"\n                                                type=\"email\"\n                                                className={classNames('form-control', {\n                                                    'is-invalid': signInForm.errors.email,\n                                                })}\n                                                placeholder=\"customer@example.com\"\n                                                name=\"email\"\n                                                ref={signInForm.register({\n                                                    required: true,\n                                                    validate: { email: validateEmail },\n                                                })}\n                                            />\n                                            <div className=\"invalid-feedback\">\n                                                {signInForm.errors.email?.type === 'required' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                                )}\n                                                {signInForm.errors.email?.type === 'email' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_INCORRECT_EMAIL\" />\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"signin-password\">\n                                                <FormattedMessage id=\"INPUT_PASSWORD_LABEL\" />\n                                            </label>\n                                            <input\n                                                id=\"signin-password\"\n                                                type=\"password\"\n                                                className={classNames('form-control', {\n                                                    'is-invalid': signInForm.errors.password,\n                                                })}\n                                                placeholder={intl.formatMessage({ id: 'INPUT_PASSWORD_PLACEHOLDER' })}\n                                                name=\"password\"\n                                                ref={signInForm.register({ required: true })}\n                                            />\n                                            <div className=\"invalid-feedback\">\n                                                {signInForm.errors.password?.type === 'required' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                                )}\n                                            </div>\n                                            <small className=\"form-text text-muted\">\n                                                <AppLink href=\"/\">\n                                                    <FormattedMessage id=\"LINK_FORGOT_PASSWORD\" />\n                                                </AppLink>\n                                            </small>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <div className=\"form-check\">\n                                                <Checkbox\n                                                    className=\"form-check-input\"\n                                                    id=\"sign-in-remember\"\n                                                    name=\"remember\"\n                                                    inputRef={signInForm.register()}\n                                                />\n                                                <label className=\"form-check-label\" htmlFor=\"sign-in-remember\">\n                                                    <FormattedMessage id=\"INPUT_REMEMBER_ME_LABEL\" />\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group mb-0\">\n                                            <button\n                                                type=\"submit\"\n                                                className={classNames('btn', 'btn-primary', 'mt-3', {\n                                                    'btn-loading': signInForm.submitInProgress,\n                                                })}\n                                            >\n                                                <FormattedMessage id=\"BUTTON_LOGIN\" />\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 d-flex mt-4 mt-md-0\">\n                            <div className=\"card flex-grow-1 mb-0 ml-0 ml-lg-3 mr-0 mr-lg-4\">\n                                <div className=\"card-body card-body--padding--2\">\n                                    <h3 className=\"card-title\">\n                                        <FormattedMessage id=\"HEADER_REGISTER\" />\n                                    </h3>\n                                    <form onSubmit={signUpForm.submit}>\n                                        {signUpForm.serverError && (\n                                            <div className=\"alert alert-sm alert-danger\">\n                                                <FormattedMessage id={signUpForm.serverError} />\n                                            </div>\n                                        )}\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"signup-email\">\n                                                <FormattedMessage id=\"INPUT_EMAIL_ADDRESS_LABEL\" />\n                                            </label>\n                                            <input\n                                                id=\"signup-email\"\n                                                type=\"email\"\n                                                className={classNames('form-control', {\n                                                    'is-invalid': signUpForm.errors.email,\n                                                })}\n                                                placeholder=\"customer@example.com\"\n                                                name=\"email\"\n                                                ref={signUpForm.register({\n                                                    required: true,\n                                                    validate: { email: validateEmail },\n                                                })}\n                                            />\n                                            <div className=\"invalid-feedback\">\n                                                {signUpForm.errors.email?.type === 'required' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                                )}\n                                                {signUpForm.errors.email?.type === 'email' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_INCORRECT_EMAIL\" />\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"signup-password\">\n                                                <FormattedMessage id=\"INPUT_PASSWORD_LABEL\" />\n                                            </label>\n                                            <input\n                                                id=\"signup-password\"\n                                                type=\"password\"\n                                                className={classNames('form-control', {\n                                                    'is-invalid': signUpForm.errors.password,\n                                                })}\n                                                placeholder={intl.formatMessage({ id: 'INPUT_PASSWORD_PLACEHOLDER' })}\n                                                name=\"password\"\n                                                ref={signUpForm.register({\n                                                    required: true,\n                                                })}\n                                            />\n                                            <div className=\"invalid-feedback\">\n                                                {signUpForm.errors.password?.type === 'required' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"signup-confirm\">\n                                                <FormattedMessage id=\"INPUT_PASSWORD_REPEAT_LABEL\" />\n                                            </label>\n                                            <input\n                                                id=\"signup-confirm\"\n                                                type=\"password\"\n                                                className={classNames('form-control', {\n                                                    'is-invalid': signUpForm.errors.confirmPassword,\n                                                })}\n                                                placeholder={intl.formatMessage({\n                                                    id: 'INPUT_PASSWORD_REPEAT_PLACEHOLDER',\n                                                })}\n                                                name=\"confirmPassword\"\n                                                ref={signUpForm.register({\n                                                    required: true,\n                                                    validate: {\n                                                        match: (value) => value === signUpForm.watch('password'),\n                                                    },\n                                                })}\n                                            />\n                                            <div className=\"invalid-feedback\">\n                                                {signUpForm.errors.confirmPassword?.type === 'required' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                                )}\n                                                {signUpForm.errors.confirmPassword?.type === 'match' && (\n                                                    <FormattedMessage id=\"ERROR_FORM_PASSWORD_DOES_NOT_MATCH\" />\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group mb-0\">\n                                            <button\n                                                type=\"submit\"\n                                                className={classNames('btn', 'btn-primary', 'mt-3', {\n                                                    'btn-loading': signUpForm.submitInProgress,\n                                                })}\n                                            >\n                                                <FormattedMessage id=\"BUTTON_REGISTER\" />\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <BlockSpace layout=\"before-footer\" />\n        </React.Fragment>\n    );\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}