{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { withClientState } from '~/store/client';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_QUANTITIES } from '~/store/cart/cartActionTypes';\n\nfunction findItemIndex(items, product, options) {\n  return items.findIndex(item => {\n    if (item.product.id !== product.id || item.options.length !== options.length) {\n      return false;\n    }\n\n    for (let i = 0; i < options.length; i += 1) {\n      const option = options[i];\n      const itemOption = item.options.find(itemOption => itemOption.name === option.name && itemOption.value === option.value);\n\n      if (!itemOption) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n\nfunction calcSubtotal(items) {\n  return items.reduce((subtotal, item) => subtotal + item.total, 0);\n}\n\nfunction calcQuantity(items) {\n  return items.reduce((quantity, item) => quantity + item.quantity, 0);\n}\n\nfunction calcTotal(subtotal, totals) {\n  return totals.reduce((acc, extraLine) => acc + extraLine.price, subtotal);\n}\n\nfunction calcTotals(items) {\n  if (items.length === 0) {\n    return [];\n  }\n\n  const subtotal = calcSubtotal(items);\n  return [{\n    type: 'shipping',\n    title: 'SHIPPING',\n    price: 25\n  }, {\n    type: 'tax',\n    title: 'TAX',\n    price: subtotal * 0.2\n  }];\n}\n\nfunction addItem(state, product, options, quantity) {\n  const itemIndex = findItemIndex(state.items, product, options);\n  let newItems;\n  let {\n    lastItemId\n  } = state;\n\n  if (itemIndex === -1) {\n    lastItemId += 1;\n    newItems = [...state.items, {\n      id: lastItemId,\n      product: JSON.parse(JSON.stringify(product)),\n      options: JSON.parse(JSON.stringify(options)),\n      price: product.price,\n      total: product.price * quantity,\n      quantity\n    }];\n  } else {\n    const item = state.items[itemIndex];\n    newItems = [...state.items.slice(0, itemIndex), _objectSpread(_objectSpread({}, item), {}, {\n      quantity: item.quantity + quantity,\n      total: (item.quantity + quantity) * item.price\n    }), ...state.items.slice(itemIndex + 1)];\n  }\n\n  const subtotal = calcSubtotal(newItems);\n  const totals = calcTotals(newItems);\n  const total = calcTotal(subtotal, totals);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    lastItemId,\n    subtotal,\n    totals,\n    total,\n    items: newItems,\n    quantity: calcQuantity(newItems)\n  });\n}\n\nfunction removeItem(state, itemId) {\n  const {\n    items\n  } = state;\n  const newItems = items.filter(item => item.id !== itemId);\n  const subtotal = calcSubtotal(newItems);\n  const totals = calcTotals(newItems);\n  const total = calcTotal(subtotal, totals);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    items: newItems,\n    quantity: calcQuantity(newItems),\n    subtotal,\n    totals,\n    total\n  });\n}\n\nfunction updateQuantities(state, quantities) {\n  let needUpdate = false;\n  const newItems = state.items.map(item => {\n    const quantity = quantities.find(x => x.itemId === item.id && x.value !== item.quantity);\n\n    if (!quantity) {\n      return item;\n    }\n\n    needUpdate = true;\n    return _objectSpread(_objectSpread({}, item), {}, {\n      quantity: quantity.value,\n      total: quantity.value * item.price\n    });\n  });\n\n  if (needUpdate) {\n    const subtotal = calcSubtotal(newItems);\n    const totals = calcTotals(newItems);\n    const total = calcTotal(subtotal, totals);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: newItems,\n      quantity: calcQuantity(newItems),\n      subtotal,\n      totals,\n      total\n    });\n  }\n\n  return state;\n}\n\nconst initialState = {\n  lastItemId: 0,\n  quantity: 0,\n  items: [],\n  subtotal: 0,\n  totals: [],\n  total: 0\n};\nexport const CART_NAMESPACE = 'cart';\n\nfunction cartBaseReducer(state = initialState, action) {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      return addItem(state, action.product, action.options, action.quantity);\n\n    case CART_REMOVE_ITEM:\n      return removeItem(state, action.itemId);\n\n    case CART_UPDATE_QUANTITIES:\n      return updateQuantities(state, action.quantities);\n\n    default:\n      return state;\n  }\n}\n\nconst cartReducer = withClientState(cartBaseReducer, CART_NAMESPACE);\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/cart/cartReducer.ts"],"names":["withClientState","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_UPDATE_QUANTITIES","findItemIndex","items","product","options","findIndex","item","id","length","i","option","itemOption","find","name","value","calcSubtotal","reduce","subtotal","total","calcQuantity","quantity","calcTotal","totals","acc","extraLine","price","calcTotals","type","title","addItem","state","itemIndex","newItems","lastItemId","JSON","parse","stringify","slice","removeItem","itemId","filter","updateQuantities","quantities","needUpdate","map","x","initialState","CART_NAMESPACE","cartBaseReducer","action","cartReducer"],"mappings":"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","sourcesContent":["// application\nimport { IProduct } from '~/interfaces/product';\nimport { withClientState } from '~/store/client';\nimport {\n    ICartItem,\n    ICartItemOption,\n    ICartState,\n    ICartTotal,\n} from '~/store/cart/cartTypes';\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_UPDATE_QUANTITIES,\n    CartAction,\n    CartItemQuantity,\n} from '~/store/cart/cartActionTypes';\n\nfunction findItemIndex(items: ICartItem[], product: IProduct, options: ICartItemOption[]): number {\n    return items.findIndex((item) => {\n        if (item.product.id !== product.id || item.options.length !== options.length) {\n            return false;\n        }\n\n        for (let i = 0; i < options.length; i += 1) {\n            const option = options[i];\n            const itemOption = item.options.find((itemOption) => (\n                itemOption.name === option.name && itemOption.value === option.value\n            ));\n\n            if (!itemOption) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n}\n\nfunction calcSubtotal(items: ICartItem[]): number {\n    return items.reduce((subtotal, item) => subtotal + item.total, 0);\n}\n\nfunction calcQuantity(items: ICartItem[]): number {\n    return items.reduce((quantity, item) => quantity + item.quantity, 0);\n}\n\nfunction calcTotal(subtotal: number, totals: ICartTotal[]): number {\n    return totals.reduce((acc, extraLine) => acc + extraLine.price, subtotal);\n}\n\nfunction calcTotals(items: ICartItem[]): ICartTotal[] {\n    if (items.length === 0) {\n        return [];\n    }\n\n    const subtotal = calcSubtotal(items);\n\n    return [\n        {\n            type: 'shipping',\n            title: 'SHIPPING',\n            price: 25,\n        },\n        {\n            type: 'tax',\n            title: 'TAX',\n            price: subtotal * 0.2,\n        },\n    ];\n}\n\nfunction addItem(state: ICartState, product: IProduct, options: ICartItemOption[], quantity: number) {\n    const itemIndex = findItemIndex(state.items, product, options);\n\n    let newItems;\n    let { lastItemId } = state;\n\n    if (itemIndex === -1) {\n        lastItemId += 1;\n        newItems = [...state.items, {\n            id: lastItemId,\n            product: JSON.parse(JSON.stringify(product)),\n            options: JSON.parse(JSON.stringify(options)),\n            price: product.price,\n            total: product.price * quantity,\n            quantity,\n        }];\n    } else {\n        const item = state.items[itemIndex];\n\n        newItems = [\n            ...state.items.slice(0, itemIndex),\n            {\n                ...item,\n                quantity: item.quantity + quantity,\n                total: (item.quantity + quantity) * item.price,\n            },\n            ...state.items.slice(itemIndex + 1),\n        ];\n    }\n\n    const subtotal = calcSubtotal(newItems);\n    const totals = calcTotals(newItems);\n    const total = calcTotal(subtotal, totals);\n\n    return {\n        ...state,\n        lastItemId,\n        subtotal,\n        totals,\n        total,\n        items: newItems,\n        quantity: calcQuantity(newItems),\n    };\n}\n\nfunction removeItem(state: ICartState, itemId: number) {\n    const { items } = state;\n    const newItems = items.filter((item) => item.id !== itemId);\n\n    const subtotal = calcSubtotal(newItems);\n    const totals = calcTotals(newItems);\n    const total = calcTotal(subtotal, totals);\n\n    return {\n        ...state,\n        items: newItems,\n        quantity: calcQuantity(newItems),\n        subtotal,\n        totals,\n        total,\n    };\n}\n\nfunction updateQuantities(state: ICartState, quantities: CartItemQuantity[]) {\n    let needUpdate = false;\n\n    const newItems = state.items.map((item) => {\n        const quantity = quantities.find((x) => x.itemId === item.id && x.value !== item.quantity);\n\n        if (!quantity) {\n            return item;\n        }\n\n        needUpdate = true;\n\n        return {\n            ...item,\n            quantity: quantity.value,\n            total: quantity.value * item.price,\n        };\n    });\n\n    if (needUpdate) {\n        const subtotal = calcSubtotal(newItems);\n        const totals = calcTotals(newItems);\n        const total = calcTotal(subtotal, totals);\n\n        return {\n            ...state,\n            items: newItems,\n            quantity: calcQuantity(newItems),\n            subtotal,\n            totals,\n            total,\n        };\n    }\n\n    return state;\n}\n\nconst initialState: ICartState = {\n    lastItemId: 0,\n    quantity: 0,\n    items: [],\n    subtotal: 0,\n    totals: [],\n    total: 0,\n};\n\nexport const CART_NAMESPACE = 'cart';\n\nfunction cartBaseReducer(state = initialState, action: CartAction): ICartState {\n    switch (action.type) {\n    case CART_ADD_ITEM:\n        return addItem(state, action.product, action.options, action.quantity);\n\n    case CART_REMOVE_ITEM:\n        return removeItem(state, action.itemId);\n\n    case CART_UPDATE_QUANTITIES:\n        return updateQuantities(state, action.quantities);\n\n    default:\n        return state;\n    }\n}\n\nconst cartReducer = withClientState(cartBaseReducer, CART_NAMESPACE);\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}