{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\n// application\nimport { brands } from '~/fake-server/database/brands';\nexport function getBrands(options) {\n  return Promise.resolve(brands.slice(0, options === null || options === void 0 ? void 0 : options.limit));\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/endpoints/brands.ts"],"names":["brands","getBrands","options","Promise","resolve","slice","limit"],"mappings":"AAAA;AAEA;AACA,SAASA,MAAT,QAAuB,+BAAvB;AAIA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAAmE;AACtE,SAAOC,OAAO,CAACC,OAAR,CAAgBJ,MAAM,CAACK,KAAP,CAAa,CAAb,EAAgBH,OAAhB,aAAgBA,OAAhB,uBAAgBA,OAAO,CAAEI,KAAzB,CAAhB,CAAP;AACH","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\n// application\nimport { brands } from '~/fake-server/database/brands';\nimport { IBrand } from '~/interfaces/brand';\nimport { IGetBrandsOptions } from '~/api/base';\n\nexport function getBrands(options?: IGetBrandsOptions): Promise<IBrand[]> {\n    return Promise.resolve(brands.slice(0, options?.limit));\n}\n"]},"metadata":{},"sourceType":"module"}