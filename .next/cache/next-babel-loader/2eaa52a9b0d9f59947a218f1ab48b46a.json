{"ast":null,"code":"// third-party\nimport { toast } from 'react-toastify'; // application\n\nimport { globalIntl } from '~/services/i18n/global-intl';\nimport { COMPARE_ADD_ITEM, COMPARE_CLEAR, COMPARE_REMOVE_ITEM } from '~/store/compare/compareActionTypes';\nexport function compareAddItemSuccess(product) {\n  var _globalIntl;\n\n  toast.success((_globalIntl = globalIntl()) === null || _globalIntl === void 0 ? void 0 : _globalIntl.formatMessage({\n    id: 'TEXT_TOAST_PRODUCT_ADDED_TO_COMPARE'\n  }, {\n    productName: product.name\n  }));\n  return {\n    type: COMPARE_ADD_ITEM,\n    product\n  };\n}\nexport function compareRemoveItemSuccess(productId) {\n  return {\n    type: COMPARE_REMOVE_ITEM,\n    productId\n  };\n}\nexport function compareClearSuccess() {\n  return {\n    type: COMPARE_CLEAR\n  };\n}\nexport function compareAddItem(product) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(compareAddItemSuccess(product));\n      resolve();\n    }, 250);\n  });\n}\nexport function compareRemoveItem(productId) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(compareRemoveItemSuccess(productId));\n      resolve();\n    }, 250);\n  });\n}\nexport function compareClear() {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(compareClearSuccess());\n      resolve();\n    }, 250);\n  });\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/compare/compareActions.ts"],"names":["toast","globalIntl","COMPARE_ADD_ITEM","COMPARE_CLEAR","COMPARE_REMOVE_ITEM","compareAddItemSuccess","product","success","formatMessage","id","productName","name","type","compareRemoveItemSuccess","productId","compareClearSuccess","compareAddItem","dispatch","Promise","resolve","setTimeout","compareRemoveItem","compareClear"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,gBAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,mBAHJ,QAQO,oCARP;AAUA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwE;AAAA;;AAC3EN,EAAAA,KAAK,CAACO,OAAN,gBAAcN,UAAU,EAAxB,gDAAc,YAAcO,aAAd,CACV;AAAEC,IAAAA,EAAE,EAAE;AAAN,GADU,EAEV;AAAEC,IAAAA,WAAW,EAAEJ,OAAO,CAACK;AAAvB,GAFU,CAAd;AAKA,SAAO;AACHC,IAAAA,IAAI,EAAEV,gBADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASO,wBAAT,CAAkCC,SAAlC,EAA8E;AACjF,SAAO;AACHF,IAAAA,IAAI,EAAER,mBADH;AAEHU,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,mBAAT,GAAmD;AACtD,SAAO;AACHH,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH;AAED,OAAO,SAASa,cAAT,CAAwBV,OAAxB,EAA8E;AACjF;AACA,SAAQW,QAAD,IACH,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACrBC,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,QAAQ,CAACZ,qBAAqB,CAACC,OAAD,CAAtB,CAAR;AACAa,MAAAA,OAAO;AACV,KAHS,EAGP,GAHO,CAAV;AAIH,GALD,CADJ;AAQH;AAED,OAAO,SAASE,iBAAT,CAA2BP,SAA3B,EAAiF;AACpF;AACA,SAAQG,QAAD,IACH,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACrBC,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,QAAQ,CAACJ,wBAAwB,CAACC,SAAD,CAAzB,CAAR;AACAK,MAAAA,OAAO;AACV,KAHS,EAGP,GAHO,CAAV;AAIH,GALD,CADJ;AAQH;AAED,OAAO,SAASG,YAAT,GAA2D;AAC9D;AACA,SAAQL,QAAD,IACH,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACrBC,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACAI,MAAAA,OAAO;AACV,KAHS,EAGP,GAHO,CAAV;AAIH,GALD,CADJ;AAQH","sourcesContent":["// third-party\nimport { toast } from 'react-toastify';\n// application\nimport { globalIntl } from '~/services/i18n/global-intl';\nimport { IProduct } from '~/interfaces/product';\nimport {\n    COMPARE_ADD_ITEM,\n    COMPARE_CLEAR,\n    COMPARE_REMOVE_ITEM,\n    CompareAddItemAction,\n    CompareClearAction,\n    CompareRemoveItemAction,\n    CompareThunkAction,\n} from '~/store/compare/compareActionTypes';\n\nexport function compareAddItemSuccess(product: IProduct): CompareAddItemAction {\n    toast.success(globalIntl()?.formatMessage(\n        { id: 'TEXT_TOAST_PRODUCT_ADDED_TO_COMPARE' },\n        { productName: product.name },\n    ));\n\n    return {\n        type: COMPARE_ADD_ITEM,\n        product,\n    };\n}\n\nexport function compareRemoveItemSuccess(productId: number): CompareRemoveItemAction {\n    return {\n        type: COMPARE_REMOVE_ITEM,\n        productId,\n    };\n}\n\nexport function compareClearSuccess(): CompareClearAction {\n    return {\n        type: COMPARE_CLEAR,\n    };\n}\n\nexport function compareAddItem(product: IProduct): CompareThunkAction<Promise<void>> {\n    // sending request to server, timeout is used as a stub\n    return (dispatch) => (\n        new Promise((resolve) => {\n            setTimeout(() => {\n                dispatch(compareAddItemSuccess(product));\n                resolve();\n            }, 250);\n        })\n    );\n}\n\nexport function compareRemoveItem(productId: number): CompareThunkAction<Promise<void>> {\n    // sending request to server, timeout is used as a stub\n    return (dispatch) => (\n        new Promise((resolve) => {\n            setTimeout(() => {\n                dispatch(compareRemoveItemSuccess(productId));\n                resolve();\n            }, 250);\n        })\n    );\n}\n\nexport function compareClear(): CompareThunkAction<Promise<void>> {\n    // sending request to server, timeout is used as a stub\n    return (dispatch) => (\n        new Promise((resolve) => {\n            setTimeout(() => {\n                dispatch(compareClearSuccess());\n                resolve();\n            }, 250);\n        })\n    );\n}\n"]},"metadata":{},"sourceType":"module"}