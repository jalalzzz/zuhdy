{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable import/prefer-default-export */\n// react\nimport { useMemo } from 'react'; // third-party\n\nimport { useRouter } from 'next/router';\n// application\nimport { getDefaultLocale } from '~/services/i18n/utils';\nimport { normalizeHref, normalizeLinkHref } from '~/components/shared/AppLink';\nimport { useLocale } from '~/services/i18n/hooks';\nexport function hrefToRouterArgs(linkHref) {\n  var _normalizeLinkHref = normalizeLinkHref(linkHref),\n      href = _normalizeLinkHref.href,\n      as = _normalizeLinkHref.as,\n      shallow = _normalizeLinkHref.shallow;\n\n  return [href, as, {\n    shallow: shallow\n  }];\n}\n\nfunction normalizeRouterArgs(args, locale) {\n  var _args = _slicedToArray(args, 3),\n      url = _args[0],\n      as = _args[1],\n      options = _args[2];\n\n  var normalizedUrl = normalizeHref(url);\n  var normalizedAs = normalizeHref(as || url);\n  normalizedUrl.query = _objectSpread({}, normalizedUrl.query);\n  normalizedAs.pathname = locale === getDefaultLocale() ? normalizedAs.pathname : \"/\".concat(locale).concat(normalizedAs.pathname);\n  return [normalizedUrl, normalizedAs, options];\n}\n\nexport function useOriginalRouter() {\n  _s();\n\n  return useRouter();\n}\n\n_s(useOriginalRouter, \"CeygcqajjFExIxFEzW4x/gfWEGQ=\", false, function () {\n  return [useRouter];\n});\n\nexport function useAppRouter() {\n  _s2();\n\n  var original = useRouter();\n  var locale = useLocale();\n  var mimic = useMemo(function () {\n    return {\n      push: function push() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return original.push.apply(original, _toConsumableArray(normalizeRouterArgs(args, locale)));\n      },\n      replace: function replace() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return original.replace.apply(original, _toConsumableArray(normalizeRouterArgs(args, locale)));\n      }\n    };\n  }, [original, locale]);\n  return useMemo(function () {\n    return Object.setPrototypeOf(mimic, original);\n  }, [mimic, original]);\n}\n\n_s2(useAppRouter, \"diTy9DtWYHeYsHb2bQGzYF1aIak=\", false, function () {\n  return [useRouter, useLocale];\n});","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/services/router.ts"],"names":["useMemo","useRouter","getDefaultLocale","normalizeHref","normalizeLinkHref","useLocale","hrefToRouterArgs","linkHref","href","as","shallow","normalizeRouterArgs","args","locale","url","options","normalizedUrl","normalizedAs","query","pathname","useOriginalRouter","useAppRouter","original","mimic","push","replace","Object","setPrototypeOf"],"mappings":";;;;;;;;;;;AAAA;AAEA;AACA,SAASA,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAAqBC,SAArB,QAAsC,aAAtC;AAEA;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAAuBC,aAAvB,EAAsCC,iBAAtC,QAA+D,6BAA/D;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAIA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAA4D;AAAA,2BACjCH,iBAAiB,CAACG,QAAD,CADgB;AAAA,MACvDC,IADuD,sBACvDA,IADuD;AAAA,MACjDC,EADiD,sBACjDA,EADiD;AAAA,MAC7CC,OAD6C,sBAC7CA,OAD6C;;AAG/D,SAAO,CAACF,IAAD,EAAOC,EAAP,EAAW;AAAEC,IAAAA,OAAO,EAAPA;AAAF,GAAX,CAAP;AACH;;AAED,SAASC,mBAAT,CAA6BC,IAA7B,EAA6CC,MAA7C,EAAuE;AAAA,6BACxCD,IADwC;AAAA,MAC5DE,GAD4D;AAAA,MACvDL,EADuD;AAAA,MACnDM,OADmD;;AAEnE,MAAMC,aAAa,GAAGb,aAAa,CAACW,GAAD,CAAnC;AACA,MAAMG,YAAY,GAAGd,aAAa,CAACM,EAAE,IAAIK,GAAP,CAAlC;AAEAE,EAAAA,aAAa,CAACE,KAAd,qBACOF,aAAa,CAACE,KADrB;AAIAD,EAAAA,YAAY,CAACE,QAAb,GAAwBN,MAAM,KAAKX,gBAAgB,EAA3B,GAClBe,YAAY,CAACE,QADK,cAEdN,MAFc,SAELI,YAAY,CAACE,QAFR,CAAxB;AAIA,SAAO,CAACH,aAAD,EAAgBC,YAAhB,EAA8BF,OAA9B,CAAP;AACH;;AAED,OAAO,SAASK,iBAAT,GAA6B;AAAA;;AAChC,SAAOnB,SAAS,EAAhB;AACH;;GAFemB,iB;UACLnB,S;;;AAGX,OAAO,SAASoB,YAAT,GAAoC;AAAA;;AACvC,MAAMC,QAAQ,GAAGrB,SAAS,EAA1B;AACA,MAAMY,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMkB,KAA+B,GAAGvB,OAAO,CAAC;AAAA,WAAO;AACnDwB,MAAAA,IADmD,kBACT;AAAA,0CAAlCZ,IAAkC;AAAlCA,UAAAA,IAAkC;AAAA;;AACtC,eAAOU,QAAQ,CAACE,IAAT,OAAAF,QAAQ,qBACRX,mBAAmB,CAACC,IAAD,EAAOC,MAAP,CADX,EAAf;AAGH,OALkD;AAMnDY,MAAAA,OANmD,qBAMN;AAAA,2CAAlCb,IAAkC;AAAlCA,UAAAA,IAAkC;AAAA;;AACzC,eAAOU,QAAQ,CAACG,OAAT,OAAAH,QAAQ,qBACRX,mBAAmB,CAACC,IAAD,EAAOC,MAAP,CADX,EAAf;AAGH;AAVkD,KAAP;AAAA,GAAD,EAW3C,CAACS,QAAD,EAAWT,MAAX,CAX2C,CAA/C;AAaA,SAAOb,OAAO,CAAC;AAAA,WAAM0B,MAAM,CAACC,cAAP,CAAsBJ,KAAtB,EAA6BD,QAA7B,CAAN;AAAA,GAAD,EAA+C,CAACC,KAAD,EAAQD,QAAR,CAA/C,CAAd;AACH;;IAjBeD,Y;UACKpB,S,EACFI,S","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\n// react\nimport { useMemo } from 'react';\n// third-party\nimport { NextRouter, useRouter } from 'next/router';\nimport { UrlObject } from 'url';\n// application\nimport { getDefaultLocale } from '~/services/i18n/utils';\nimport { IAppLinkHref, normalizeHref, normalizeLinkHref } from '~/components/shared/AppLink';\nimport { useLocale } from '~/services/i18n/hooks';\n\ntype PushArgs = [url: UrlObject, as?: UrlObject, options?: {}];\n\nexport function hrefToRouterArgs(linkHref: IAppLinkHref): PushArgs {\n    const { href, as, shallow } = normalizeLinkHref(linkHref);\n\n    return [href, as, { shallow }];\n}\n\nfunction normalizeRouterArgs(args: PushArgs, locale: string): PushArgs {\n    const [url, as, options] = args;\n    const normalizedUrl = normalizeHref(url);\n    const normalizedAs = normalizeHref(as || url);\n\n    normalizedUrl.query = {\n        ...normalizedUrl.query,\n    };\n\n    normalizedAs.pathname = locale === getDefaultLocale()\n        ? normalizedAs.pathname\n        : `/${locale}${normalizedAs.pathname}`;\n\n    return [normalizedUrl, normalizedAs, options];\n}\n\nexport function useOriginalRouter() {\n    return useRouter();\n}\n\nexport function useAppRouter(): NextRouter {\n    const original = useRouter();\n    const locale = useLocale();\n    const mimic: Partial<typeof original> = useMemo(() => ({\n        push(...args: PushArgs): Promise<boolean> {\n            return original.push(\n                ...normalizeRouterArgs(args, locale),\n            );\n        },\n        replace(...args: PushArgs): Promise<boolean> {\n            return original.replace(\n                ...normalizeRouterArgs(args, locale),\n            );\n        },\n    }), [original, locale]);\n\n    return useMemo(() => Object.setPrototypeOf(mimic, original), [mimic, original]);\n}\n"]},"metadata":{},"sourceType":"module"}