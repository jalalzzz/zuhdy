{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\mobile\\\\MobileMenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\n// react\nimport React, { useRef } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport MobileMenuConveyor from '~/components/mobile/MobileMenuConveyor';\nimport MobileMenuIndicators from '~/components/mobile/MobileMenuIndicators';\nimport MobileMenuLinks from '~/components/mobile/MobileMenuLinks';\nimport MobileMenuPanel from '~/components/mobile/MobileMenuPanel';\nimport MobileMenuSettings from '~/components/mobile/MobileMenuSettings';\nimport url from '~/services/url';\nimport { Cross12Svg } from '~/svg';\nimport { useMobileMenu, useMobileMenuClose } from '~/store/mobile-menu/mobileMenuHooks'; // data\n\nimport dataMobileMenuLinks from '~/data/mobileMenuLinks';\n\nfunction MobileMenu() {\n  _s();\n\n  var mobileMenu = useMobileMenu();\n  var mobileMenuClose = useMobileMenuClose();\n  var bodyRef = useRef(null);\n  var conveyorRef = useRef(null);\n  var rootClasses = classNames('mobile-menu', {\n    'mobile-menu--open': mobileMenu.open\n  });\n\n  var onMenuClosed = function onMenuClosed() {\n    if (conveyorRef.current) {\n      conveyorRef.current.reset();\n    }\n  };\n\n  var onTransitionEnd = function onTransitionEnd(event) {\n    if (event.target === bodyRef.current && event.propertyName === 'transform' && !mobileMenu.open) {\n      onMenuClosed();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: rootClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mobile-menu__backdrop\",\n    onClick: mobileMenuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"mobile-menu__body\",\n    ref: bodyRef,\n    onTransitionEnd: onTransitionEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"mobile-menu__close\",\n    type: \"button\",\n    onClick: mobileMenuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(Cross12Svg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), __jsx(MobileMenuConveyor, {\n    controllerRef: conveyorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(MobileMenuPanel, {\n    label: \"Menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(MobileMenuSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"mobile-menu__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), __jsx(MobileMenuIndicators, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"mobile-menu__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), __jsx(MobileMenuLinks, {\n    items: dataMobileMenuLinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"mobile-menu__spring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"mobile-menu__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), __jsx(AppLink, {\n    href: url.pageContactUs(),\n    className: \"mobile-menu__contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"mobile-menu__contacts-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_MOBILE_MENU_PHONE_TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"mobile-menu__contacts-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"800 060-0730\"))))));\n}\n\n_s(MobileMenu, \"Ghtc12HcwIbBbOUhdiF8dehrjEw=\", false, function () {\n  return [useMobileMenu, useMobileMenuClose];\n});\n\n_c = MobileMenu;\nexport default _c2 = React.memo(MobileMenu);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MobileMenu\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/mobile/MobileMenu.tsx"],"names":["React","useRef","classNames","FormattedMessage","AppLink","MobileMenuConveyor","MobileMenuIndicators","MobileMenuLinks","MobileMenuPanel","MobileMenuSettings","url","Cross12Svg","useMobileMenu","useMobileMenuClose","dataMobileMenuLinks","MobileMenu","mobileMenu","mobileMenuClose","bodyRef","conveyorRef","rootClasses","open","onMenuClosed","current","reset","onTransitionEnd","event","target","propertyName","pageContactUs","memo"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\n\n// react\nimport React, { useRef } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport MobileMenuConveyor, { IMobileMenuConveyorController } from '~/components/mobile/MobileMenuConveyor';\nimport MobileMenuIndicators from '~/components/mobile/MobileMenuIndicators';\nimport MobileMenuLinks from '~/components/mobile/MobileMenuLinks';\nimport MobileMenuPanel from '~/components/mobile/MobileMenuPanel';\nimport MobileMenuSettings from '~/components/mobile/MobileMenuSettings';\nimport url from '~/services/url';\nimport { Cross12Svg } from '~/svg';\nimport { useMobileMenu, useMobileMenuClose } from '~/store/mobile-menu/mobileMenuHooks';\n// data\nimport dataMobileMenuLinks from '~/data/mobileMenuLinks';\n\nfunction MobileMenu() {\n    const mobileMenu = useMobileMenu();\n    const mobileMenuClose = useMobileMenuClose();\n    const bodyRef = useRef<HTMLDivElement>(null);\n    const conveyorRef = useRef<IMobileMenuConveyorController>(null);\n\n    const rootClasses = classNames('mobile-menu', {\n        'mobile-menu--open': mobileMenu.open,\n    });\n\n    const onMenuClosed = () => {\n        if (conveyorRef.current) {\n            conveyorRef.current.reset();\n        }\n    };\n\n    const onTransitionEnd = (event: React.TransitionEvent) => {\n        if (event.target === bodyRef.current && event.propertyName === 'transform' && !mobileMenu.open) {\n            onMenuClosed();\n        }\n    };\n\n    return (\n        <div className={rootClasses}>\n            <div className=\"mobile-menu__backdrop\" onClick={mobileMenuClose} />\n            <div className=\"mobile-menu__body\" ref={bodyRef} onTransitionEnd={onTransitionEnd}>\n                <button className=\"mobile-menu__close\" type=\"button\" onClick={mobileMenuClose}>\n                    <Cross12Svg />\n                </button>\n\n                <MobileMenuConveyor controllerRef={conveyorRef}>\n                    <MobileMenuPanel label=\"Menu\">\n                        <MobileMenuSettings />\n                        <div className=\"mobile-menu__divider\" />\n                        <MobileMenuIndicators />\n                        <div className=\"mobile-menu__divider\" />\n                        <MobileMenuLinks items={dataMobileMenuLinks} />\n\n                        <div className=\"mobile-menu__spring\" />\n                        <div className=\"mobile-menu__divider\" />\n                        <AppLink href={url.pageContactUs()} className=\"mobile-menu__contacts\">\n                            <div className=\"mobile-menu__contacts-subtitle\">\n                                <FormattedMessage id=\"TEXT_MOBILE_MENU_PHONE_TITLE\" />\n                            </div>\n                            <div className=\"mobile-menu__contacts-title\">800 060-0730</div>\n                        </AppLink>\n                    </MobileMenuPanel>\n                </MobileMenuConveyor>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(MobileMenu);\n"]},"metadata":{},"sourceType":"module"}