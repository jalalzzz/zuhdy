{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { baseUrl } from '~/services/utils';\n// data\nimport dataShopLanguages, { dataShopDefaultLocale } from '~/data/shopLanguages';\nexport function getDefaultLocale() {\n  return dataShopDefaultLocale;\n}\nexport function getAllLanguages() {\n  return dataShopLanguages;\n}\nexport function getDefaultLanguage() {\n  const language = getAllLanguages().find(language => language.locale === getDefaultLocale());\n\n  if (!language) {\n    throw new Error('Default language not found.');\n  }\n\n  return language;\n}\nexport function getLanguageByPath(path) {\n  return getAllLanguages().find(language => {\n    const rg = new RegExp(`^\\\\/${language.locale}(\\\\/|$)`);\n    return rg.test(path);\n  }) || null;\n}\nexport function getLanguageByLocale(locale) {\n  return getAllLanguages().find(language => language.locale === locale) || null;\n}\n\nasync function loadTranslation(locale) {\n  if (false) {\n    return fetch(baseUrl(`/i18n/${locale}.json`)).then(response => response.json());\n  }\n\n  return (await import(`../../../public/i18n/${locale}.json`)).default;\n}\n\nexport async function loadMessages(locale) {\n  const baseMessages = locale === getDefaultLocale() ? Promise.resolve({}) : loadTranslation(getDefaultLocale());\n  const mainMessages = loadTranslation(locale);\n  return _objectSpread(_objectSpread({}, await baseMessages), await mainMessages);\n}\nexport function removePrefix(path) {\n  const languages = getAllLanguages();\n\n  for (let i = 0; i < languages.length; i += 1) {\n    const language = languages[i];\n    const rg = new RegExp(`^\\\\/${language.locale}(\\\\/|$)`);\n\n    if (rg.test(path)) {\n      return path.substr(language.locale.length + 1);\n    }\n  }\n\n  return path;\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/services/i18n/utils.ts"],"names":["baseUrl","dataShopLanguages","dataShopDefaultLocale","getDefaultLocale","getAllLanguages","getDefaultLanguage","language","find","locale","Error","getLanguageByPath","path","rg","RegExp","test","getLanguageByLocale","loadTranslation","fetch","then","response","json","default","loadMessages","baseMessages","Promise","resolve","mainMessages","removePrefix","languages","i","length","substr"],"mappings":";;;;;;AAAA;AACA,SAASA,OAAT,QAAwB,kBAAxB;AAEA;AACA,OAAOC,iBAAP,IAA4BC,qBAA5B,QAAyD,sBAAzD;AAEA,OAAO,SAASC,gBAAT,GAAoC;AACvC,SAAOD,qBAAP;AACH;AAED,OAAO,SAASE,eAAT,GAAwC;AAC3C,SAAOH,iBAAP;AACH;AAED,OAAO,SAASI,kBAAT,GAAyC;AAC5C,QAAMC,QAAQ,GAAGF,eAAe,GAAGG,IAAlB,CAAwBD,QAAD,IAAcA,QAAQ,CAACE,MAAT,KAAoBL,gBAAgB,EAAzE,CAAjB;;AAEA,MAAI,CAACG,QAAL,EAAe;AACX,UAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;AACH;;AAED,SAAOH,QAAP;AACH;AAED,OAAO,SAASI,iBAAT,CAA2BC,IAA3B,EAA2D;AAC9D,SAAOP,eAAe,GAAGG,IAAlB,CAAwBD,QAAD,IAAc;AACxC,UAAMM,EAAE,GAAG,IAAIC,MAAJ,CAAY,OAAMP,QAAQ,CAACE,MAAO,SAAlC,CAAX;AAEA,WAAOI,EAAE,CAACE,IAAH,CAAQH,IAAR,CAAP;AACH,GAJM,KAID,IAJN;AAKH;AAED,OAAO,SAASI,mBAAT,CAA6BP,MAA7B,EAA+D;AAClE,SAAOJ,eAAe,GAAGG,IAAlB,CAAwBD,QAAD,IAAcA,QAAQ,CAACE,MAAT,KAAoBA,MAAzD,KAAoE,IAA3E;AACH;;AAED,eAAeQ,eAAf,CAA+BR,MAA/B,EAAgF;AAC5E,aAAqB;AACjB,WAAOS,KAAK,CAACjB,OAAO,CAAE,SAAQQ,MAAO,OAAjB,CAAR,CAAL,CAAuCU,IAAvC,CAA6CC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAA1D,CAAP;AACH;;AAED,SAAO,CAAC,MAAM,OAAQ,wBAAuBZ,MAAO,OAAtC,CAAP,EAAsDa,OAA7D;AACH;;AAED,OAAO,eAAeC,YAAf,CAA4Bd,MAA5B,EAA6E;AAChF,QAAMe,YAAgD,GAAGf,MAAM,KAAKL,gBAAgB,EAA3B,GACnDqB,OAAO,CAACC,OAAR,CAAgB,EAAhB,CADmD,GAEnDT,eAAe,CAACb,gBAAgB,EAAjB,CAFrB;AAGA,QAAMuB,YAAY,GAAGV,eAAe,CAACR,MAAD,CAApC;AAEA,yCAAY,MAAMe,YAAlB,GAAmC,MAAMG,YAAzC;AACH;AAED,OAAO,SAASC,YAAT,CAAsBhB,IAAtB,EAA4C;AAC/C,QAAMiB,SAAS,GAAGxB,eAAe,EAAjC;;AAEA,OAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC1C,UAAMvB,QAAQ,GAAGsB,SAAS,CAACC,CAAD,CAA1B;AACA,UAAMjB,EAAE,GAAG,IAAIC,MAAJ,CAAY,OAAMP,QAAQ,CAACE,MAAO,SAAlC,CAAX;;AAEA,QAAII,EAAE,CAACE,IAAH,CAAQH,IAAR,CAAJ,EAAmB;AACf,aAAOA,IAAI,CAACoB,MAAL,CAAYzB,QAAQ,CAACE,MAAT,CAAgBsB,MAAhB,GAAyB,CAArC,CAAP;AACH;AACJ;;AAED,SAAOnB,IAAP;AACH","sourcesContent":["// application\nimport { baseUrl } from '~/services/utils';\nimport { ILanguage } from '~/interfaces/language';\n// data\nimport dataShopLanguages, { dataShopDefaultLocale } from '~/data/shopLanguages';\n\nexport function getDefaultLocale(): string {\n    return dataShopDefaultLocale;\n}\n\nexport function getAllLanguages(): ILanguage[] {\n    return dataShopLanguages;\n}\n\nexport function getDefaultLanguage(): ILanguage {\n    const language = getAllLanguages().find((language) => language.locale === getDefaultLocale());\n\n    if (!language) {\n        throw new Error('Default language not found.');\n    }\n\n    return language;\n}\n\nexport function getLanguageByPath(path: string): ILanguage | null {\n    return getAllLanguages().find((language) => {\n        const rg = new RegExp(`^\\\\/${language.locale}(\\\\/|$)`);\n\n        return rg.test(path);\n    }) || null;\n}\n\nexport function getLanguageByLocale(locale: string): ILanguage | null {\n    return getAllLanguages().find((language) => language.locale === locale) || null;\n}\n\nasync function loadTranslation(locale: string): Promise<Record<string, string>> {\n    if (process.browser) {\n        return fetch(baseUrl(`/i18n/${locale}.json`)).then((response) => response.json());\n    }\n\n    return (await import(`../../../public/i18n/${locale}.json`)).default;\n}\n\nexport async function loadMessages(locale: string): Promise<Record<string, string>> {\n    const baseMessages: ReturnType<typeof loadTranslation> = locale === getDefaultLocale()\n        ? Promise.resolve({})\n        : loadTranslation(getDefaultLocale());\n    const mainMessages = loadTranslation(locale);\n\n    return { ...await baseMessages, ...await mainMessages };\n}\n\nexport function removePrefix(path: string): string {\n    const languages = getAllLanguages();\n\n    for (let i = 0; i < languages.length; i += 1) {\n        const language = languages[i];\n        const rg = new RegExp(`^\\\\/${language.locale}(\\\\/|$)`);\n\n        if (rg.test(path)) {\n            return path.substr(language.locale.length + 1);\n        }\n    }\n\n    return path;\n}\n"]},"metadata":{},"sourceType":"module"}