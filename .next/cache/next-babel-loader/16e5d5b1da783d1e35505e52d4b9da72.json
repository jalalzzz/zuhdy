{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { getBrands as _getBrands } from '~/fake-server/endpoints/brands';\nimport { addProductReview as _addProductReview, checkout as _checkout, getCategories as _getCategories, getCategoryBySlug as _getCategoryBySlug, getFeaturedProducts as _getFeaturedProducts, getLatestProducts as _getLatestProducts, getPopularProducts as _getPopularProducts, getProductAnalogs as _getProductAnalogs, getProductBySlug as _getProductBySlug, getProductReviews as _getProductReviews, getProductsList as _getProductsList, getRelatedProducts as _getRelatedProducts, getSearchSuggestions as _getSearchSuggestions, getSpecialOffers as _getSpecialOffers, getTopRatedProducts as _getTopRatedProducts } from '~/fake-server/endpoints';\nexport var FakeShopApi = /*#__PURE__*/function () {\n  function FakeShopApi() {\n    _classCallCheck(this, FakeShopApi);\n  }\n\n  _createClass(FakeShopApi, [{\n    key: \"getCategoryBySlug\",\n    value: function getCategoryBySlug(slug, options) {\n      return _getCategoryBySlug(slug, options);\n    }\n  }, {\n    key: \"getCategories\",\n    value: function getCategories(options) {\n      return _getCategories(options);\n    }\n  }, {\n    key: \"getBrands\",\n    value: function getBrands(options) {\n      return _getBrands(options);\n    }\n  }, {\n    key: \"getProductsList\",\n    value: function getProductsList() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _getProductsList(options, filters);\n    }\n  }, {\n    key: \"getProductBySlug\",\n    value: function getProductBySlug(slug) {\n      return _getProductBySlug(slug);\n    }\n  }, {\n    key: \"getProductReviews\",\n    value: function getProductReviews(productId, options) {\n      return _getProductReviews(productId, options);\n    }\n  }, {\n    key: \"addProductReview\",\n    value: function addProductReview(productId, data) {\n      return _addProductReview(productId, data);\n    }\n  }, {\n    key: \"getProductAnalogs\",\n    value: function getProductAnalogs(productId) {\n      return _getProductAnalogs(productId);\n    }\n  }, {\n    key: \"getRelatedProducts\",\n    value: function getRelatedProducts(productId, limit) {\n      return _getRelatedProducts(productId, limit);\n    }\n  }, {\n    key: \"getFeaturedProducts\",\n    value: function getFeaturedProducts(categorySlug, limit) {\n      return _getFeaturedProducts(categorySlug, limit);\n    }\n  }, {\n    key: \"getPopularProducts\",\n    value: function getPopularProducts(categorySlug, limit) {\n      return _getPopularProducts(categorySlug, limit);\n    }\n  }, {\n    key: \"getTopRatedProducts\",\n    value: function getTopRatedProducts(categorySlug, limit) {\n      return _getTopRatedProducts(categorySlug, limit);\n    }\n  }, {\n    key: \"getSpecialOffers\",\n    value: function getSpecialOffers(limit) {\n      return _getSpecialOffers(limit);\n    }\n  }, {\n    key: \"getLatestProducts\",\n    value: function getLatestProducts(limit) {\n      return _getLatestProducts(limit);\n    }\n  }, {\n    key: \"getSearchSuggestions\",\n    value: function getSearchSuggestions(query, options) {\n      return _getSearchSuggestions(query, options);\n    }\n  }, {\n    key: \"checkout\",\n    value: function checkout(data) {\n      return _checkout(data);\n    }\n  }]);\n\n  return FakeShopApi;\n}();","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/api/fake-api/fake-shop.api.ts"],"names":["getBrands","addProductReview","checkout","getCategories","getCategoryBySlug","getFeaturedProducts","getLatestProducts","getPopularProducts","getProductAnalogs","getProductBySlug","getProductReviews","getProductsList","getRelatedProducts","getSearchSuggestions","getSpecialOffers","getTopRatedProducts","FakeShopApi","slug","options","filters","productId","data","limit","categorySlug","query"],"mappings":"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","sourcesContent":["/* eslint-disable import/prefer-default-export,class-methods-use-this */\n\n// application\nimport { getBrands } from '~/fake-server/endpoints/brands';\nimport { IBrand } from '~/interfaces/brand';\nimport { IFilterValues, IListOptions, IReviewsList } from '~/interfaces/list';\nimport { IOrder } from '~/interfaces/order';\nimport { IProductsList, IProduct } from '~/interfaces/product';\nimport { IReview } from '~/interfaces/review';\nimport { IShopCategory } from '~/interfaces/category';\nimport {\n    IAddProductReviewData,\n    ICheckoutData,\n    IGetBrandsOptions,\n    IGetCategoriesOptions,\n    IGetCategoryBySlugOptions,\n    IGetSearchSuggestionsOptions,\n    IGetSearchSuggestionsResult,\n    ShopApi,\n} from '~/api/base';\nimport {\n    addProductReview,\n    checkout,\n    getCategories,\n    getCategoryBySlug,\n    getFeaturedProducts,\n    getLatestProducts,\n    getPopularProducts,\n    getProductAnalogs,\n    getProductBySlug,\n    getProductReviews,\n    getProductsList,\n    getRelatedProducts,\n    getSearchSuggestions,\n    getSpecialOffers,\n    getTopRatedProducts,\n} from '~/fake-server/endpoints';\n\nexport class FakeShopApi implements ShopApi {\n    getCategoryBySlug(slug: string, options?: IGetCategoryBySlugOptions): Promise<IShopCategory> {\n        return getCategoryBySlug(slug, options);\n    }\n\n    getCategories(options?: IGetCategoriesOptions): Promise<IShopCategory[]> {\n        return getCategories(options);\n    }\n\n    getBrands(options?: IGetBrandsOptions): Promise<IBrand[]> {\n        return getBrands(options);\n    }\n\n    getProductsList(options: IListOptions = {}, filters: IFilterValues = {}): Promise<IProductsList> {\n        return getProductsList(options, filters);\n    }\n\n    getProductBySlug(slug: string): Promise<IProduct> {\n        return getProductBySlug(slug);\n    }\n\n    getProductReviews(productId: number, options?: IListOptions): Promise<IReviewsList> {\n        return getProductReviews(productId, options);\n    }\n\n    addProductReview(productId: number, data: IAddProductReviewData): Promise<IReview> {\n        return addProductReview(productId, data);\n    }\n\n    getProductAnalogs(productId: number): Promise<IProduct[]> {\n        return getProductAnalogs(productId);\n    }\n\n    getRelatedProducts(productId: number, limit: number): Promise<IProduct[]> {\n        return getRelatedProducts(productId, limit);\n    }\n\n    getFeaturedProducts(categorySlug: string | null, limit: number): Promise<IProduct[]> {\n        return getFeaturedProducts(categorySlug, limit);\n    }\n\n    getPopularProducts(categorySlug: string | null, limit: number): Promise<IProduct[]> {\n        return getPopularProducts(categorySlug, limit);\n    }\n\n    getTopRatedProducts(categorySlug: string | null, limit: number): Promise<IProduct[]> {\n        return getTopRatedProducts(categorySlug, limit);\n    }\n\n    getSpecialOffers(limit: number): Promise<IProduct[]> {\n        return getSpecialOffers(limit);\n    }\n\n    getLatestProducts(limit: number): Promise<IProduct[]> {\n        return getLatestProducts(limit);\n    }\n\n    getSearchSuggestions(\n        query: string,\n        options?: IGetSearchSuggestionsOptions,\n    ): Promise<IGetSearchSuggestionsResult> {\n        return getSearchSuggestions(query, options);\n    }\n\n    checkout(data: ICheckoutData): Promise<IOrder> {\n        return checkout(data);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}