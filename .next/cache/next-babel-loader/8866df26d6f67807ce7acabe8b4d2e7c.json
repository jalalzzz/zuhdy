{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\blocks\\\\BlockSpace.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\n\nfunction BlockSpace(props) {\n  const {\n    layout,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"layout\", \"className\"]);\n\n  const rootClasses = classNames('block-space', `block-space--layout--${layout}`, className);\n  return __jsx(\"div\", _extends({\n    className: rootClasses\n  }, rootProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default React.memo(BlockSpace);","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/blocks/BlockSpace.tsx"],"names":["React","classNames","BlockSpace","props","layout","className","rootProps","rootClasses","memo"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAgBA,SAASC,UAAT,CAAoBC,KAApB,EAAkC;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsCF,KAA5C;AAAA,QAA8BG,SAA9B,4BAA4CH,KAA5C;;AACA,QAAMI,WAAW,GAAGN,UAAU,CAAC,aAAD,EAAiB,wBAAuBG,MAAO,EAA/C,EAAkDC,SAAlD,CAA9B;AAEA,SACI;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAAiCD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH;;AAED,eAAeN,KAAK,CAACQ,IAAN,CAAWN,UAAX,CAAf","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\n\nexport type IBlockSpaceLayout =\n    'after-header' |\n    'before-footer' |\n    'divider-xs' |\n    'divider-sm' |\n    'divider-nl' |\n    'divider-lg' |\n    'divider-xl' |\n    'spaceship-ledge-height';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    layout: IBlockSpaceLayout;\n}\n\nfunction BlockSpace(props: Props) {\n    const { layout, className, ...rootProps } = props;\n    const rootClasses = classNames('block-space', `block-space--layout--${layout}`, className);\n\n    return (\n        <div className={rootClasses} {...rootProps} />\n    );\n}\n\nexport default React.memo(BlockSpace);\n"]},"metadata":{},"sourceType":"module"}