{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\filters\\\\FilterRating.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport Checkbox from '~/components/shared/Checkbox';\nimport Rating from '~/components/shared/Rating';\n\nfunction FilterRating(props) {\n  var _this = this;\n\n  var options = props.options,\n      value = props.value,\n      onChangeValue = props.onChangeValue;\n\n  var updateValue = function updateValue(newValue) {\n    if (onChangeValue) {\n      onChangeValue({\n        filter: options,\n        value: newValue\n      });\n    }\n  }; // noinspection DuplicatedCode\n\n\n  var handleChange = function handleChange(event) {\n    var currentValue = parseFloat(event.target.value);\n\n    if (event.target.checked && !value.includes(currentValue)) {\n      updateValue([].concat(_toConsumableArray(value), [currentValue]));\n    }\n\n    if (!event.target.checked && value.includes(currentValue)) {\n      updateValue(value.filter(function (x) {\n        return x !== currentValue;\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"filter-rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: \"filter-rating__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, options.items.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.rating,\n      className: classNames('filter-rating__item', {\n        'filter-rating__item--disabled': item.count === 0\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      className: \"filter-rating__item-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, __jsx(Checkbox, {\n      className: \"filter-rating__item-input\",\n      value: item.rating,\n      checked: value.includes(item.rating),\n      disabled: item.count === 0,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }), __jsx(\"span\", {\n      className: \"filter-rating__item-stars\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, __jsx(Rating, {\n      value: item.rating,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    })), __jsx(\"span\", {\n      className: \"filter-rating__item-title sr-only\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"TEXT_STARS\",\n      values: {\n        stars: item.rating\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    })), item.count !== 0 && __jsx(\"span\", {\n      className: \"filter-rating__item-counter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, item.count)));\n  })));\n}\n\n_c = FilterRating;\nexport default FilterRating;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterRating\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/filters/FilterRating.tsx"],"names":["React","classNames","FormattedMessage","Checkbox","Rating","FilterRating","props","options","value","onChangeValue","updateValue","newValue","filter","handleChange","event","currentValue","parseFloat","target","checked","includes","x","items","map","item","rating","count","stars"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n// application\nimport Checkbox from '~/components/shared/Checkbox';\nimport Rating from '~/components/shared/Rating';\nimport { IRatingFilter, IRatingFilterValue } from '~/interfaces/filter';\n\ninterface Props {\n    options: IRatingFilter;\n    value: IRatingFilterValue;\n    onChangeValue?: (event: { filter: IRatingFilter, value: IRatingFilterValue }) => void;\n}\n\nfunction FilterRating(props: Props) {\n    const { options, value, onChangeValue } = props;\n\n    const updateValue = (newValue: IRatingFilterValue) => {\n        if (onChangeValue) {\n            onChangeValue({ filter: options, value: newValue });\n        }\n    };\n\n    // noinspection DuplicatedCode\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const currentValue = parseFloat(event.target.value);\n\n        if (event.target.checked && !value.includes(currentValue)) {\n            updateValue([...value, currentValue]);\n        }\n        if (!event.target.checked && value.includes(currentValue)) {\n            updateValue(value.filter((x) => x !== currentValue));\n        }\n    };\n\n    return (\n        <div className=\"filter-rating\">\n            <ul className=\"filter-rating__list\">\n                {options.items.map((item) => (\n                    <li\n                        key={item.rating}\n                        className={classNames('filter-rating__item', {\n                            'filter-rating__item--disabled': item.count === 0,\n                        })}\n                    >\n                        <label className=\"filter-rating__item-label\">\n                            <Checkbox\n                                className=\"filter-rating__item-input\"\n                                value={item.rating}\n                                checked={value.includes(item.rating)}\n                                disabled={item.count === 0}\n                                onChange={handleChange}\n                            />\n                            <span className=\"filter-rating__item-stars\">\n                                <Rating value={item.rating} />\n                            </span>\n                            <span className=\"filter-rating__item-title sr-only\">\n                                <FormattedMessage id=\"TEXT_STARS\" values={{ stars: item.rating }} />\n                            </span>\n                            {item.count !== 0 && (\n                                <span className=\"filter-rating__item-counter\">{item.count}</span>\n                            )}\n                        </label>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default FilterRating;\n"]},"metadata":{},"sourceType":"module"}