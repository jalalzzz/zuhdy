{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\mobile\\\\MobileMenuSettings.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useMemo } from 'react'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport MobileMenuLinks from '~/components/mobile/MobileMenuLinks';\nimport MobileMenuPanelController from '~/components/mobile/MobileMenuPanelController';\nimport { ArrowRoundedRight6x9Svg } from '~/svg';\nimport { getAllLanguages } from '~/services/i18n/utils';\nimport { useCurrency, useCurrencyChange } from '~/store/currency/currencyHooks';\nimport { useLanguage, useSetLocale } from '~/services/i18n/hooks';\nimport { useMobileMenuClose } from '~/store/mobile-menu/mobileMenuHooks'; // data\n\nimport dataShopCurrencies from '~/data/shopCurrencies';\n\nfunction MobileMenuSettings() {\n  _s();\n\n  var _this = this;\n\n  var language = useLanguage();\n  var currency = useCurrency();\n  var setLocale = useSetLocale();\n  var currencyChange = useCurrencyChange();\n  var mobileMenuClose = useMobileMenuClose();\n  var languages = useMemo(function () {\n    return getAllLanguages().map(function (eachLanguage) {\n      return {\n        title: eachLanguage.name,\n        image: eachLanguage.icon,\n        customFields: {\n          locale: eachLanguage.locale\n        }\n      };\n    });\n  }, []);\n  var currencies = useMemo(function () {\n    return dataShopCurrencies.map(function (eachCurrency) {\n      return {\n        title: \"\".concat(eachCurrency.symbol, \" \").concat(eachCurrency.name),\n        customFields: {\n          currency: eachCurrency\n        }\n      };\n    });\n  }, []);\n  var onLanguageItemClick = useCallback(function (item) {\n    if (item.customFields && item.customFields.locale) {\n      setLocale(item.customFields.locale);\n    }\n\n    mobileMenuClose();\n  }, [setLocale, mobileMenuClose]);\n  var onCurrencyItemClick = useCallback(function (item) {\n    if (item.customFields && item.customFields.currency) {\n      currencyChange(item.customFields.currency);\n    }\n\n    mobileMenuClose();\n  }, [currencyChange, mobileMenuClose]);\n  return __jsx(\"div\", {\n    className: \"mobile-menu__settings-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mobile-menu__setting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(MobileMenuPanelController, {\n    label: \"Language\",\n    content: __jsx(MobileMenuLinks, {\n      items: languages,\n      onItemClick: onLanguageItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, function (open) {\n    return __jsx(\"button\", {\n      type: \"button\",\n      className: \"mobile-menu__setting-button\",\n      title: \"Language\",\n      onClick: open,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      className: \"mobile-menu__setting-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, __jsx(AppImage, {\n      src: language.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    })), __jsx(\"span\", {\n      className: \"mobile-menu__setting-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, language.name), __jsx(\"span\", {\n      className: \"mobile-menu__setting-arrow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, __jsx(ArrowRoundedRight6x9Svg, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    })));\n  })), __jsx(\"div\", {\n    className: \"mobile-menu__setting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(MobileMenuPanelController, {\n    label: \"Currency\",\n    content: __jsx(MobileMenuLinks, {\n      items: currencies,\n      onItemClick: onCurrencyItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, function (open) {\n    return __jsx(\"button\", {\n      type: \"button\",\n      className: \"mobile-menu__setting-button\",\n      title: \"Currency\",\n      onClick: open,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      className: \"mobile-menu__setting-icon mobile-menu__setting-icon--currency\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, currency.symbol), __jsx(\"span\", {\n      className: \"mobile-menu__setting-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, currency.name), __jsx(\"span\", {\n      className: \"mobile-menu__setting-arrow\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, __jsx(ArrowRoundedRight6x9Svg, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    })));\n  })));\n}\n\n_s(MobileMenuSettings, \"ZIeTK5CWCZr1p9ErNu/n/3yNV5A=\", false, function () {\n  return [useLanguage, useCurrency, useSetLocale, useCurrencyChange, useMobileMenuClose];\n});\n\n_c = MobileMenuSettings;\nexport default MobileMenuSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileMenuSettings\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/mobile/MobileMenuSettings.tsx"],"names":["React","useCallback","useMemo","AppImage","MobileMenuLinks","MobileMenuPanelController","ArrowRoundedRight6x9Svg","getAllLanguages","useCurrency","useCurrencyChange","useLanguage","useSetLocale","useMobileMenuClose","dataShopCurrencies","MobileMenuSettings","language","currency","setLocale","currencyChange","mobileMenuClose","languages","map","eachLanguage","title","name","image","icon","customFields","locale","currencies","eachCurrency","symbol","onLanguageItemClick","item","onCurrencyItemClick","open"],"mappings":"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","sourcesContent":["// react\nimport React, { useCallback, useMemo } from 'react';\n// application\nimport AppImage from '~/components/shared/AppImage';\nimport MobileMenuLinks from '~/components/mobile/MobileMenuLinks';\nimport MobileMenuPanelController from '~/components/mobile/MobileMenuPanelController';\nimport { ArrowRoundedRight6x9Svg } from '~/svg';\nimport { getAllLanguages } from '~/services/i18n/utils';\nimport { IMobileMenuLink } from '~/interfaces/mobile-menu-link';\nimport { useCurrency, useCurrencyChange } from '~/store/currency/currencyHooks';\nimport { useLanguage, useSetLocale } from '~/services/i18n/hooks';\nimport { useMobileMenuClose } from '~/store/mobile-menu/mobileMenuHooks';\n// data\nimport dataShopCurrencies from '~/data/shopCurrencies';\n\nfunction MobileMenuSettings() {\n    const language = useLanguage();\n    const currency = useCurrency();\n    const setLocale = useSetLocale();\n    const currencyChange = useCurrencyChange();\n    const mobileMenuClose = useMobileMenuClose();\n\n    const languages: IMobileMenuLink[] = useMemo(() => (\n        getAllLanguages().map<IMobileMenuLink>(((eachLanguage) => ({\n            title: eachLanguage.name,\n            image: eachLanguage.icon,\n            customFields: {\n                locale: eachLanguage.locale,\n            },\n        })))\n    ), []);\n\n    const currencies: IMobileMenuLink[] = useMemo(() => (\n        dataShopCurrencies.map(((eachCurrency) => ({\n            title: `${eachCurrency.symbol} ${eachCurrency.name}`,\n            customFields: {\n                currency: eachCurrency,\n            },\n        })))\n    ), []);\n\n    const onLanguageItemClick = useCallback((item: IMobileMenuLink) => {\n        if (item.customFields && item.customFields.locale) {\n            setLocale(item.customFields.locale);\n        }\n\n        mobileMenuClose();\n    }, [setLocale, mobileMenuClose]);\n\n    const onCurrencyItemClick = useCallback((item: IMobileMenuLink) => {\n        if (item.customFields && item.customFields.currency) {\n            currencyChange(item.customFields.currency);\n        }\n\n        mobileMenuClose();\n    }, [currencyChange, mobileMenuClose]);\n\n    return (\n        <div className=\"mobile-menu__settings-list\">\n            <div className=\"mobile-menu__setting\">\n                <MobileMenuPanelController\n                    label=\"Language\"\n                    content={<MobileMenuLinks items={languages} onItemClick={onLanguageItemClick} />}\n                >\n                    {(open) => (\n                        <button\n                            type=\"button\"\n                            className=\"mobile-menu__setting-button\"\n                            title=\"Language\"\n                            onClick={open}\n                        >\n                            <span className=\"mobile-menu__setting-icon\">\n                                <AppImage src={language.icon} />\n                            </span>\n                            <span className=\"mobile-menu__setting-title\">\n                                {language.name}\n                            </span>\n                            <span className=\"mobile-menu__setting-arrow\">\n                                <ArrowRoundedRight6x9Svg />\n                            </span>\n                        </button>\n                    )}\n                </MobileMenuPanelController>\n            </div>\n            <div className=\"mobile-menu__setting\">\n                <MobileMenuPanelController\n                    label=\"Currency\"\n                    content={<MobileMenuLinks items={currencies} onItemClick={onCurrencyItemClick} />}\n                >\n                    {(open) => (\n                        <button\n                            type=\"button\"\n                            className=\"mobile-menu__setting-button\"\n                            title=\"Currency\"\n                            onClick={open}\n                        >\n                            <span className=\"mobile-menu__setting-icon mobile-menu__setting-icon--currency\">\n                                {currency.symbol}\n                            </span>\n                            <span className=\"mobile-menu__setting-title\">\n                                {currency.name}\n                            </span>\n                            <span className=\"mobile-menu__setting-arrow\">\n                                <ArrowRoundedRight6x9Svg />\n                            </span>\n                        </button>\n                    )}\n                </MobileMenuPanelController>\n            </div>\n        </div>\n    );\n}\n\nexport default MobileMenuSettings;\n"]},"metadata":{},"sourceType":"module"}