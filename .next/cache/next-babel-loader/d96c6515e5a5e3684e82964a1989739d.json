{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\account\\\\password.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form'; // application\n\nimport AccountLayout from '~/components/account/AccountLayout';\nimport PageTitle from '~/components/shared/PageTitle';\nimport { accountApi } from '~/api';\nimport { useAsyncAction } from '~/store/hooks';\n\nfunction Page() {\n  var _errors$currentPasswo, _errors$newPassword, _errors$confirmPasswo, _errors$confirmPasswo2;\n\n  const intl = useIntl();\n  const {\n    0: serverError,\n    1: setServerError\n  } = useState(null);\n  const {\n    register,\n    errors,\n    watch,\n    handleSubmit\n  } = useForm();\n  const [submit, submitInProgress] = useAsyncAction(data => {\n    setServerError(null);\n    return accountApi.changePassword(data.currentPassword, data.newPassword).then(() => {\n      toast.success(intl.formatMessage({\n        id: 'TEXT_TOAST_PASSWORD_CHANGED'\n      }));\n    }, error => {\n      setServerError(`ERROR_API_${error.message}`);\n    });\n  }, [intl]);\n  return __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'HEADER_CHANGE_PASSWORD'\n  })), __jsx(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_CHANGE_PASSWORD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"card-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(submit),\n    className: \"col-12 col-lg-7 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, serverError && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: serverError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password-current\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_CURRENT_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  })), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password-current\",\n    name: \"currentPassword\",\n    className: classNames('form-control', {\n      'is-invalid': errors.currentPassword\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_CURRENT_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, ((_errors$currentPasswo = errors.currentPassword) === null || _errors$currentPasswo === void 0 ? void 0 : _errors$currentPasswo.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_NEW_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  })), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password-new\",\n    name: \"newPassword\",\n    className: classNames('form-control', {\n      'is-invalid': errors.newPassword\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_NEW_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, ((_errors$newPassword = errors.newPassword) === null || _errors$newPassword === void 0 ? void 0 : _errors$newPassword.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_REPEAT_LABEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  })), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password-confirm\",\n    name: \"confirmPassword\",\n    className: classNames('form-control', {\n      'is-invalid': errors.confirmPassword\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_REPEAT_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true,\n      validate: {\n        match: value => value === watch('newPassword')\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, ((_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }), ((_errors$confirmPasswo2 = errors.confirmPassword) === null || _errors$confirmPasswo2 === void 0 ? void 0 : _errors$confirmPasswo2.type) === 'match' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_PASSWORD_DOES_NOT_MATCH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'mt-3', {\n      'btn-loading': submitInProgress\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_CHANGE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  })))))));\n}\n\nPage.Layout = AccountLayout;\nexport default Page;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/account/password.tsx"],"names":["React","useState","classNames","FormattedMessage","useIntl","toast","useForm","AccountLayout","PageTitle","accountApi","useAsyncAction","Page","intl","serverError","setServerError","register","errors","watch","handleSubmit","submit","submitInProgress","data","changePassword","currentPassword","newPassword","then","success","formatMessage","id","error","message","required","type","confirmPassword","validate","match","value","Layout"],"mappings":"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","sourcesContent":["// react\nimport React, { useState } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form';\n// application\nimport AccountLayout from '~/components/account/AccountLayout';\nimport PageTitle from '~/components/shared/PageTitle';\nimport { accountApi } from '~/api';\nimport { useAsyncAction } from '~/store/hooks';\n\ninterface IForm {\n    currentPassword: string;\n    newPassword: string;\n    confirmPassword: string;\n}\n\nfunction Page() {\n    const intl = useIntl();\n    const [serverError, setServerError] = useState<string | null>(null);\n    const {\n        register,\n        errors,\n        watch,\n        handleSubmit,\n    } = useForm<IForm>();\n\n    const [submit, submitInProgress] = useAsyncAction((data: IForm) => {\n        setServerError(null);\n\n        return accountApi.changePassword(data.currentPassword, data.newPassword).then(\n            () => {\n                toast.success(intl.formatMessage({ id: 'TEXT_TOAST_PASSWORD_CHANGED' }));\n            },\n            (error: Error) => {\n                setServerError(`ERROR_API_${error.message}`);\n            },\n        );\n    }, [intl]);\n\n    return (\n        <div className=\"card\">\n            <PageTitle>{intl.formatMessage({ id: 'HEADER_CHANGE_PASSWORD' })}</PageTitle>\n\n            <div className=\"card-header\">\n                <h5><FormattedMessage id=\"HEADER_CHANGE_PASSWORD\" /></h5>\n            </div>\n            <div className=\"card-divider\" />\n            <div className=\"card-body card-body--padding--2\">\n                <div className=\"row no-gutters\">\n                    <form onSubmit={handleSubmit(submit)} className=\"col-12 col-lg-7 col-xl-6\">\n                        {serverError && (\n                            <div className=\"alert alert-sm alert-danger\">\n                                <FormattedMessage id={serverError} />\n                            </div>\n                        )}\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password-current\">\n                                <FormattedMessage id=\"INPUT_PASSWORD_CURRENT_LABEL\" />\n                            </label>\n                            <input\n                                type=\"password\"\n                                id=\"password-current\"\n                                name=\"currentPassword\"\n                                className={classNames('form-control', {\n                                    'is-invalid': errors.currentPassword,\n                                })}\n                                placeholder={intl.formatMessage({ id: 'INPUT_PASSWORD_CURRENT_PLACEHOLDER' })}\n                                ref={register({ required: true })}\n                            />\n                            <div className=\"invalid-feedback\">\n                                {errors.currentPassword?.type === 'required' && (\n                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password-new\">\n                                <FormattedMessage id=\"INPUT_PASSWORD_NEW_LABEL\" />\n                            </label>\n                            <input\n                                type=\"password\"\n                                id=\"password-new\"\n                                name=\"newPassword\"\n                                className={classNames('form-control', {\n                                    'is-invalid': errors.newPassword,\n                                })}\n                                placeholder={intl.formatMessage({ id: 'INPUT_PASSWORD_NEW_PLACEHOLDER' })}\n                                ref={register({ required: true })}\n                            />\n                            <div className=\"invalid-feedback\">\n                                {errors.newPassword?.type === 'required' && (\n                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password-confirm\">\n                                <FormattedMessage id=\"INPUT_PASSWORD_REPEAT_LABEL\" />\n                            </label>\n                            <input\n                                type=\"password\"\n                                id=\"password-confirm\"\n                                name=\"confirmPassword\"\n                                className={classNames('form-control', {\n                                    'is-invalid': errors.confirmPassword,\n                                })}\n                                placeholder={intl.formatMessage({ id: 'INPUT_PASSWORD_REPEAT_PLACEHOLDER' })}\n                                ref={register({\n                                    required: true,\n                                    validate: {\n                                        match: (value) => value === watch('newPassword'),\n                                    },\n                                })}\n                            />\n                            <div className=\"invalid-feedback\">\n                                {errors.confirmPassword?.type === 'required' && (\n                                    <FormattedMessage id=\"ERROR_FORM_REQUIRED\" />\n                                )}\n                                {errors.confirmPassword?.type === 'match' && (\n                                    <FormattedMessage id=\"ERROR_FORM_PASSWORD_DOES_NOT_MATCH\" />\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"form-group mb-0\">\n                            <button\n                                type=\"submit\"\n                                className={classNames('btn', 'btn-primary', 'mt-3', {\n                                    'btn-loading': submitInProgress,\n                                })}\n                            >\n                                <FormattedMessage id=\"BUTTON_CHANGE\" />\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nPage.Layout = AccountLayout;\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}