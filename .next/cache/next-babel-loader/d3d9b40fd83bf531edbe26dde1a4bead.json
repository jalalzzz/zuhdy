{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\account\\\\AccountLayout.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport Redirect from '~/components/shared/Redirect';\nimport url from '~/services/url';\nimport { useAppRouter } from '~/services/router';\nimport { useAsyncAction } from '~/store/hooks';\nimport { useUser, useUserSignOut } from '~/store/user/userHooks';\n\nfunction AccountLayout(props) {\n  _s();\n\n  var _this = this;\n\n  var children = props.children;\n  var intl = useIntl();\n  var router = useAppRouter();\n  var userSignOut = useUserSignOut();\n  var user = useUser();\n\n  var _useAsyncAction = useAsyncAction(function () {\n    return userSignOut();\n  }, [userSignOut]),\n      _useAsyncAction2 = _slicedToArray(_useAsyncAction, 1),\n      onSignOutClick = _useAsyncAction2[0];\n\n  var navigation = [{\n    title: intl.formatMessage({\n      id: 'LINK_ACCOUNT_DASHBOARD'\n    }),\n    url: url.accountDashboard()\n  }, {\n    title: intl.formatMessage({\n      id: 'LINK_ACCOUNT_GARAGE'\n    }),\n    url: url.accountGarage()\n  }, {\n    title: intl.formatMessage({\n      id: 'LINK_ACCOUNT_PROFILE'\n    }),\n    url: url.accountProfile()\n  }, {\n    title: intl.formatMessage({\n      id: 'LINK_ACCOUNT_ORDERS'\n    }),\n    url: url.accountOrders()\n  }, {\n    title: intl.formatMessage({\n      id: 'LINK_ACCOUNT_ADDRESSES'\n    }),\n    url: url.accountAddresses()\n  }, {\n    title: intl.formatMessage({\n      id: 'LINK_ACCOUNT_PASSWORD'\n    }),\n    url: url.accountPassword()\n  }];\n\n  if (!user) {\n    return __jsx(Redirect, {\n      href: url.signIn(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(BlockSpace, {\n    layout: \"after-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"container container--max--xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12 col-lg-3 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"account-nav flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, __jsx(\"h4\", {\n    className: \"account-nav__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_NAVIGATION\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  })), __jsx(\"ul\", {\n    className: \"account-nav__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, navigation.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index,\n      className: classNames('account-nav__item', {\n        'account-nav__item--active': router.pathname === item.url\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    }, __jsx(AppLink, {\n      href: item.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }, item.title));\n  }), __jsx(\"li\", {\n    className: \"account-nav__divider\",\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }), __jsx(\"li\", {\n    className: \"account-nav__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: onSignOutClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_LOGOUT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 45\n    }\n  })))))), __jsx(\"div\", {\n    className: \"col-12 col-lg-9 mt-4 mt-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, children)))), __jsx(BlockSpace, {\n    layout: \"before-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(AccountLayout, \"f/jB7yJObSCVTqvjyTRaa9IAtOM=\", false, function () {\n  return [useIntl, useAppRouter, useUserSignOut, useUser, useAsyncAction];\n});\n\n_c = AccountLayout;\nexport default AccountLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountLayout\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/account/AccountLayout.tsx"],"names":["React","classNames","FormattedMessage","useIntl","AppLink","BlockSpace","Redirect","url","useAppRouter","useAsyncAction","useUser","useUserSignOut","AccountLayout","props","children","intl","router","userSignOut","user","onSignOutClick","navigation","title","formatMessage","id","accountDashboard","accountGarage","accountProfile","accountOrders","accountAddresses","accountPassword","signIn","map","item","index","pathname"],"mappings":"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","sourcesContent":["// react\nimport React, { PropsWithChildren } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport Redirect from '~/components/shared/Redirect';\nimport url from '~/services/url';\nimport { ILink } from '~/interfaces/link';\nimport { useAppRouter } from '~/services/router';\nimport { useAsyncAction } from '~/store/hooks';\nimport { useUser, useUserSignOut } from '~/store/user/userHooks';\n\ninterface Props extends PropsWithChildren<{}> { }\n\nfunction AccountLayout(props: Props) {\n    const { children } = props;\n    const intl = useIntl();\n    const router = useAppRouter();\n    const userSignOut = useUserSignOut();\n    const user = useUser();\n    const [onSignOutClick] = useAsyncAction(() => userSignOut(), [userSignOut]);\n\n    const navigation: ILink[] = [\n        { title: intl.formatMessage({ id: 'LINK_ACCOUNT_DASHBOARD' }), url: url.accountDashboard() },\n        { title: intl.formatMessage({ id: 'LINK_ACCOUNT_GARAGE' }), url: url.accountGarage() },\n        { title: intl.formatMessage({ id: 'LINK_ACCOUNT_PROFILE' }), url: url.accountProfile() },\n        { title: intl.formatMessage({ id: 'LINK_ACCOUNT_ORDERS' }), url: url.accountOrders() },\n        { title: intl.formatMessage({ id: 'LINK_ACCOUNT_ADDRESSES' }), url: url.accountAddresses() },\n        { title: intl.formatMessage({ id: 'LINK_ACCOUNT_PASSWORD' }), url: url.accountPassword() },\n    ];\n\n    if (!user) {\n        return <Redirect href={url.signIn()} />;\n    }\n\n    return (\n        <React.Fragment>\n            <BlockSpace layout=\"after-header\" />\n\n            <div className=\"block\">\n                <div className=\"container container--max--xl\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-lg-3 d-flex\">\n                            <div className=\"account-nav flex-grow-1\">\n                                <h4 className=\"account-nav__title\">\n                                    <FormattedMessage id=\"HEADER_NAVIGATION\" />\n                                </h4>\n                                <ul className=\"account-nav__list\">\n                                    {navigation.map((item, index) => (\n                                        <li\n                                            key={index}\n                                            className={classNames('account-nav__item', {\n                                                'account-nav__item--active': router.pathname === item.url,\n                                            })}\n                                        >\n                                            <AppLink href={item.url}>\n                                                {item.title}\n                                            </AppLink>\n                                        </li>\n                                    ))}\n                                    <li className=\"account-nav__divider\" role=\"presentation\" />\n                                    <li className=\"account-nav__item\">\n                                        {/* eslint-disable-next-line */}\n                                        <button type=\"button\" onClick={onSignOutClick}>\n                                            <FormattedMessage id=\"LINK_ACCOUNT_LOGOUT\" />\n                                        </button>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-lg-9 mt-4 mt-lg-0\">\n                            {children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <BlockSpace layout=\"before-footer\" />\n        </React.Fragment>\n    );\n}\n\nexport default AccountLayout;\n"]},"metadata":{},"sourceType":"module"}