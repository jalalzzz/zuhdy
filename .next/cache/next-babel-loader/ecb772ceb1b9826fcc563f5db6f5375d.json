{"ast":null,"code":"/* eslint-disable import/prefer-default-export,no-useless-constructor,no-empty-function */\n// application\nexport class AbstractFilterBuilder {\n  constructor(slug, name) {\n    this.slug = slug;\n    this.name = name;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/filters/abstract-filter-builder.ts"],"names":["AbstractFilterBuilder","constructor","slug","name"],"mappings":"AAAA;AAEA;AAIA,OAAO,MAAeA,qBAAf,CAAqC;AACxCC,EAAAA,WAAW,CACAC,IADA,EAEAC,IAFA,EAGT;AAAA,SAFSD,IAET,GAFSA,IAET;AAAA,SADSC,IACT,GADSA,IACT;AAAG;;AAJmC","sourcesContent":["/* eslint-disable import/prefer-default-export,no-useless-constructor,no-empty-function */\n\n// application\nimport { IProduct } from '~/interfaces/product';\nimport { IFilter } from '~/interfaces/filter';\n\nexport abstract class AbstractFilterBuilder {\n    constructor(\n        public slug: string,\n        public name: string,\n    ) { }\n\n    abstract test(product: IProduct): boolean;\n\n    abstract makeItems(products: IProduct[], value: string): void;\n\n    abstract calc(filters: AbstractFilterBuilder[]): void;\n\n    abstract build(): IFilter;\n}\n"]},"metadata":{},"sourceType":"module"}