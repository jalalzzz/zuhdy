{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\blocks\\\\BlockSlideshow.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport AppSlick from '~/components/shared/AppSlick';\nimport { baseUrl } from '~/services/utils';\nconst slickSettings = {\n  dots: true,\n  arrows: false,\n  infinite: true,\n  speed: 400,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nfunction BlockSlideshow(props) {\n  const {\n    slides\n  } = props;\n  return __jsx(\"div\", {\n    className: \"block block-slideshow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"block-slideshow__carousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(AppSlick, _extends({}, slickSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), slides.map((slide, slideIdx) => __jsx(AppLink, {\n    href: slide.url,\n    key: slideIdx,\n    className: \"block-slideshow__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    className: classNames('block-slideshow__item-image', 'block-slideshow__item-image--desktop', 'reflect-rtl'),\n    style: {\n      backgroundImage: `url(${baseUrl(slide.desktopImage)})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    className: classNames('block-slideshow__item-image', 'block-slideshow__item-image--mobile', 'reflect-rtl'),\n    style: {\n      backgroundImage: `url(${baseUrl(slide.mobileImage)})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }), slide.offer && __jsx(\"span\", {\n    className: \"block-slideshow__item-offer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, slide.offer), __jsx(\"span\", {\n    className: \"block-slideshow__item-title\",\n    dangerouslySetInnerHTML: {\n      __html: slide.title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    className: \"block-slideshow__item-details\",\n    dangerouslySetInnerHTML: {\n      __html: slide.details\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }), __jsx(\"span\", {\n    className: \"block-slideshow__item-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, slide.buttonLabel)))))));\n}\n\nexport default React.memo(BlockSlideshow);","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/blocks/BlockSlideshow.tsx"],"names":["React","classNames","AppLink","AppSlick","baseUrl","slickSettings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","BlockSlideshow","props","slides","map","slide","slideIdx","url","backgroundImage","desktopImage","mobileImage","offer","__html","title","details","buttonLabel","memo"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAsC,8BAAtC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAgBA,MAAMC,aAA0B,GAAG;AAC/BC,EAAAA,IAAI,EAAE,IADyB;AAE/BC,EAAAA,MAAM,EAAE,KAFuB;AAG/BC,EAAAA,QAAQ,EAAE,IAHqB;AAI/BC,EAAAA,KAAK,EAAE,GAJwB;AAK/BC,EAAAA,YAAY,EAAE,CALiB;AAM/BC,EAAAA,cAAc,EAAE;AANe,CAAnC;;AASA,SAASC,cAAT,CAAwBC,KAAxB,EAAsC;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD,eAAcR,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKS,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,QAAR,KACR,MAAC,OAAD;AAAS,IAAA,IAAI,EAAED,KAAK,CAACE,GAArB;AAA0B,IAAA,GAAG,EAAED,QAA/B;AAAyC,IAAA,SAAS,EAAC,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEhB,UAAU,CACjB,6BADiB,EAEjB,sCAFiB,EAGjB,aAHiB,CADzB;AAMI,IAAA,KAAK,EAAE;AAAEkB,MAAAA,eAAe,EAAG,OAAMf,OAAO,CAACY,KAAK,CAACI,YAAP,CAAqB;AAAtD,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AACI,IAAA,SAAS,EAAEnB,UAAU,CACjB,6BADiB,EAEjB,qCAFiB,EAGjB,aAHiB,CADzB;AAMI,IAAA,KAAK,EAAE;AAAEkB,MAAAA,eAAe,EAAG,OAAMf,OAAO,CAACY,KAAK,CAACK,WAAP,CAAoB;AAArD,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBKL,KAAK,CAACM,KAAN,IACG;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CN,KAAK,CAACM,KAArD,CAlBR,EAoBI;AACI,IAAA,SAAS,EAAC,6BADd;AAEI,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEP,KAAK,CAACQ;AAAhB,KAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,EAwBI;AACI,IAAA,SAAS,EAAC,+BADd;AAEI,IAAA,uBAAuB,EAAE;AAAED,MAAAA,MAAM,EAAEP,KAAK,CAACS;AAAhB,KAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EA4BI;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDT,KAAK,CAACU,WAAtD,CA5BJ,CADH,CADL,CADJ,CADJ,CADJ,CADJ;AA0CH;;AAED,eAAe1B,KAAK,CAAC2B,IAAN,CAAWf,cAAX,CAAf","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport AppSlick, { ISlickProps } from '~/components/shared/AppSlick';\nimport { baseUrl } from '~/services/utils';\n\nexport interface IBlockSlideshowSlide {\n    url: string;\n    desktopImage: string;\n    mobileImage: string;\n    offer?: string;\n    title: string;\n    details: string;\n    buttonLabel: string;\n}\n\ninterface Props {\n    slides: IBlockSlideshowSlide[];\n}\n\nconst slickSettings: ISlickProps = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n};\n\nfunction BlockSlideshow(props: Props) {\n    const { slides } = props;\n\n    return (\n        <div className=\"block block-slideshow\">\n            <div className=\"container\">\n                <div className=\"block-slideshow__carousel\">\n                    <AppSlick {...slickSettings}>\n                        {slides.map((slide, slideIdx) => (\n                            <AppLink href={slide.url} key={slideIdx} className=\"block-slideshow__item\">\n                                <span\n                                    className={classNames(\n                                        'block-slideshow__item-image',\n                                        'block-slideshow__item-image--desktop',\n                                        'reflect-rtl',\n                                    )}\n                                    style={{ backgroundImage: `url(${baseUrl(slide.desktopImage)})` }}\n                                />\n                                <span\n                                    className={classNames(\n                                        'block-slideshow__item-image',\n                                        'block-slideshow__item-image--mobile',\n                                        'reflect-rtl',\n                                    )}\n                                    style={{ backgroundImage: `url(${baseUrl(slide.mobileImage)})` }}\n                                />\n                                {slide.offer && (\n                                    <span className=\"block-slideshow__item-offer\">{slide.offer}</span>\n                                )}\n                                <span\n                                    className=\"block-slideshow__item-title\"\n                                    dangerouslySetInnerHTML={{ __html: slide.title }}\n                                />\n                                <span\n                                    className=\"block-slideshow__item-details\"\n                                    dangerouslySetInnerHTML={{ __html: slide.details }}\n                                />\n                                <span className=\"block-slideshow__item-button\">{slide.buttonLabel}</span>\n                            </AppLink>\n                        ))}\n                    </AppSlick>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(BlockSlideshow);\n"]},"metadata":{},"sourceType":"module"}