{"ast":null,"code":"/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { getBrands } from '~/fake-server/endpoints/brands';\nimport { addProductReview, checkout, getCategories, getCategoryBySlug, getFeaturedProducts, getLatestProducts, getPopularProducts, getProductAnalogs, getProductBySlug, getProductReviews, getProductsList, getRelatedProducts, getSearchSuggestions, getSpecialOffers, getTopRatedProducts } from '~/fake-server/endpoints';\nexport class FakeShopApi {\n  getCategoryBySlug(slug, options) {\n    return getCategoryBySlug(slug, options);\n  }\n\n  getCategories(options) {\n    return getCategories(options);\n  }\n\n  getBrands(options) {\n    return getBrands(options);\n  }\n\n  getProductsList(options = {}, filters = {}) {\n    return getProductsList(options, filters);\n  }\n\n  getProductBySlug(slug) {\n    return getProductBySlug(slug);\n  }\n\n  getProductReviews(productId, options) {\n    return getProductReviews(productId, options);\n  }\n\n  addProductReview(productId, data) {\n    return addProductReview(productId, data);\n  }\n\n  getProductAnalogs(productId) {\n    return getProductAnalogs(productId);\n  }\n\n  getRelatedProducts(productId, limit) {\n    return getRelatedProducts(productId, limit);\n  }\n\n  getFeaturedProducts(categorySlug, limit) {\n    return getFeaturedProducts(categorySlug, limit);\n  }\n\n  getPopularProducts(categorySlug, limit) {\n    return getPopularProducts(categorySlug, limit);\n  }\n\n  getTopRatedProducts(categorySlug, limit) {\n    return getTopRatedProducts(categorySlug, limit);\n  }\n\n  getSpecialOffers(limit) {\n    return getSpecialOffers(limit);\n  }\n\n  getLatestProducts(limit) {\n    return getLatestProducts(limit);\n  }\n\n  getSearchSuggestions(query, options) {\n    return getSearchSuggestions(query, options);\n  }\n\n  checkout(data) {\n    return checkout(data);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/api/fake-api/fake-shop.api.ts"],"names":["getBrands","addProductReview","checkout","getCategories","getCategoryBySlug","getFeaturedProducts","getLatestProducts","getPopularProducts","getProductAnalogs","getProductBySlug","getProductReviews","getProductsList","getRelatedProducts","getSearchSuggestions","getSpecialOffers","getTopRatedProducts","FakeShopApi","slug","options","filters","productId","data","limit","categorySlug","query"],"mappings":"AAAA;AAEA;AACA,SAASA,SAAT,QAA0B,gCAA1B;AAiBA,SACIC,gBADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,iBAJJ,EAKIC,mBALJ,EAMIC,iBANJ,EAOIC,kBAPJ,EAQIC,iBARJ,EASIC,gBATJ,EAUIC,iBAVJ,EAWIC,eAXJ,EAYIC,kBAZJ,EAaIC,oBAbJ,EAcIC,gBAdJ,EAeIC,mBAfJ,QAgBO,yBAhBP;AAkBA,OAAO,MAAMC,WAAN,CAAqC;AACxCZ,EAAAA,iBAAiB,CAACa,IAAD,EAAeC,OAAf,EAA4E;AACzF,WAAOd,iBAAiB,CAACa,IAAD,EAAOC,OAAP,CAAxB;AACH;;AAEDf,EAAAA,aAAa,CAACe,OAAD,EAA4D;AACrE,WAAOf,aAAa,CAACe,OAAD,CAApB;AACH;;AAEDlB,EAAAA,SAAS,CAACkB,OAAD,EAAiD;AACtD,WAAOlB,SAAS,CAACkB,OAAD,CAAhB;AACH;;AAEDP,EAAAA,eAAe,CAACO,OAAqB,GAAG,EAAzB,EAA6BC,OAAsB,GAAG,EAAtD,EAAkF;AAC7F,WAAOR,eAAe,CAACO,OAAD,EAAUC,OAAV,CAAtB;AACH;;AAEDV,EAAAA,gBAAgB,CAACQ,IAAD,EAAkC;AAC9C,WAAOR,gBAAgB,CAACQ,IAAD,CAAvB;AACH;;AAEDP,EAAAA,iBAAiB,CAACU,SAAD,EAAoBF,OAApB,EAAmE;AAChF,WAAOR,iBAAiB,CAACU,SAAD,EAAYF,OAAZ,CAAxB;AACH;;AAEDjB,EAAAA,gBAAgB,CAACmB,SAAD,EAAoBC,IAApB,EAAmE;AAC/E,WAAOpB,gBAAgB,CAACmB,SAAD,EAAYC,IAAZ,CAAvB;AACH;;AAEDb,EAAAA,iBAAiB,CAACY,SAAD,EAAyC;AACtD,WAAOZ,iBAAiB,CAACY,SAAD,CAAxB;AACH;;AAEDR,EAAAA,kBAAkB,CAACQ,SAAD,EAAoBE,KAApB,EAAwD;AACtE,WAAOV,kBAAkB,CAACQ,SAAD,EAAYE,KAAZ,CAAzB;AACH;;AAEDjB,EAAAA,mBAAmB,CAACkB,YAAD,EAA8BD,KAA9B,EAAkE;AACjF,WAAOjB,mBAAmB,CAACkB,YAAD,EAAeD,KAAf,CAA1B;AACH;;AAEDf,EAAAA,kBAAkB,CAACgB,YAAD,EAA8BD,KAA9B,EAAkE;AAChF,WAAOf,kBAAkB,CAACgB,YAAD,EAAeD,KAAf,CAAzB;AACH;;AAEDP,EAAAA,mBAAmB,CAACQ,YAAD,EAA8BD,KAA9B,EAAkE;AACjF,WAAOP,mBAAmB,CAACQ,YAAD,EAAeD,KAAf,CAA1B;AACH;;AAEDR,EAAAA,gBAAgB,CAACQ,KAAD,EAAqC;AACjD,WAAOR,gBAAgB,CAACQ,KAAD,CAAvB;AACH;;AAEDhB,EAAAA,iBAAiB,CAACgB,KAAD,EAAqC;AAClD,WAAOhB,iBAAiB,CAACgB,KAAD,CAAxB;AACH;;AAEDT,EAAAA,oBAAoB,CAChBW,KADgB,EAEhBN,OAFgB,EAGoB;AACpC,WAAOL,oBAAoB,CAACW,KAAD,EAAQN,OAAR,CAA3B;AACH;;AAEDhB,EAAAA,QAAQ,CAACmB,IAAD,EAAuC;AAC3C,WAAOnB,QAAQ,CAACmB,IAAD,CAAf;AACH;;AAlEuC","sourcesContent":["/* eslint-disable import/prefer-default-export,class-methods-use-this */\n\n// application\nimport { getBrands } from '~/fake-server/endpoints/brands';\nimport { IBrand } from '~/interfaces/brand';\nimport { IFilterValues, IListOptions, IReviewsList } from '~/interfaces/list';\nimport { IOrder } from '~/interfaces/order';\nimport { IProductsList, IProduct } from '~/interfaces/product';\nimport { IReview } from '~/interfaces/review';\nimport { IShopCategory } from '~/interfaces/category';\nimport {\n    IAddProductReviewData,\n    ICheckoutData,\n    IGetBrandsOptions,\n    IGetCategoriesOptions,\n    IGetCategoryBySlugOptions,\n    IGetSearchSuggestionsOptions,\n    IGetSearchSuggestionsResult,\n    ShopApi,\n} from '~/api/base';\nimport {\n    addProductReview,\n    checkout,\n    getCategories,\n    getCategoryBySlug,\n    getFeaturedProducts,\n    getLatestProducts,\n    getPopularProducts,\n    getProductAnalogs,\n    getProductBySlug,\n    getProductReviews,\n    getProductsList,\n    getRelatedProducts,\n    getSearchSuggestions,\n    getSpecialOffers,\n    getTopRatedProducts,\n} from '~/fake-server/endpoints';\n\nexport class FakeShopApi implements ShopApi {\n    getCategoryBySlug(slug: string, options?: IGetCategoryBySlugOptions): Promise<IShopCategory> {\n        return getCategoryBySlug(slug, options);\n    }\n\n    getCategories(options?: IGetCategoriesOptions): Promise<IShopCategory[]> {\n        return getCategories(options);\n    }\n\n    getBrands(options?: IGetBrandsOptions): Promise<IBrand[]> {\n        return getBrands(options);\n    }\n\n    getProductsList(options: IListOptions = {}, filters: IFilterValues = {}): Promise<IProductsList> {\n        return getProductsList(options, filters);\n    }\n\n    getProductBySlug(slug: string): Promise<IProduct> {\n        return getProductBySlug(slug);\n    }\n\n    getProductReviews(productId: number, options?: IListOptions): Promise<IReviewsList> {\n        return getProductReviews(productId, options);\n    }\n\n    addProductReview(productId: number, data: IAddProductReviewData): Promise<IReview> {\n        return addProductReview(productId, data);\n    }\n\n    getProductAnalogs(productId: number): Promise<IProduct[]> {\n        return getProductAnalogs(productId);\n    }\n\n    getRelatedProducts(productId: number, limit: number): Promise<IProduct[]> {\n        return getRelatedProducts(productId, limit);\n    }\n\n    getFeaturedProducts(categorySlug: string | null, limit: number): Promise<IProduct[]> {\n        return getFeaturedProducts(categorySlug, limit);\n    }\n\n    getPopularProducts(categorySlug: string | null, limit: number): Promise<IProduct[]> {\n        return getPopularProducts(categorySlug, limit);\n    }\n\n    getTopRatedProducts(categorySlug: string | null, limit: number): Promise<IProduct[]> {\n        return getTopRatedProducts(categorySlug, limit);\n    }\n\n    getSpecialOffers(limit: number): Promise<IProduct[]> {\n        return getSpecialOffers(limit);\n    }\n\n    getLatestProducts(limit: number): Promise<IProduct[]> {\n        return getLatestProducts(limit);\n    }\n\n    getSearchSuggestions(\n        query: string,\n        options?: IGetSearchSuggestionsOptions,\n    ): Promise<IGetSearchSuggestionsResult> {\n        return getSearchSuggestions(query, options);\n    }\n\n    checkout(data: ICheckoutData): Promise<IOrder> {\n        return checkout(data);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}