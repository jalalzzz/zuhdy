{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\account\\\\orders.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect, useState } from 'react'; // third-party\n\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AppLink from '~/components/shared/AppLink';\nimport CurrencyFormat from '~/components/shared/CurrencyFormat';\nimport PageTitle from '~/components/shared/PageTitle';\nimport Pagination from '~/components/shared/Pagination';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\n\nfunction Page() {\n  _s();\n\n  var _this = this;\n\n  var intl = useIntl();\n\n  var _useState = useState(null),\n      ordersList = _useState[0],\n      setOrdersList = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  useEffect(function () {\n    accountApi.getOrdersList({\n      limit: 5,\n      page: page\n    }).then(setOrdersList);\n  }, [page]);\n  return __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'HEADER_ORDER_HISTORY'\n  })), __jsx(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_ORDER_HISTORY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }))), ordersList && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"card-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"card-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"table-responsive-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TABLE_NUMBER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }\n  })), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TABLE_DATE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }\n  })), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TABLE_STATUS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 45\n    }\n  })), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TABLE_TOTAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  })))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, ordersList.items.map(function (order) {\n    return __jsx(\"tr\", {\n      key: order.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }\n    }, __jsx(AppLink, {\n      href: url.accountOrderView(order),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 49\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"FORMAT_ORDER_NUMBER\",\n      values: {\n        number: order.number\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 53\n      }\n    }))), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"FORMAT_DATE_MEDIUM\",\n      values: {\n        date: Date.parse(order.createdAt)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 49\n      }\n    })), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"TEXT_ORDER_STATUS_\".concat(order.status),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }\n    })), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 45\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"TEXT_ORDER_TOTAL\",\n      values: {\n        total: __jsx(CurrencyFormat, {\n          value: order.total,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 64\n          }\n        }),\n        quantity: order.quantity\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 49\n      }\n    })));\n  }))))), __jsx(\"div\", {\n    className: \"card-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, __jsx(Pagination, {\n    current: page,\n    siblings: 2,\n    total: ordersList.pages,\n    onPageChange: setPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }))));\n}\n\n_s(Page, \"+wkyk0co72fnHltoXxYOLKAMU74=\", false, function () {\n  return [useIntl];\n});\n\n_c = Page;\nPage.Layout = AccountLayout;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/account/orders.tsx"],"names":["React","useEffect","useState","FormattedMessage","useIntl","AccountLayout","AppLink","CurrencyFormat","PageTitle","Pagination","url","accountApi","Page","intl","ordersList","setOrdersList","page","setPage","getOrdersList","limit","then","formatMessage","id","items","map","order","accountOrderView","number","date","Date","parse","createdAt","status","total","quantity","pages","Layout"],"mappings":"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","sourcesContent":["// react\nimport React, { useEffect, useState } from 'react';\n// third-party\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AppLink from '~/components/shared/AppLink';\nimport CurrencyFormat from '~/components/shared/CurrencyFormat';\nimport PageTitle from '~/components/shared/PageTitle';\nimport Pagination from '~/components/shared/Pagination';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\nimport { IOrdersList } from '~/interfaces/list';\n\nfunction Page() {\n    const intl = useIntl();\n    const [ordersList, setOrdersList] = useState<IOrdersList | null>(null);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        accountApi.getOrdersList({ limit: 5, page }).then(setOrdersList);\n    }, [page]);\n\n    return (\n        <div className=\"card\">\n            <PageTitle>{intl.formatMessage({ id: 'HEADER_ORDER_HISTORY' })}</PageTitle>\n\n            <div className=\"card-header\">\n                <h5><FormattedMessage id=\"HEADER_ORDER_HISTORY\" /></h5>\n            </div>\n\n            {ordersList && (\n                <React.Fragment>\n                    <div className=\"card-divider\" />\n\n                    <div className=\"card-table\">\n                        <div className=\"table-responsive-sm\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            <FormattedMessage id=\"TABLE_NUMBER\" />\n                                        </th>\n                                        <th>\n                                            <FormattedMessage id=\"TABLE_DATE\" />\n                                        </th>\n                                        <th>\n                                            <FormattedMessage id=\"TABLE_STATUS\" />\n                                        </th>\n                                        <th>\n                                            <FormattedMessage id=\"TABLE_TOTAL\" />\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {ordersList.items.map((order) => (\n                                        <tr key={order.id}>\n                                            <td>\n                                                <AppLink href={url.accountOrderView(order)}>\n                                                    <FormattedMessage\n                                                        id=\"FORMAT_ORDER_NUMBER\"\n                                                        values={{ number: order.number }}\n                                                    />\n                                                </AppLink>\n                                            </td>\n                                            <td>\n                                                <FormattedMessage\n                                                    id=\"FORMAT_DATE_MEDIUM\"\n                                                    values={{ date: Date.parse(order.createdAt) }}\n                                                />\n                                            </td>\n                                            <td>\n                                                <FormattedMessage\n                                                    id={`TEXT_ORDER_STATUS_${order.status}`}\n                                                />\n                                            </td>\n                                            <td>\n                                                <FormattedMessage\n                                                    id=\"TEXT_ORDER_TOTAL\"\n                                                    values={{\n                                                        total: <CurrencyFormat value={order.total} />,\n                                                        quantity: order.quantity,\n                                                    }}\n                                                />\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div className=\"card-divider\" />\n                    <div className=\"card-footer\">\n                        <Pagination\n                            current={page}\n                            siblings={2}\n                            total={ordersList.pages}\n                            onPageChange={setPage}\n                        />\n                    </div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\n\nPage.Layout = AccountLayout;\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}