{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\shop\\\\ProductForm.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { useFormContext } from 'react-hook-form'; // application\n\nimport { colorType } from '~/services/color';\n\nfunction ProductForm(props) {\n  const {\n    options,\n    namespace,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"options\", \"namespace\", \"className\"]);\n\n  const {\n    register\n  } = useFormContext();\n  const ns = useMemo(() => namespace ? `${namespace}.` : '', [namespace]);\n  const optionsTemplate = options.map((option, optionIdx) => __jsx(\"div\", {\n    key: optionIdx,\n    className: \"product-form__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"product-form__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, option.name), __jsx(\"div\", {\n    className: \"product-form__control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, option.type === 'default' && __jsx(\"div\", {\n    className: \"input-radio-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"input-radio-label__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, option.values.map((value, valueIdx) => __jsx(\"label\", {\n    key: valueIdx,\n    className: \"input-radio-label__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: `${ns}${option.slug}`,\n    className: \"input-radio-label__input\",\n    value: value.slug,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }\n  }), __jsx(\"span\", {\n    className: \"input-radio-label__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, value.name))))), option.type === 'color' && __jsx(\"div\", {\n    className: \"input-radio-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"input-radio-color__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, option.values.map((value, valueIdx) => __jsx(React.Fragment, {\n    key: valueIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    className: classNames('input-radio-color__item', {\n      'input-radio-color__item--white': colorType(value.color) === 'white'\n    }),\n    id: `product-option-${optionIdx}-${valueIdx}`,\n    style: {\n      color: value.color\n    },\n    title: value.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: `${ns}${option.slug}`,\n    value: value.slug,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  })), __jsx(UncontrolledTooltip, {\n    target: `product-option-${optionIdx}-${valueIdx}`,\n    fade: false,\n    delay: {\n      show: 0,\n      hide: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, value.name))))))));\n  const rootClasses = classNames('product-form', className);\n  return __jsx(\"div\", _extends({\n    className: rootClasses\n  }, rootProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"product-form__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, optionsTemplate));\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shop/ProductForm.tsx"],"names":["React","useMemo","classNames","UncontrolledTooltip","useFormContext","colorType","ProductForm","props","options","namespace","className","rootProps","register","ns","optionsTemplate","map","option","optionIdx","name","type","values","value","valueIdx","slug","required","color","show","hide","rootClasses"],"mappings":"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","sourcesContent":["// react\nimport React, { useMemo } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { useFormContext } from 'react-hook-form';\n// application\nimport { colorType } from '~/services/color';\nimport { IProductOption } from '~/interfaces/product';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    options: IProductOption[];\n    namespace?: string;\n}\n\nfunction ProductForm(props: Props) {\n    const {\n        options,\n        namespace,\n        className,\n        ...rootProps\n    } = props;\n    const { register } = useFormContext();\n    const ns = useMemo(() => (namespace ? `${namespace}.` : ''), [namespace]);\n\n    const optionsTemplate = options.map((option, optionIdx) => (\n        <div key={optionIdx} className=\"product-form__row\">\n            <div className=\"product-form__title\">{option.name}</div>\n            <div className=\"product-form__control\">\n                {option.type === 'default' && (\n                    <div className=\"input-radio-label\">\n                        <div className=\"input-radio-label__list\">\n                            {option.values.map((value, valueIdx) => (\n                                <label key={valueIdx} className=\"input-radio-label__item\">\n                                    <input\n                                        type=\"radio\"\n                                        name={`${ns}${option.slug}`}\n                                        className=\"input-radio-label__input\"\n                                        value={value.slug}\n                                        ref={register({ required: true })}\n                                    />\n\n                                    <span className=\"input-radio-label__title\">{value.name}</span>\n                                </label>\n                            ))}\n                        </div>\n                    </div>\n                )}\n                {option.type === 'color' && (\n                    <div className=\"input-radio-color\">\n                        <div className=\"input-radio-color__list\">\n                            {option.values.map((value, valueIdx) => (\n                                <React.Fragment key={valueIdx}>\n                                    <label\n                                        className={classNames('input-radio-color__item', {\n                                            'input-radio-color__item--white': colorType(value.color) === 'white',\n                                        })}\n                                        id={`product-option-${optionIdx}-${valueIdx}`}\n                                        style={{ color: value.color }}\n                                        title={value.name}\n                                    >\n                                        <input\n                                            type=\"radio\"\n                                            name={`${ns}${option.slug}`}\n                                            value={value.slug}\n                                            ref={register({ required: true })}\n                                        />\n                                        <span />\n                                    </label>\n\n                                    <UncontrolledTooltip\n                                        target={`product-option-${optionIdx}-${valueIdx}`}\n                                        fade={false}\n                                        delay={{ show: 0, hide: 0 }}\n                                    >\n                                        {value.name}\n                                    </UncontrolledTooltip>\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    ));\n\n    const rootClasses = classNames('product-form', className);\n\n    return (\n        <div className={rootClasses} {...rootProps}>\n            <div className=\"product-form__body\">\n                {optionsTemplate}\n            </div>\n        </div>\n    );\n}\n\nexport default ProductForm;\n"]},"metadata":{},"sourceType":"module"}