{"ast":null,"code":"// application\nimport { delayResponse, error } from '~/fake-server/utils';\nexport function accountSignIn(email, password) {\n  if (email === 'red-parts@example.com' && password === '123456') {\n    const user = {\n      email: 'red-parts@example.com',\n      phone: '38 972 588-42-36',\n      firstName: 'Ryan',\n      lastName: 'Ford',\n      avatar: '//www.gravatar.com/avatar/bde30b7dd579b3c9773f80132523b4c3?d=mp&s=88'\n    };\n    return delayResponse(Promise.resolve(user));\n  }\n\n  return delayResponse(() => error('AUTH_WRONG_PASSWORD'));\n}\nexport function accountSignUp(email, password) {\n  if (!/^.+@.+$/.test(email)) {\n    return delayResponse(() => error('AUTH_INVALID_EMAIL'));\n  }\n\n  if (email === 'red-parts@example.com') {\n    return delayResponse(() => error('AUTH_EMAIL_ALREADY_IN_USE'));\n  }\n\n  if (password.length < 6) {\n    return delayResponse(() => error('AUTH_WEAK_PASSWORD'));\n  }\n\n  const user = {\n    email,\n    phone: '38 972 588-42-36',\n    firstName: 'Ryan',\n    lastName: 'Ford',\n    avatar: '//www.gravatar.com/avatar/bde30b7dd579b3c9773f80132523b4c3?d=mp&s=88'\n  };\n  return delayResponse(Promise.resolve(user));\n}\nexport function accountSignOut() {\n  return Promise.resolve();\n}\nexport function accountEditProfile(data) {\n  const user = {\n    email: data.email,\n    phone: data.phone,\n    firstName: data.firstName,\n    lastName: data.lastName,\n    avatar: '//www.gravatar.com/avatar/bde30b7dd579b3c9773f80132523b4c3?d=mp&s=88'\n  };\n  return delayResponse(Promise.resolve(user));\n}\nexport function accountChangePassword(oldPassword, newPassword) {\n  if (newPassword.length < 6) {\n    return delayResponse(() => error('AUTH_WEAK_PASSWORD'));\n  }\n\n  return delayResponse(Promise.resolve());\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/endpoints/account.ts"],"names":["delayResponse","error","accountSignIn","email","password","user","phone","firstName","lastName","avatar","Promise","resolve","accountSignUp","test","length","accountSignOut","accountEditProfile","data","accountChangePassword","oldPassword","newPassword"],"mappings":"AAAA;AACA,SAASA,aAAT,EAAwBC,KAAxB,QAAqC,qBAArC;AAIA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAsCC,QAAtC,EAAwE;AAC3E,MAAID,KAAK,KAAK,uBAAV,IAAqCC,QAAQ,KAAK,QAAtD,EAAgE;AAC5D,UAAMC,IAAW,GAAG;AAChBF,MAAAA,KAAK,EAAE,uBADS;AAEhBG,MAAAA,KAAK,EAAE,kBAFS;AAGhBC,MAAAA,SAAS,EAAE,MAHK;AAIhBC,MAAAA,QAAQ,EAAE,MAJM;AAKhBC,MAAAA,MAAM,EAAE;AALQ,KAApB;AAQA,WAAOT,aAAa,CAACU,OAAO,CAACC,OAAR,CAAgBN,IAAhB,CAAD,CAApB;AACH;;AAED,SAAOL,aAAa,CAAC,MAAMC,KAAK,CAAC,qBAAD,CAAZ,CAApB;AACH;AAED,OAAO,SAASW,aAAT,CAAuBT,KAAvB,EAAsCC,QAAtC,EAAwE;AAC3E,MAAI,CAAC,UAAUS,IAAV,CAAeV,KAAf,CAAL,EAA4B;AACxB,WAAOH,aAAa,CAAC,MAAMC,KAAK,CAAC,oBAAD,CAAZ,CAApB;AACH;;AAED,MAAIE,KAAK,KAAK,uBAAd,EAAuC;AACnC,WAAOH,aAAa,CAAC,MAAMC,KAAK,CAAC,2BAAD,CAAZ,CAApB;AACH;;AAED,MAAIG,QAAQ,CAACU,MAAT,GAAkB,CAAtB,EAAyB;AACrB,WAAOd,aAAa,CAAC,MAAMC,KAAK,CAAC,oBAAD,CAAZ,CAApB;AACH;;AAED,QAAMI,IAAW,GAAG;AAChBF,IAAAA,KADgB;AAEhBG,IAAAA,KAAK,EAAE,kBAFS;AAGhBC,IAAAA,SAAS,EAAE,MAHK;AAIhBC,IAAAA,QAAQ,EAAE,MAJM;AAKhBC,IAAAA,MAAM,EAAE;AALQ,GAApB;AAQA,SAAOT,aAAa,CAACU,OAAO,CAACC,OAAR,CAAgBN,IAAhB,CAAD,CAApB;AACH;AAED,OAAO,SAASU,cAAT,GAAyC;AAC5C,SAAOL,OAAO,CAACC,OAAR,EAAP;AACH;AAED,OAAO,SAASK,kBAAT,CAA4BC,IAA5B,EAAoE;AACvE,QAAMZ,IAAW,GAAG;AAChBF,IAAAA,KAAK,EAAEc,IAAI,CAACd,KADI;AAEhBG,IAAAA,KAAK,EAAEW,IAAI,CAACX,KAFI;AAGhBC,IAAAA,SAAS,EAAEU,IAAI,CAACV,SAHA;AAIhBC,IAAAA,QAAQ,EAAES,IAAI,CAACT,QAJC;AAKhBC,IAAAA,MAAM,EAAE;AALQ,GAApB;AAQA,SAAOT,aAAa,CAACU,OAAO,CAACC,OAAR,CAAgBN,IAAhB,CAAD,CAApB;AACH;AAED,OAAO,SAASa,qBAAT,CAA+BC,WAA/B,EAAoDC,WAApD,EAAwF;AAC3F,MAAIA,WAAW,CAACN,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAOd,aAAa,CAAC,MAAMC,KAAK,CAAC,oBAAD,CAAZ,CAApB;AACH;;AAED,SAAOD,aAAa,CAACU,OAAO,CAACC,OAAR,EAAD,CAApB;AACH","sourcesContent":["// application\nimport { delayResponse, error } from '~/fake-server/utils';\nimport { IEditProfileData } from '~/api/base';\nimport { IUser } from '~/interfaces/user';\n\nexport function accountSignIn(email: string, password: string): Promise<IUser> {\n    if (email === 'red-parts@example.com' && password === '123456') {\n        const user: IUser = {\n            email: 'red-parts@example.com',\n            phone: '38 972 588-42-36',\n            firstName: 'Ryan',\n            lastName: 'Ford',\n            avatar: '//www.gravatar.com/avatar/bde30b7dd579b3c9773f80132523b4c3?d=mp&s=88',\n        };\n\n        return delayResponse(Promise.resolve(user));\n    }\n\n    return delayResponse(() => error('AUTH_WRONG_PASSWORD'));\n}\n\nexport function accountSignUp(email: string, password: string): Promise<IUser> {\n    if (!/^.+@.+$/.test(email)) {\n        return delayResponse(() => error('AUTH_INVALID_EMAIL'));\n    }\n\n    if (email === 'red-parts@example.com') {\n        return delayResponse(() => error('AUTH_EMAIL_ALREADY_IN_USE'));\n    }\n\n    if (password.length < 6) {\n        return delayResponse(() => error('AUTH_WEAK_PASSWORD'));\n    }\n\n    const user: IUser = {\n        email,\n        phone: '38 972 588-42-36',\n        firstName: 'Ryan',\n        lastName: 'Ford',\n        avatar: '//www.gravatar.com/avatar/bde30b7dd579b3c9773f80132523b4c3?d=mp&s=88',\n    };\n\n    return delayResponse(Promise.resolve(user));\n}\n\nexport function accountSignOut(): Promise<void> {\n    return Promise.resolve();\n}\n\nexport function accountEditProfile(data: IEditProfileData): Promise<IUser> {\n    const user: IUser = {\n        email: data.email,\n        phone: data.phone,\n        firstName: data.firstName,\n        lastName: data.lastName,\n        avatar: '//www.gravatar.com/avatar/bde30b7dd579b3c9773f80132523b4c3?d=mp&s=88',\n    };\n\n    return delayResponse(Promise.resolve(user));\n}\n\nexport function accountChangePassword(oldPassword: string, newPassword: string): Promise<void> {\n    if (newPassword.length < 6) {\n        return delayResponse(() => error('AUTH_WEAK_PASSWORD'));\n    }\n\n    return delayResponse(Promise.resolve());\n}\n"]},"metadata":{},"sourceType":"module"}