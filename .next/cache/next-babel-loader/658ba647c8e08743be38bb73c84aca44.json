{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\n// react\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'; // third-party\n\nimport { useDispatch, useSelector } from 'react-redux'; // application\n\nexport function useAppAction(action) {\n  _s();\n\n  var dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(action.apply(void 0, arguments));\n  }, []);\n}\n\n_s(useAppAction, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\n\nexport function useAppSelector(selector) {\n  _s2();\n\n  return useSelector(selector);\n}\n\n_s2(useAppSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport function useMedia(query) {\n  _s3();\n\n  if (!true) {\n    return false;\n  }\n\n  var media = useMemo(function () {\n    return window.matchMedia(query);\n  }, [query]);\n\n  var _useState = useState(media.matches),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    var onChangeMedia = function onChangeMedia() {\n      setState(media.matches);\n    };\n\n    if (media.addEventListener) {\n      media.addEventListener('change', onChangeMedia);\n    } else {\n      // noinspection JSDeprecatedSymbols\n      media.addListener(onChangeMedia);\n    }\n\n    return function () {\n      if (media.removeEventListener) {\n        media.removeEventListener('change', onChangeMedia);\n      } else {\n        // noinspection JSDeprecatedSymbols\n        media.removeListener(onChangeMedia);\n      }\n    };\n  }, [media]);\n  return state;\n}\n\n_s3(useMedia, \"dz8zGlMDf1DZVh+Qs/z4IR6EM3M=\");\n\nexport function useAsyncAction(action) {\n  _s4();\n\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var run = useMemo(function () {\n    return function () {\n      if (loading) {\n        return;\n      }\n\n      setLoading(true);\n      action.apply(void 0, arguments).then(function () {\n        setLoading(false);\n      });\n    };\n  }, [loading, setLoading].concat(_toConsumableArray(deps)));\n  return useMemo(function () {\n    return [run, loading];\n  }, [run, loading]);\n}\n\n_s4(useAsyncAction, \"WsGHD+rMsAnpviKrvjAItAtV7hs=\");\n\nexport function useIsUnmountedRef() {\n  _s5();\n\n  var isUnmountedRef = useRef(false);\n  useEffect(function () {\n    isUnmountedRef.current = false;\n    return function () {\n      isUnmountedRef.current = true;\n    };\n  }, []);\n  return isUnmountedRef;\n}\n\n_s5(useIsUnmountedRef, \"+7lFdNqtqAS3ysKnlnp/YSkfFhU=\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/hooks.ts"],"names":["useCallback","useEffect","useMemo","useRef","useState","useDispatch","useSelector","useAppAction","action","dispatch","useAppSelector","selector","useMedia","query","media","window","matchMedia","matches","state","setState","onChangeMedia","addEventListener","addListener","removeEventListener","removeListener","useAsyncAction","deps","loading","setLoading","run","then","useIsUnmountedRef","isUnmountedRef","current"],"mappings":"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","sourcesContent":["// react\nimport {\n    useCallback,\n    useEffect,\n    useMemo, useRef,\n    useState,\n} from 'react';\n// third-party\nimport { useDispatch, useSelector } from 'react-redux';\n// application\nimport { Fn, ThunkActionFn, ThunkReturnType } from '~/store/types';\nimport { IRootState } from '~/store/root/rootTypes';\n\nexport function useAppAction<T extends Fn>(action: T): (...args: Parameters<T>) => (\n    T extends ThunkActionFn ? ThunkReturnType<T> : ReturnType<T>\n) {\n    const dispatch = useDispatch();\n\n    return useCallback((...args: Parameters<T>) => (\n        dispatch(action(...args))\n    ), []);\n}\n\nexport function useAppSelector<T extends(state: IRootState) => any>(selector: T): ReturnType<T> {\n    return useSelector(selector);\n}\n\nexport function useMedia(query: string) {\n    if (!process.browser) {\n        return false;\n    }\n\n    const media = useMemo(() => window.matchMedia(query), [query]);\n    const [state, setState] = useState(media.matches);\n\n    useEffect(() => {\n        const onChangeMedia = () => {\n            setState(media.matches);\n        };\n\n        if (media.addEventListener) {\n            media.addEventListener('change', onChangeMedia);\n        } else {\n            // noinspection JSDeprecatedSymbols\n            media.addListener(onChangeMedia);\n        }\n\n        return () => {\n            if (media.removeEventListener) {\n                media.removeEventListener('change', onChangeMedia);\n            } else {\n                // noinspection JSDeprecatedSymbols\n                media.removeListener(onChangeMedia);\n            }\n        };\n    }, [media]);\n\n    return state;\n}\n\ntype AsyncActionFn = (...args: any[]) => Promise<any>;\n\nexport function useAsyncAction<T extends AsyncActionFn>(\n    action: T,\n    deps: any[] = [],\n): [(...args: Parameters<T>) => void, boolean] {\n    const [loading, setLoading] = useState(false);\n\n    const run = useMemo(() => (...args: Parameters<T>) => {\n        if (loading) {\n            return;\n        }\n\n        setLoading(true);\n\n        action(...args).then(() => {\n            setLoading(false);\n        });\n    }, [loading, setLoading, ...deps]);\n\n    return useMemo(() => [run, loading], [run, loading]);\n}\n\nexport function useIsUnmountedRef() {\n    const isUnmountedRef = useRef<boolean>(false);\n\n    useEffect(() => {\n        isUnmountedRef.current = false;\n\n        return () => {\n            isUnmountedRef.current = true;\n        };\n    }, []);\n\n    return isUnmountedRef;\n}\n"]},"metadata":{},"sourceType":"module"}