{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\account\\\\addresses.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect, useState } from 'react'; // third-party\n\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AddressCard from '~/components/shared/AddressCard';\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport PageTitle from '~/components/shared/PageTitle';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\n\nfunction Page() {\n  _s();\n\n  var _this = this;\n\n  var intl = useIntl();\n\n  var _useState = useState([]),\n      addresses = _useState[0],\n      setAddresses = _useState[1];\n\n  var delAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(addressId) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return accountApi.delAddress(addressId);\n\n            case 2:\n              _context.next = 4;\n              return accountApi.getAddresses().then(setAddresses);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function delAddress(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var canceled = false;\n    accountApi.getAddresses().then(function (result) {\n      if (canceled) {\n        return;\n      }\n\n      setAddresses(result);\n    });\n    return function () {\n      canceled = true;\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"addresses-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'HEADER_ADDRESSES'\n  })), __jsx(AppLink, {\n    href: url.accountAddressNew(),\n    className: \"addresses-list__item addresses-list__item--new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"addresses-list__plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"btn btn-secondary btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_NEW\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"addresses-list__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), addresses.map(function (address, index) {\n    return __jsx(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, __jsx(AsyncAction, {\n      action: function action() {\n        return delAddress(address.id);\n      },\n      render: function render(_ref2) {\n        var run = _ref2.run,\n            loading = _ref2.loading;\n        return __jsx(AddressCard, {\n          className: \"addresses-list__item\",\n          address: address,\n          label: address[\"default\"] ? __jsx(FormattedMessage, {\n            id: \"TEXT_DEFAULT_ADDRESS\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 58\n            }\n          }) : '',\n          loading: loading,\n          footer: __jsx(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }\n          }, __jsx(AppLink, {\n            href: url.accountAddressEdit(address),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }\n          }, __jsx(FormattedMessage, {\n            id: \"LINK_EDIT_ADDRESS\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }\n          })), \"\\xA0\\xA0\", __jsx(AppLink, {\n            anchor: true,\n            onClick: function onClick(event) {\n              event.preventDefault();\n              run();\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }\n          }, __jsx(FormattedMessage, {\n            id: \"LINK_REMOVE\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }\n          }))),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"addresses-list__divider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }));\n  }));\n}\n\n_s(Page, \"6wLwP7mtbDRSrRaJPcRns9iXCuU=\", false, function () {\n  return [useIntl];\n});\n\n_c = Page;\nPage.Layout = AccountLayout;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/account/addresses.tsx"],"names":["React","useEffect","useState","FormattedMessage","useIntl","AccountLayout","AddressCard","AppLink","AsyncAction","PageTitle","url","accountApi","Page","intl","addresses","setAddresses","delAddress","addressId","getAddresses","then","canceled","result","formatMessage","id","accountAddressNew","map","address","index","run","loading","accountAddressEdit","event","preventDefault","Layout"],"mappings":"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","sourcesContent":["// react\nimport React, { useEffect, useState } from 'react';\n// third-party\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AddressCard from '~/components/shared/AddressCard';\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport PageTitle from '~/components/shared/PageTitle';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\nimport { IAddress } from '~/interfaces/address';\n\nfunction Page() {\n    const intl = useIntl();\n    const [addresses, setAddresses] = useState<IAddress[]>([]);\n\n    const delAddress = async (addressId: number) => {\n        await accountApi.delAddress(addressId);\n        await accountApi.getAddresses().then(setAddresses);\n    };\n\n    useEffect(() => {\n        let canceled = false;\n\n        accountApi.getAddresses().then((result) => {\n            if (canceled) {\n                return;\n            }\n\n            setAddresses(result);\n        });\n\n        return () => {\n            canceled = true;\n        };\n    }, []);\n\n    return (\n        <div className=\"addresses-list\">\n            <PageTitle>{intl.formatMessage({ id: 'HEADER_ADDRESSES' })}</PageTitle>\n\n            <AppLink href={url.accountAddressNew()} className=\"addresses-list__item addresses-list__item--new\">\n                <div className=\"addresses-list__plus\" />\n                <div className=\"btn btn-secondary btn-sm\">\n                    <FormattedMessage id=\"BUTTON_ADD_NEW\" />\n                </div>\n            </AppLink>\n            <div className=\"addresses-list__divider\" />\n\n            {addresses.map((address, index) => (\n                <React.Fragment key={index}>\n                    <AsyncAction\n                        action={() => delAddress(address.id)}\n                        render={({ run, loading }) => (\n                            <AddressCard\n                                className=\"addresses-list__item\"\n                                address={address}\n                                label={address.default ? <FormattedMessage id=\"TEXT_DEFAULT_ADDRESS\" /> : ''}\n                                loading={loading}\n                                footer={(\n                                    <React.Fragment>\n                                        <AppLink href={url.accountAddressEdit(address)}>\n                                            <FormattedMessage id=\"LINK_EDIT_ADDRESS\" />\n                                        </AppLink>\n                                        &nbsp;&nbsp;\n                                        {/* eslint-disable-next-line */}\n                                        <AppLink anchor onClick={(event) => { event.preventDefault(); run(); }}>\n                                            <FormattedMessage id=\"LINK_REMOVE\" />\n                                        </AppLink>\n                                    </React.Fragment>\n                                )}\n                            />\n                        )}\n                    />\n\n                    <div className=\"addresses-list__divider\" />\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\nPage.Layout = AccountLayout;\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}