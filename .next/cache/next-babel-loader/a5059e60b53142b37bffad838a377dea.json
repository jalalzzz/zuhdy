{"ast":null,"code":"// application\nimport { clone, delayResponse, error } from '~/fake-server/utils';\nimport { userVehicles, vehicles } from '~/fake-server/database/vehicles';\nexport function getYears() {\n  var result = [];\n  vehicles.forEach(function (vehicle) {\n    if (result.indexOf(vehicle.year) === -1) {\n      result.push(vehicle.year);\n    }\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getMakes(year) {\n  var result = [];\n  vehicles.filter(function (x) {\n    return x.year === year;\n  }).forEach(function (vehicle) {\n    if (result.indexOf(vehicle.make) === -1) {\n      result.push(vehicle.make);\n    }\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getModels(year, make) {\n  var result = [];\n  vehicles.filter(function (x) {\n    return x.year === year && x.make === make;\n  }).forEach(function (vehicle) {\n    if (result.indexOf(vehicle.model) === -1) {\n      result.push(vehicle.model);\n    }\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getVehicles(year, make, model) {\n  var result = vehicles.filter(function (x) {\n    return x.year === year && x.make === make && x.model === model;\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getVehicleByVin(vin) {\n  var vinValue = vin.trim();\n  var vehicle = vehicles.find(function (x) {\n    return x.model === 'Focus S';\n  });\n\n  if (vinValue === '' || vinValue === 'error' || !vehicle) {\n    return error('Page Not Found');\n  }\n\n  return Promise.resolve(vehicle);\n}\nexport function getUserVehicles() {\n  return Promise.resolve(clone(userVehicles));\n}\nexport function addUserVehicles(vehicleId) {\n  var index = userVehicles.findIndex(function (x) {\n    return x.id === vehicleId;\n  });\n  var vehicle = vehicles.find(function (x) {\n    return x.id === vehicleId;\n  });\n\n  if (vehicle && index === -1) {\n    userVehicles.push(vehicle);\n  }\n\n  return delayResponse(Promise.resolve());\n}\nexport function removeUserVehicles(vehicleId) {\n  var index = userVehicles.findIndex(function (x) {\n    return x.id === vehicleId;\n  });\n\n  if (index !== -1) {\n    userVehicles.splice(index, 1);\n  }\n\n  return delayResponse(Promise.resolve());\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/endpoints/vehicles.ts"],"names":["clone","delayResponse","error","userVehicles","vehicles","getYears","result","forEach","vehicle","indexOf","year","push","Promise","resolve","sort","getMakes","filter","x","make","getModels","model","getVehicles","getVehicleByVin","vin","vinValue","trim","find","getUserVehicles","addUserVehicles","vehicleId","index","findIndex","id","removeUserVehicles","splice"],"mappings":"AAAA;AACA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,KAA/B,QAA4C,qBAA5C;AAEA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,iCAAvC;AAEA,OAAO,SAASC,QAAT,GAAuC;AAC1C,MAAMC,MAAgB,GAAG,EAAzB;AAEAF,EAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC1B,QAAIF,MAAM,CAACG,OAAP,CAAeD,OAAO,CAACE,IAAvB,MAAiC,CAAC,CAAtC,EAAyC;AACrCJ,MAAAA,MAAM,CAACK,IAAP,CAAYH,OAAO,CAACE,IAApB;AACH;AACJ,GAJD;AAMA,SAAOT,aAAa,CAACW,OAAO,CAACC,OAAR,CAAgBP,MAAM,CAACQ,IAAP,EAAhB,CAAD,EAAiC,GAAjC,CAApB;AACH;AAED,OAAO,SAASC,QAAT,CAAkBL,IAAlB,EAAmD;AACtD,MAAMJ,MAAgB,GAAG,EAAzB;AAEAF,EAAAA,QAAQ,CAACY,MAAT,CAAgB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACP,IAAF,KAAWA,IAAlB;AAAA,GAAhB,EAAwCH,OAAxC,CAAgD,UAACC,OAAD,EAAa;AACzD,QAAIF,MAAM,CAACG,OAAP,CAAeD,OAAO,CAACU,IAAvB,MAAiC,CAAC,CAAtC,EAAyC;AACrCZ,MAAAA,MAAM,CAACK,IAAP,CAAYH,OAAO,CAACU,IAApB;AACH;AACJ,GAJD;AAMA,SAAOjB,aAAa,CAACW,OAAO,CAACC,OAAR,CAAgBP,MAAM,CAACQ,IAAP,EAAhB,CAAD,EAAiC,GAAjC,CAApB;AACH;AAED,OAAO,SAASK,SAAT,CAAmBT,IAAnB,EAAiCQ,IAAjC,EAAkE;AACrE,MAAMZ,MAAgB,GAAG,EAAzB;AAEAF,EAAAA,QAAQ,CAACY,MAAT,CAAgB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACP,IAAF,KAAWA,IAAX,IAAmBO,CAAC,CAACC,IAAF,KAAWA,IAArC;AAAA,GAAhB,EAA2DX,OAA3D,CAAmE,UAACC,OAAD,EAAa;AAC5E,QAAIF,MAAM,CAACG,OAAP,CAAeD,OAAO,CAACY,KAAvB,MAAkC,CAAC,CAAvC,EAA0C;AACtCd,MAAAA,MAAM,CAACK,IAAP,CAAYH,OAAO,CAACY,KAApB;AACH;AACJ,GAJD;AAMA,SAAOnB,aAAa,CAACW,OAAO,CAACC,OAAR,CAAgBP,MAAM,CAACQ,IAAP,EAAhB,CAAD,EAAiC,GAAjC,CAApB;AACH;AAED,OAAO,SAASO,WAAT,CAAqBX,IAArB,EAAmCQ,IAAnC,EAAiDE,KAAjD,EAAqF;AACxF,MAAMd,MAAM,GAAGF,QAAQ,CAACY,MAAT,CAAgB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACP,IAAF,KAAWA,IAAX,IAAmBO,CAAC,CAACC,IAAF,KAAWA,IAA9B,IAAsCD,CAAC,CAACG,KAAF,KAAYA,KAAzD;AAAA,GAAhB,CAAf;AAEA,SAAOnB,aAAa,CAACW,OAAO,CAACC,OAAR,CAAgBP,MAAM,CAACQ,IAAP,EAAhB,CAAD,EAAiC,GAAjC,CAApB;AACH;AAED,OAAO,SAASQ,eAAT,CAAyBC,GAAzB,EAAyD;AAC5D,MAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,EAAjB;AAEA,MAAMjB,OAAO,GAAGJ,QAAQ,CAACsB,IAAT,CAAc,UAACT,CAAD;AAAA,WAAOA,CAAC,CAACG,KAAF,KAAY,SAAnB;AAAA,GAAd,CAAhB;;AAEA,MAAII,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,KAAK,OAAhC,IAA2C,CAAChB,OAAhD,EAAyD;AACrD,WAAON,KAAK,CAAC,gBAAD,CAAZ;AACH;;AAED,SAAOU,OAAO,CAACC,OAAR,CAAgBL,OAAhB,CAAP;AACH;AAED,OAAO,SAASmB,eAAT,GAAgD;AACnD,SAAOf,OAAO,CAACC,OAAR,CAAgBb,KAAK,CAACG,YAAD,CAArB,CAAP;AACH;AAED,OAAO,SAASyB,eAAT,CAAyBC,SAAzB,EAA2D;AAC9D,MAAMC,KAAK,GAAG3B,YAAY,CAAC4B,SAAb,CAAuB,UAACd,CAAD;AAAA,WAAOA,CAAC,CAACe,EAAF,KAASH,SAAhB;AAAA,GAAvB,CAAd;AACA,MAAMrB,OAAO,GAAGJ,QAAQ,CAACsB,IAAT,CAAc,UAACT,CAAD;AAAA,WAAOA,CAAC,CAACe,EAAF,KAASH,SAAhB;AAAA,GAAd,CAAhB;;AAEA,MAAIrB,OAAO,IAAIsB,KAAK,KAAK,CAAC,CAA1B,EAA6B;AACzB3B,IAAAA,YAAY,CAACQ,IAAb,CAAkBH,OAAlB;AACH;;AAED,SAAOP,aAAa,CAACW,OAAO,CAACC,OAAR,EAAD,CAApB;AACH;AAED,OAAO,SAASoB,kBAAT,CAA4BJ,SAA5B,EAA8D;AACjE,MAAMC,KAAK,GAAG3B,YAAY,CAAC4B,SAAb,CAAuB,UAACd,CAAD;AAAA,WAAOA,CAAC,CAACe,EAAF,KAASH,SAAhB;AAAA,GAAvB,CAAd;;AAEA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd3B,IAAAA,YAAY,CAAC+B,MAAb,CAAoBJ,KAApB,EAA2B,CAA3B;AACH;;AAED,SAAO7B,aAAa,CAACW,OAAO,CAACC,OAAR,EAAD,CAApB;AACH","sourcesContent":["// application\nimport { clone, delayResponse, error } from '~/fake-server/utils';\nimport { IVehicle } from '~/interfaces/vehicle';\nimport { userVehicles, vehicles } from '~/fake-server/database/vehicles';\n\nexport function getYears(): Promise<number[]> {\n    const result: number[] = [];\n\n    vehicles.forEach((vehicle) => {\n        if (result.indexOf(vehicle.year) === -1) {\n            result.push(vehicle.year);\n        }\n    });\n\n    return delayResponse(Promise.resolve(result.sort()), 750);\n}\n\nexport function getMakes(year: number): Promise<string[]> {\n    const result: string[] = [];\n\n    vehicles.filter((x) => x.year === year).forEach((vehicle) => {\n        if (result.indexOf(vehicle.make) === -1) {\n            result.push(vehicle.make);\n        }\n    });\n\n    return delayResponse(Promise.resolve(result.sort()), 750);\n}\n\nexport function getModels(year: number, make: string): Promise<string[]> {\n    const result: string[] = [];\n\n    vehicles.filter((x) => x.year === year && x.make === make).forEach((vehicle) => {\n        if (result.indexOf(vehicle.model) === -1) {\n            result.push(vehicle.model);\n        }\n    });\n\n    return delayResponse(Promise.resolve(result.sort()), 750);\n}\n\nexport function getVehicles(year: number, make: string, model: string): Promise<IVehicle[]> {\n    const result = vehicles.filter((x) => x.year === year && x.make === make && x.model === model);\n\n    return delayResponse(Promise.resolve(result.sort()), 750);\n}\n\nexport function getVehicleByVin(vin: string): Promise<IVehicle> {\n    const vinValue = vin.trim();\n\n    const vehicle = vehicles.find((x) => x.model === 'Focus S');\n\n    if (vinValue === '' || vinValue === 'error' || !vehicle) {\n        return error('Page Not Found');\n    }\n\n    return Promise.resolve(vehicle);\n}\n\nexport function getUserVehicles(): Promise<IVehicle[]> {\n    return Promise.resolve(clone(userVehicles));\n}\n\nexport function addUserVehicles(vehicleId: number): Promise<void> {\n    const index = userVehicles.findIndex((x) => x.id === vehicleId);\n    const vehicle = vehicles.find((x) => x.id === vehicleId);\n\n    if (vehicle && index === -1) {\n        userVehicles.push(vehicle);\n    }\n\n    return delayResponse(Promise.resolve());\n}\n\nexport function removeUserVehicles(vehicleId: number): Promise<void> {\n    const index = userVehicles.findIndex((x) => x.id === vehicleId);\n\n    if (index !== -1) {\n        userVehicles.splice(index, 1);\n    }\n\n    return delayResponse(Promise.resolve());\n}\n"]},"metadata":{},"sourceType":"module"}