{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n// application\nimport { OPTIONS_HYDRATE, OPTIONS_SET_ALL } from '~/store/options/optionsActionTypes';\n\nfunction optionsSetAll(state, options) {\n  var desktopHeaderVariant = options.desktopHeaderVariant,\n      mobileHeaderVariant = options.mobileHeaderVariant;\n\n  var _ref = desktopHeaderVariant.split('/'),\n      _ref2 = _slicedToArray(_ref, 2),\n      desktopHeaderLayout = _ref2[0],\n      desktopHeaderScheme = _ref2[1];\n\n  return {\n    desktopHeaderLayout: desktopHeaderLayout,\n    desktopHeaderScheme: desktopHeaderScheme,\n    mobileHeaderVariant: mobileHeaderVariant\n  };\n}\n\nvar initialState = {\n  desktopHeaderLayout: 'spaceship',\n  desktopHeaderScheme: 'one',\n  mobileHeaderVariant: 'one'\n};\nexport var OPTIONS_NAMESPACE = 'options';\n\nfunction optionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case OPTIONS_HYDRATE:\n      return action.payload[OPTIONS_NAMESPACE];\n\n    case OPTIONS_SET_ALL:\n      return optionsSetAll(state, action.options);\n\n    default:\n      return state;\n  }\n}\n\nexport default optionsReducer;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/options/optionsReducer.ts"],"names":["OPTIONS_HYDRATE","OPTIONS_SET_ALL","optionsSetAll","state","options","desktopHeaderVariant","mobileHeaderVariant","split","desktopHeaderLayout","desktopHeaderScheme","initialState","OPTIONS_NAMESPACE","optionsReducer","action","type","payload"],"mappings":";AAAA;AACA,SAASA,eAAT,EAA0BC,eAA1B,QAAgE,oCAAhE;;AAQA,SAASC,aAAT,CAAuBC,KAAvB,EAA6CC,OAA7C,EAAmF;AAAA,MACvEC,oBADuE,GACzBD,OADyB,CACvEC,oBADuE;AAAA,MACjDC,mBADiD,GACzBF,OADyB,CACjDE,mBADiD;;AAAA,aAK3ED,oBAAoB,CAACE,KAArB,CAA2B,GAA3B,CAL2E;AAAA;AAAA,MAG3EC,mBAH2E;AAAA,MAI3EC,mBAJ2E;;AAO/E,SAAO;AACHD,IAAAA,mBAAmB,EAAnBA,mBADG;AAEHC,IAAAA,mBAAmB,EAAnBA,mBAFG;AAGHH,IAAAA,mBAAmB,EAAnBA;AAHG,GAAP;AAKH;;AAED,IAAMI,YAA2B,GAAG;AAChCF,EAAAA,mBAAmB,EAAE,WADW;AAEhCC,EAAAA,mBAAmB,EAAE,KAFW;AAGhCH,EAAAA,mBAAmB,EAAE;AAHW,CAApC;AAMA,OAAO,IAAMK,iBAAiB,GAAG,SAA1B;;AAEP,SAASC,cAAT,GAAqE;AAAA,MAA7CT,KAA6C,uEAArCO,YAAqC;AAAA,MAAvBG,MAAuB;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKd,eAAL;AACI,aAAOa,MAAM,CAACE,OAAP,CAAeJ,iBAAf,CAAP;;AACJ,SAAKV,eAAL;AACI,aAAOC,aAAa,CAACC,KAAD,EAAQU,MAAM,CAACT,OAAf,CAApB;;AAEJ;AACI,aAAOD,KAAP;AAPJ;AASH;;AAED,eAAeS,cAAf","sourcesContent":["// application\nimport { OPTIONS_HYDRATE, OPTIONS_SET_ALL, OptionsAction } from '~/store/options/optionsActionTypes';\nimport {\n    IDesktopHeaderLayout,\n    IDesktopHeaderScheme,\n    IOptionsData,\n    IOptionsState,\n} from '~/store/options/optionsTypes';\n\nfunction optionsSetAll(state: IOptionsState, options: IOptionsData): IOptionsState {\n    const { desktopHeaderVariant, mobileHeaderVariant } = options;\n    const [\n        desktopHeaderLayout,\n        desktopHeaderScheme,\n    ] = desktopHeaderVariant.split('/') as [IDesktopHeaderLayout, IDesktopHeaderScheme];\n\n    return {\n        desktopHeaderLayout,\n        desktopHeaderScheme,\n        mobileHeaderVariant,\n    };\n}\n\nconst initialState: IOptionsState = {\n    desktopHeaderLayout: 'spaceship',\n    desktopHeaderScheme: 'one',\n    mobileHeaderVariant: 'one',\n};\n\nexport const OPTIONS_NAMESPACE = 'options';\n\nfunction optionsReducer(state = initialState, action: OptionsAction) {\n    switch (action.type) {\n    case OPTIONS_HYDRATE:\n        return action.payload[OPTIONS_NAMESPACE];\n    case OPTIONS_SET_ALL:\n        return optionsSetAll(state, action.options);\n\n    default:\n        return state;\n    }\n}\n\nexport default optionsReducer;\n"]},"metadata":{},"sourceType":"module"}