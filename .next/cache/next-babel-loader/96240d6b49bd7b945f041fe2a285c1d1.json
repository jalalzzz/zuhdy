{"ast":null,"code":"// third-party\nimport { HYDRATE } from 'next-redux-wrapper'; // application\n\nimport { OPTIONS_NAMESPACE } from '~/store/options/optionsReducer';\nexport var OPTIONS_HYDRATE = HYDRATE;\nexport var OPTIONS_SET_ALL = 'OPTIONS_SET_ALL';","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/store/options/optionsActionTypes.ts"],"names":["HYDRATE","OPTIONS_NAMESPACE","OPTIONS_HYDRATE","OPTIONS_SET_ALL"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,oBAAxB,C,CACA;;AAEA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAO,IAAMC,eAAe,GAAGF,OAAxB;AACP,OAAO,IAAMG,eAAe,GAAG,iBAAxB","sourcesContent":["// third-party\nimport { HYDRATE } from 'next-redux-wrapper';\n// application\nimport { IOptionsData, IOptionsState } from '~/store/options/optionsTypes';\nimport { OPTIONS_NAMESPACE } from '~/store/options/optionsReducer';\n\nexport const OPTIONS_HYDRATE = HYDRATE;\nexport const OPTIONS_SET_ALL = 'OPTIONS_SET_ALL';\n\nexport interface OptionsHydrateAction {\n    type: typeof OPTIONS_HYDRATE;\n    payload: {\n        [OPTIONS_NAMESPACE]: IOptionsState;\n    };\n}\n\nexport interface OptionsSetAll {\n    type: typeof OPTIONS_SET_ALL;\n    options: IOptionsData;\n}\n\nexport type OptionsAction =\n    OptionsHydrateAction |\n    OptionsSetAll;\n"]},"metadata":{},"sourceType":"module"}