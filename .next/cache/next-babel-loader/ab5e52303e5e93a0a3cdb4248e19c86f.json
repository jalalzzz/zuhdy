{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\header\\\\MegamenuLinks.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '~/components/shared/AppLink';\n\nfunction MegamenuLinks(props) {\n  const {\n    links,\n    level = 0,\n    onItemClick,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"links\", \"level\", \"onItemClick\", \"className\"]);\n\n  const rootClasses = classNames('megamenu-links', className, {\n    'megamenu-links--root': level === 0\n  });\n  return __jsx(\"ul\", _extends({\n    className: rootClasses\n  }, rootProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), links.map((link, linkIndex) => {\n    var _link$customFields;\n\n    const subLinks = link.links || [];\n    const hasSubLinks = subLinks.length > 0;\n    const linkClasses = classNames('megamenu-links__item', {\n      'megamenu-links__item--has-submenu': link.links\n    });\n    return __jsx(\"li\", {\n      className: linkClasses,\n      key: linkIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, __jsx(AppLink, _extends({\n      className: \"megamenu-links__item-link\",\n      href: link.url,\n      onClick: () => onItemClick && onItemClick(link)\n    }, (_link$customFields = link.customFields) === null || _link$customFields === void 0 ? void 0 : _link$customFields.anchorProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }), link.title), hasSubLinks && __jsx(MegamenuLinks, {\n      links: subLinks,\n      level: level + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }));\n  }));\n}\n\nexport default React.memo(MegamenuLinks);","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/header/MegamenuLinks.tsx"],"names":["React","classNames","AppLink","MegamenuLinks","props","links","level","onItemClick","className","rootProps","rootClasses","map","link","linkIndex","subLinks","hasSubLinks","length","linkClasses","url","customFields","anchorProps","title","memo"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AASA,SAASC,aAAT,CAAuBC,KAAvB,EAAqC;AACjC,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,KAAK,GAAG,CAFN;AAGFC,IAAAA,WAHE;AAIFC,IAAAA;AAJE,MAMFJ,KANJ;AAAA,QAKOK,SALP,4BAMIL,KANJ;;AAQA,QAAMM,WAAW,GAAGT,UAAU,CAAC,gBAAD,EAAmBO,SAAnB,EAA8B;AACxD,4BAAwBF,KAAK,KAAK;AADsB,GAA9B,CAA9B;AAIA,SACI;AAAI,IAAA,SAAS,EAAEI;AAAf,KAAgCD,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKJ,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAAA;;AAC5B,UAAMC,QAAQ,GAAGF,IAAI,CAACP,KAAL,IAAc,EAA/B;AACA,UAAMU,WAAW,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAAtC;AACA,UAAMC,WAAW,GAAGhB,UAAU,CAAC,sBAAD,EAAyB;AACnD,2CAAqCW,IAAI,CAACP;AADS,KAAzB,CAA9B;AAIA,WACI;AAAI,MAAA,SAAS,EAAEY,WAAf;AAA4B,MAAA,GAAG,EAAEJ,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AACI,MAAA,SAAS,EAAC,2BADd;AAEI,MAAA,IAAI,EAAED,IAAI,CAACM,GAFf;AAGI,MAAA,OAAO,EAAE,MAAMX,WAAW,IAAIA,WAAW,CAACK,IAAD;AAH7C,6BAIQA,IAAI,CAACO,YAJb,uDAIQ,mBAAmBC,WAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMKR,IAAI,CAACS,KANV,CADJ,EASKN,WAAW,IACR,MAAC,aAAD;AAAe,MAAA,KAAK,EAAED,QAAtB;AAAgC,MAAA,KAAK,EAAER,KAAK,GAAG,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVR,CADJ;AAeH,GAtBA,CADL,CADJ;AA2BH;;AAED,eAAeN,KAAK,CAACsB,IAAN,CAAWnB,aAAX,CAAf","sourcesContent":["// react\nimport React from 'react';\n// third-party\nimport classNames from 'classnames';\n// application\nimport AppLink from '~/components/shared/AppLink';\nimport { ILink, INestedLink } from '~/interfaces/link';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    links: INestedLink[];\n    level?: number;\n    onItemClick?: (item: ILink) => void;\n}\n\nfunction MegamenuLinks(props: Props) {\n    const {\n        links,\n        level = 0,\n        onItemClick,\n        className,\n        ...rootProps\n    } = props;\n\n    const rootClasses = classNames('megamenu-links', className, {\n        'megamenu-links--root': level === 0,\n    });\n\n    return (\n        <ul className={rootClasses} {...rootProps}>\n            {links.map((link, linkIndex) => {\n                const subLinks = link.links || [];\n                const hasSubLinks = subLinks.length > 0;\n                const linkClasses = classNames('megamenu-links__item', {\n                    'megamenu-links__item--has-submenu': link.links,\n                });\n\n                return (\n                    <li className={linkClasses} key={linkIndex}>\n                        <AppLink\n                            className=\"megamenu-links__item-link\"\n                            href={link.url}\n                            onClick={() => onItemClick && onItemClick(link)}\n                            {...link.customFields?.anchorProps}\n                        >\n                            {link.title}\n                        </AppLink>\n                        {hasSubLinks && (\n                            <MegamenuLinks links={subLinks} level={level + 1} />\n                        )}\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default React.memo(MegamenuLinks);\n"]},"metadata":{},"sourceType":"module"}