{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\components\\\\shared\\\\VehicleForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// react\nimport React, { useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport useVehicleForm from '~/services/forms/vehicle';\nimport { vehicleApi } from '~/api';\n\nfunction VehicleForm(props) {\n  _s();\n\n  var _this = this;\n\n  var location = props.location,\n      _props$onVehicleChang = props.onVehicleChange,\n      onVehicleChange = _props$onVehicleChang === void 0 ? function () {} : _props$onVehicleChang;\n  var intl = useIntl();\n  var internalValue = useRef(null);\n  var cancelVinRequest = useRef(function () {});\n\n  var _useState = useState(false),\n      vinIsLoading = _useState[0],\n      setVinIsLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      vinError = _useState2[0],\n      setVinError = _useState2[1];\n\n  var _useState3 = useState(null),\n      vehicleByFilters = _useState3[0],\n      setVehicleByFilters = _useState3[1];\n\n  var _useState4 = useState(null),\n      vehicleByVin = _useState4[0],\n      setVehicleByVin = _useState4[1];\n\n  var updateValue = function updateValue(args) {\n    var value = _objectSpread({\n      vehicleByVin: vehicleByVin,\n      vehicleByFilters: vehicleByFilters\n    }, args);\n\n    var vehicle = value.vehicleByVin || value.vehicleByFilters;\n\n    if (vehicle !== internalValue.current) {\n      internalValue.current = vehicle;\n      onVehicleChange(vehicle);\n    }\n  };\n\n  var vehicleForm = useVehicleForm({\n    onChange: function onChange(vehicle) {\n      setVehicleByFilters(vehicle);\n      updateValue({\n        vehicleByFilters: vehicle\n      });\n    }\n  });\n\n  var handleVinChange = function handleVinChange(event) {\n    var canceled = false;\n    cancelVinRequest.current();\n\n    cancelVinRequest.current = function () {\n      canceled = true;\n    };\n\n    var value = event.currentTarget.value.trim();\n    setVinIsLoading(value !== '');\n\n    if (value === '') {\n      setVehicleByVin(null);\n      setVinError(null);\n      updateValue({\n        vehicleByVin: null\n      });\n    }\n\n    setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var vehicle;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(value === '' || canceled)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return vehicleApi.getVehicleByVin(value);\n\n            case 5:\n              vehicle = _context.sent;\n\n              if (!canceled) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 8:\n              setVehicleByVin(vehicle);\n              setVinError(null);\n              updateValue({\n                vehicleByVin: vehicle\n              });\n              _context.next = 20;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n              if (!canceled) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              setVehicleByVin(null);\n              setVinError(_context.t0);\n              updateValue({\n                vehicleByVin: null\n              });\n\n            case 20:\n              setVinIsLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    })), 350);\n  };\n\n  var rootClasses = classNames('vehicle-form', \"vehicle-form--layout--\".concat(location));\n  return __jsx(\"div\", {\n    className: rootClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, vehicleForm.items.map(function (item, itemIdx) {\n    var options = item.options;\n    return __jsx(\"div\", {\n      key: itemIdx,\n      className: classNames('vehicle-form__item', 'vehicle-form__item--select', {\n        'vehicle-form__item--loading': item.loading\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, __jsx(\"select\", {\n      className: \"form-control\",\n      \"aria-label\": item.label,\n      name: item.key,\n      value: item.value,\n      disabled: item.disabled,\n      onChange: function onChange(e) {\n        return vehicleForm.onItemValueChange(itemIdx, e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, __jsx(\"option\", {\n      value: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, item.placeholder), options.map(function (option, optionIdx) {\n      return __jsx(\"option\", {\n        key: optionIdx,\n        value: vehicleForm.serializeOption(option, item),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, vehicleForm.serializeOption(option, item));\n    })), __jsx(\"div\", {\n      className: \"vehicle-form__loader\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(\"div\", {\n    className: \"vehicle-form__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_OR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: classNames('vehicle-form__item', {\n      'vehicle-form__item--loading': vinIsLoading\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"vehicle-form__item-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"vin\",\n    \"aria-label\": intl.formatMessage({\n      id: 'INPUT_VIN_LABEL'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_VIN_PLACEHOLDER'\n    }),\n    onInput: handleVinChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"vehicle-form__loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  })), (vehicleByVin || vinError !== null) && __jsx(\"div\", {\n    className: \"vehicle-form__item-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, vehicleByVin && __jsx(\"div\", {\n    className: \"alert alert-sm alert-primary my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALERT_VEHICLE_FOUND\",\n    values: vehicleByVin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  })), vinError !== null && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALERT_UNABLE_TO_FIND_VEHICLE_BY_VIN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  })))));\n}\n\n_s(VehicleForm, \"BL4nju6JxxdnrymnSPG+Pn0y4k4=\", false, function () {\n  return [useIntl, useVehicleForm];\n});\n\n_c = VehicleForm;\nexport default VehicleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VehicleForm\");","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/components/shared/VehicleForm.tsx"],"names":["React","useRef","useState","classNames","FormattedMessage","useIntl","useVehicleForm","vehicleApi","VehicleForm","props","location","onVehicleChange","intl","internalValue","cancelVinRequest","vinIsLoading","setVinIsLoading","vinError","setVinError","vehicleByFilters","setVehicleByFilters","vehicleByVin","setVehicleByVin","updateValue","args","value","vehicle","current","vehicleForm","onChange","handleVinChange","event","canceled","currentTarget","trim","setTimeout","getVehicleByVin","rootClasses","items","map","item","itemIdx","options","loading","label","key","disabled","e","onItemValueChange","target","placeholder","option","optionIdx","serializeOption","formatMessage","id"],"mappings":"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","sourcesContent":["// react\nimport React, { useRef, useState } from 'react';\n// third-party\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\n// application\nimport useVehicleForm from '~/services/forms/vehicle';\nimport { IVehicle } from '~/interfaces/vehicle';\nimport { vehicleApi } from '~/api';\n\ntype Location = 'search' | 'account' | 'modal';\n\ninterface Props {\n    location: Location;\n    onVehicleChange?: (event: IVehicle | null) => void;\n}\n\nfunction VehicleForm(props: Props) {\n    const { location, onVehicleChange = () => {} } = props;\n    const intl = useIntl();\n    const internalValue = useRef<IVehicle | null>(null);\n\n    const cancelVinRequest = useRef(() => {});\n    const [vinIsLoading, setVinIsLoading] = useState(false);\n    const [vinError, setVinError] = useState<Error | null>(null);\n\n    const [vehicleByFilters, setVehicleByFilters] = useState<IVehicle | null>(null);\n    const [vehicleByVin, setVehicleByVin] = useState<IVehicle | null>(null);\n\n    const updateValue = (args: { vehicleByVin?: IVehicle | null, vehicleByFilters?: IVehicle | null }) => {\n        const value = { vehicleByVin, vehicleByFilters, ...args };\n        const vehicle = value.vehicleByVin || value.vehicleByFilters;\n\n        if (vehicle !== internalValue.current) {\n            internalValue.current = vehicle;\n\n            onVehicleChange(vehicle);\n        }\n    };\n\n    const vehicleForm = useVehicleForm({\n        onChange: (vehicle) => {\n            setVehicleByFilters(vehicle);\n\n            updateValue({ vehicleByFilters: vehicle });\n        },\n    });\n\n    const handleVinChange = (event: React.FormEvent<HTMLInputElement>) => {\n        let canceled = false;\n\n        cancelVinRequest.current();\n        cancelVinRequest.current = () => {\n            canceled = true;\n        };\n\n        const value = event.currentTarget.value.trim();\n\n        setVinIsLoading(value !== '');\n\n        if (value === '') {\n            setVehicleByVin(null);\n            setVinError(null);\n\n            updateValue({ vehicleByVin: null });\n        }\n\n        setTimeout(async () => {\n            if (value === '' || canceled) {\n                return;\n            }\n\n            try {\n                const vehicle = await vehicleApi.getVehicleByVin(value);\n\n                if (canceled) {\n                    return;\n                }\n\n                setVehicleByVin(vehicle);\n                setVinError(null);\n                updateValue({ vehicleByVin: vehicle });\n            } catch (error) {\n                if (canceled) {\n                    return;\n                }\n\n                setVehicleByVin(null);\n                setVinError(error);\n                updateValue({ vehicleByVin: null });\n            }\n\n            setVinIsLoading(false);\n        }, 350);\n    };\n\n    const rootClasses = classNames('vehicle-form', `vehicle-form--layout--${location}`);\n\n    return (\n        <div className={rootClasses}>\n            {vehicleForm.items.map((item, itemIdx) => {\n                const options = item.options as Array<number | string | IVehicle>;\n\n                return (\n                    <div\n                        key={itemIdx}\n                        className={classNames('vehicle-form__item', 'vehicle-form__item--select', {\n                            'vehicle-form__item--loading': item.loading,\n                        })}\n                    >\n                        <select\n                            className=\"form-control\"\n                            aria-label={item.label}\n                            name={item.key}\n                            value={item.value}\n                            disabled={item.disabled}\n                            onChange={(e) => vehicleForm.onItemValueChange(itemIdx, e.target.value)}\n                        >\n                            <option value=\"none\">{item.placeholder}</option>\n                            {options.map((option, optionIdx) => (\n                                <option key={optionIdx} value={vehicleForm.serializeOption(option, item)}>\n                                    {vehicleForm.serializeOption(option, item)}\n                                </option>\n                            ))}\n                        </select>\n                        <div className=\"vehicle-form__loader\" />\n                    </div>\n                );\n            })}\n            <div className=\"vehicle-form__divider\">\n                <FormattedMessage id=\"TEXT_OR\" />\n            </div>\n            <div className={classNames('vehicle-form__item', { 'vehicle-form__item--loading': vinIsLoading })}>\n                <div className=\"vehicle-form__item-input\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"vin\"\n                        aria-label={intl.formatMessage({ id: 'INPUT_VIN_LABEL' })}\n                        placeholder={intl.formatMessage({ id: 'INPUT_VIN_PLACEHOLDER' })}\n                        onInput={handleVinChange}\n                    />\n                    <div className=\"vehicle-form__loader\" />\n                </div>\n                {(vehicleByVin || vinError !== null) && (\n                    <div className=\"vehicle-form__item-alert\">\n                        {vehicleByVin && (\n                            <div className=\"alert alert-sm alert-primary my-0\">\n                                <FormattedMessage\n                                    id=\"TEXT_ALERT_VEHICLE_FOUND\"\n                                    values={vehicleByVin}\n                                />\n                            </div>\n                        )}\n                        {vinError !== null && (\n                            <div className=\"alert alert-sm alert-danger my-0\">\n                                <FormattedMessage id=\"TEXT_ALERT_UNABLE_TO_FIND_VEHICLE_BY_VIN\" />\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default VehicleForm;\n"]},"metadata":{},"sourceType":"module"}