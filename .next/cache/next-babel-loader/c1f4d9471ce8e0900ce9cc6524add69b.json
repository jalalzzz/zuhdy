{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\n// application\nimport { clone } from '~/fake-server/utils';\nvar countries = [{\n  code: 'RAND',\n  name: 'Random Federation'\n}, {\n  code: 'LAND',\n  name: 'RandomLand'\n}, {\n  code: 'AU',\n  name: 'Australia'\n}, {\n  code: 'DE',\n  name: 'Germany'\n}, {\n  code: 'FR',\n  name: 'France'\n}, {\n  code: 'IT',\n  name: 'Italy'\n}, {\n  code: 'RU',\n  name: 'Russia'\n}, {\n  code: 'UA',\n  name: 'Ukraine'\n}, {\n  code: 'US',\n  name: 'United States'\n}];\nexport function getCountries() {\n  return Promise.resolve(clone(countries));\n}","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/fake-server/endpoints/countries.ts"],"names":["clone","countries","code","name","getCountries","Promise","resolve"],"mappings":"AAAA;AAEA;AACA,SAASA,KAAT,QAAsB,qBAAtB;AAGA,IAAMC,SAAqB,GAAG,CAC1B;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAD0B,EAE1B;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAF0B,EAI1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAJ0B,EAK1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAL0B,EAM1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAN0B,EAO1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAP0B,EAQ1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAR0B,EAS1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAT0B,EAU1B;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAV0B,CAA9B;AAaA,OAAO,SAASC,YAAT,GAA6C;AAChD,SAAOC,OAAO,CAACC,OAAR,CAAgBN,KAAK,CAACC,SAAD,CAArB,CAAP;AACH","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\n// application\nimport { clone } from '~/fake-server/utils';\nimport { ICountry } from '~/interfaces/country';\n\nconst countries: ICountry[] = [\n    { code: 'RAND', name: 'Random Federation' },\n    { code: 'LAND', name: 'RandomLand' },\n\n    { code: 'AU', name: 'Australia' },\n    { code: 'DE', name: 'Germany' },\n    { code: 'FR', name: 'France' },\n    { code: 'IT', name: 'Italy' },\n    { code: 'RU', name: 'Russia' },\n    { code: 'UA', name: 'Ukraine' },\n    { code: 'US', name: 'United States' },\n];\n\nexport function getCountries(): Promise<ICountry[]> {\n    return Promise.resolve(clone(countries));\n}\n"]},"metadata":{},"sourceType":"module"}