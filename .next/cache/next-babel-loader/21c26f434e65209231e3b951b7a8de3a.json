{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shbaita Studio\\\\Documents\\\\project\\\\new1\\\\themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template\\\\Sources\\\\src\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// react\nimport React, { useEffect, useMemo } from 'react'; // third-party\n\nimport AppBase from 'next/app';\nimport Head from 'next/head';\nimport { useStore } from 'react-redux'; // application\n\nimport config from '~/config';\nimport LanguageProvider, { getLanguageInitialProps } from '~/services/i18n/provider';\nimport Layout from '~/components/Layout';\nimport PageTitle from '~/components/shared/PageTitle';\nimport { CurrentVehicleGarageProvider } from '~/services/current-vehicle';\nimport { getLanguageByLocale, getLanguageByPath } from '~/services/i18n/utils';\nimport { load, save, wrapper } from '~/store/store';\nimport { optionsSetAll } from '~/store/options/optionsActions';\nimport { useApplyClientState } from '~/store/client';\nimport { useLoadUserVehicles } from '~/store/garage/garageHooks'; // styles\n\nimport '../scss/index.scss';\nimport '../scss/style.header-spaceship-variant-one.scss';\nimport '../scss/style.header-spaceship-variant-two.scss';\nimport '../scss/style.header-spaceship-variant-three.scss';\nimport '../scss/style.header-classic-variant-one.scss';\nimport '../scss/style.header-classic-variant-two.scss';\nimport '../scss/style.header-classic-variant-three.scss';\nimport '../scss/style.header-classic-variant-four.scss';\nimport '../scss/style.header-classic-variant-five.scss';\nimport '../scss/style.mobile-header-variant-one.scss';\nimport '../scss/style.mobile-header-variant-two.scss';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nfunction App(props) {\n  const {\n    Component,\n    pageProps,\n    languageInitialProps\n  } = props;\n  const store = useStore();\n  const applyClientState = useApplyClientState();\n  const loadUserVehicles = useLoadUserVehicles(); // Loading and saving state on the client side (cart, wishlist, etc.).\n\n  useEffect(() => {\n    const state = load();\n    applyClientState(state || {});\n\n    if (false) {\n      store.subscribe(() => {\n        save(store.getState());\n      });\n    }\n  }, [store, applyClientState]); // Load user vehicles\n\n  useEffect(() => {\n    loadUserVehicles().then();\n  }, [loadUserVehicles]); // preloader\n\n  useEffect(() => {\n    const preloader = document.querySelector('.site-preloader');\n\n    if (!preloader) {\n      return;\n    }\n\n    setTimeout(() => {\n      if (preloader.parentNode) {\n        preloader.parentNode.removeChild(preloader);\n      }\n    }, 100);\n  }, []);\n  const page = useMemo(() => {\n    const PageLayout = Component.Layout || React.Fragment;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, __jsx(PageLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }))));\n  }, [Component, pageProps]); // noinspection HtmlRequiredTitleElement\n\n  return __jsx(LanguageProvider, _extends({}, languageInitialProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), __jsx(CurrentVehicleGarageProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), page));\n}\n\nApp.getInitialProps = async context => {\n  const dispatch = context.ctx.store.dispatch;\n  await dispatch(optionsSetAll({\n    desktopHeaderVariant: config.desktopHeaderVariant,\n    mobileHeaderVariant: config.mobileHeaderVariant\n  }));\n  let language;\n\n  if (typeof context.ctx.query.lang === 'string') {\n    language = getLanguageByLocale(context.ctx.query.lang);\n  } else {\n    language = getLanguageByPath(context.ctx.asPath || context.ctx.pathname);\n  }\n\n  return _objectSpread(_objectSpread({}, await AppBase.getInitialProps(context)), {}, {\n    languageInitialProps: await getLanguageInitialProps(language)\n  });\n};\n\nconst WrappedApp = wrapper.withRedux(App); // noinspection JSUnusedGlobalSymbols\n\nexport default WrappedApp;","map":{"version":3,"sources":["C:/Users/Shbaita Studio/Documents/project/new1/themeforest-irsnufCS-redparts-auto-parts-react-ecommerce-template/Sources/src/pages/_app.tsx"],"names":["React","useEffect","useMemo","AppBase","Head","useStore","config","LanguageProvider","getLanguageInitialProps","Layout","PageTitle","CurrentVehicleGarageProvider","getLanguageByLocale","getLanguageByPath","load","save","wrapper","optionsSetAll","useApplyClientState","useLoadUserVehicles","App","props","Component","pageProps","languageInitialProps","store","applyClientState","loadUserVehicles","state","subscribe","getState","then","preloader","document","querySelector","setTimeout","parentNode","removeChild","page","PageLayout","Fragment","getInitialProps","context","dispatch","ctx","desktopHeaderVariant","mobileHeaderVariant","language","query","lang","asPath","pathname","WrappedApp","withRedux"],"mappings":"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","sourcesContent":["// react\nimport React, { ComponentType, useEffect, useMemo } from 'react';\n// third-party\nimport AppBase, { AppContext, AppProps } from 'next/app';\nimport Head from 'next/head';\nimport { NextComponentType, NextPageContext } from 'next';\nimport { useStore } from 'react-redux';\n// application\nimport config from '~/config';\nimport LanguageProvider, { getLanguageInitialProps, ILanguageProviderProps } from '~/services/i18n/provider';\nimport Layout from '~/components/Layout';\nimport PageTitle from '~/components/shared/PageTitle';\nimport { AppDispatch } from '~/store/types';\nimport { CurrentVehicleGarageProvider } from '~/services/current-vehicle';\nimport { getLanguageByLocale, getLanguageByPath } from '~/services/i18n/utils';\nimport { load, save, wrapper } from '~/store/store';\nimport { optionsSetAll } from '~/store/options/optionsActions';\nimport { useApplyClientState } from '~/store/client';\nimport { useLoadUserVehicles } from '~/store/garage/garageHooks';\n// styles\nimport '../scss/index.scss';\nimport '../scss/style.header-spaceship-variant-one.scss';\nimport '../scss/style.header-spaceship-variant-two.scss';\nimport '../scss/style.header-spaceship-variant-three.scss';\nimport '../scss/style.header-classic-variant-one.scss';\nimport '../scss/style.header-classic-variant-two.scss';\nimport '../scss/style.header-classic-variant-three.scss';\nimport '../scss/style.header-classic-variant-four.scss';\nimport '../scss/style.header-classic-variant-five.scss';\nimport '../scss/style.mobile-header-variant-one.scss';\nimport '../scss/style.mobile-header-variant-two.scss';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\ninterface Props extends AppProps {\n    languageInitialProps: ILanguageProviderProps;\n    Component: NextComponentType<NextPageContext, any> & {\n        Layout: ComponentType,\n    }\n}\n\nfunction App(props: Props) {\n    const { Component, pageProps, languageInitialProps } = props;\n    const store = useStore();\n    const applyClientState = useApplyClientState();\n    const loadUserVehicles = useLoadUserVehicles();\n\n    // Loading and saving state on the client side (cart, wishlist, etc.).\n    useEffect(() => {\n        const state = load();\n\n        applyClientState(state || {});\n\n        if (process.browser) {\n            store.subscribe(() => {\n                save(store.getState());\n            });\n        }\n    }, [store, applyClientState]);\n\n    // Load user vehicles\n    useEffect(() => {\n        loadUserVehicles().then();\n    }, [loadUserVehicles]);\n\n    // preloader\n    useEffect(() => {\n        const preloader = document.querySelector('.site-preloader');\n\n        if (!preloader) {\n            return;\n        }\n\n        setTimeout(() => {\n            if (preloader.parentNode) {\n                preloader.parentNode.removeChild(preloader);\n            }\n        }, 100);\n    }, []);\n\n    const page = useMemo(() => {\n        const PageLayout = Component.Layout || React.Fragment;\n\n        return (\n            <Layout>\n                <PageLayout>\n                    <Component {...pageProps} />\n                </PageLayout>\n            </Layout>\n        );\n    }, [Component, pageProps]);\n\n    // noinspection HtmlRequiredTitleElement\n    return (\n        <LanguageProvider {...languageInitialProps}>\n            <CurrentVehicleGarageProvider>\n                <PageTitle />\n\n                <Head>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n                </Head>\n\n                {page}\n            </CurrentVehicleGarageProvider>\n        </LanguageProvider>\n    );\n}\n\nApp.getInitialProps = async (context: AppContext) => {\n    const dispatch = context.ctx.store.dispatch as AppDispatch;\n\n    await dispatch(optionsSetAll({\n        desktopHeaderVariant: config.desktopHeaderVariant,\n        mobileHeaderVariant: config.mobileHeaderVariant,\n    }));\n\n    let language;\n\n    if (typeof context.ctx.query.lang === 'string') {\n        language = getLanguageByLocale(context.ctx.query.lang);\n    } else {\n        language = getLanguageByPath(context.ctx.asPath || context.ctx.pathname);\n    }\n\n    return {\n        ...(await AppBase.getInitialProps(context)),\n        languageInitialProps: await getLanguageInitialProps(language),\n    };\n};\n\nconst WrappedApp = wrapper.withRedux(App);\n\n// noinspection JSUnusedGlobalSymbols\nexport default WrappedApp;\n"]},"metadata":{},"sourceType":"module"}